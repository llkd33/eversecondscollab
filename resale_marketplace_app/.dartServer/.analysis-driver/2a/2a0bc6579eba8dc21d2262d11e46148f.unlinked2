Äúindex==hashCodeoffset_offsetspandetachtoStringsetupParentData_layoutChildlayoutInlineChildrenpositionInlineChildrendefaultApplyPaintTransformpaintInlineChildrenhitTestInlineChildren_placeholderCharacter_textPainter_textIntrinsicsCache_textIntrinsics_cachedAttributedLabels_cachedCombinedSemanticsInfostext
selections_lastSelectableFragments	registrar
_registrar%_updateSelectionRegistrarSubscription%_removeSelectionRegistrarSubscription_getSelectableFragmentsselectableBelongsToParagraph_disposeSelectableFragmentsalwaysNeedsCompositingmarkNeedsLayoutdispose	textAligntextDirectionsoftWrap	_softWrapoverflow	_overflowtextScaleFactor
textScalermaxLineslocale
strutStyletextWidthBasistextHeightBehaviorselectionColor_selectionColor_getOffsetForPositioncomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthpreferredLineHeight_computeIntrinsicHeightcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeighthitTestSelfhitTestChildren_needsClipping_overflowShaderdebugHasOverflowShadersystemFontsDidChange_placeholderDimensions_adjustMaxWidth_layoutTextWithConstraintscomputeDryLayoutcomputeDistanceToActualBaselinecomputeDryBaselineperformLayoutapplyPaintTransformpaintgetOffsetForCaretgetFullHeightForCaretgetBoxesForSelectiongetPositionForOffsetgetWordBoundary_getLineAtOffset_getTextPositionAbove_getTextPositionBelow_getTextPositionVerticaltextSizedidExceedMaxLines_semanticsInfodescribeSemanticsConfiguration%_childSemanticsConfigurationsDelegate!_createSemanticsConfigForTextInfo_cachedChildNodesassembleSemanticsNode_createShowOnScreenForclearSemanticsdebugDescribeChildrendebugFillPropertiesrange	paragraphfullText_textSelectionStart_textSelectionEnd%_selectableContainsOriginTextBoundary_startHandleLayerLink_endHandleLayerLinkvalue_selectionGeometry_updateSelectionGeometry_getSelectionGeometrydispatchSelectionEventgetSelectedContentgetSelection_didChangeSelection'_updateSelectionStartEdgeByTextBoundary%_updateSelectionEndEdgeByTextBoundary"_updateSelectionEdgeByTextBoundary_updateSelectionEdge6_updateSelectionStartEdgeByMultiSelectableTextBoundary4_updateSelectionEndEdgeByMultiSelectableTextBoundary_placeholderLengthC_updateSelectionStartEdgeAtPlaceholderByMultiSelectableTextBoundaryA_updateSelectionEndEdgeAtPlaceholderByMultiSelectableTextBoundary1_updateSelectionEdgeByMultiSelectableTextBoundary_closestTextBoundary_isPlaceholder_getOriginParagraph_getParagraphContainingPosition_boundingBoxesContains_clampTextPosition_setSelectionPosition_handleClearSelection_handleSelectAll_handleSelectTextBoundary
_intersect&_handleSelectMultiFragmentTextBoundary_adjustTextBoundaryAtPosition_handleSelectWord_getWordBoundaryAtPosition_handleSelectParagraph_getPositionInParagraph_getParagraphBoundaryAtPosition&_getClampedParagraphBoundaryAtPosition#_handleDirectionallyExtendSelection _handleGranularlyExtendSelection"_moveBeyondTextBoundaryAtDirection_moveToTextBoundaryAtDirection_handleVerticalMovement!_positionIsWithinCurrentSelection_compareTextPositionsgetTransformTopushHandleLayers_cachedBoundingBoxesboundingBoxes_cachedRect_rectdidChangeParagraphLayoutcontentLengthsizegetLineAtOffsetgetTextPositionAbovegetTextPositionBelow	_TextBoundaryRecord_TextBoundaryAtPosition_TextBoundaryAtPositionInText
_kEllipsis PlaceholderSpanIndexSemanticsTagTextParentData%RenderInlineChildrenContainerDefaultsRenderParagraph_SelectableFragmentÅ∑BoxHeightStyleBoxWidthStyleGradientLineMetricsPlaceholderAlignmentShaderTextBoxTextHeightBehaviorTextPositionStringRichText	immutableSemanticsTagintoverrideboolObjectindexhashRenderEditable
WidgetSpan
ParentDataContainerParentDataMixin	RenderBoxOffsetPlaceholderSpanParentDataWidgetvoiddetachContainerRenderObjectMixinlayoutInlineChildrenTextPainterpositionInlineChildrenapplyPaintTransformdefaultApplyPaintTransformpaintInlineChildrenpainthitTestInlineChildrenhitTestChildrenextractFromInlineSpan
InlineSpan
parentDataPlaceholderDimensionsBoxConstraintsChildLayouterChildBaselineGetterspanemptysize	alignmentbaselinebaselineOffsetaboveBaselinebelowBaselinebottommiddletopsetPlaceholderDimensions	protectedListdoublemaxWidth
firstChildchild
childAfter_layoutChild
childCountinlinePlaceholderBoxeslength_offsetboxleftoffsetMatrix4setZero	translatedxdyPaintingContext
paintChildBoxHitTestResultaddWithPaintOffsetpositionhitTesttransformed"RelayoutWhenSystemFontsChangeMixin	TextAlignstartTextDirectionTextOverflowclip
Deprecated
TextScaler	noScalingLocale
StrutStyleTextWidthBasisparentColorSelectionRegistrardebugAssertIsValid	identicaltext	textAligntextDirection
textScalerlinearmaxLinesellipsislocale
strutStyletextWidthBasistextHeightBehavioraddAllchildren	registrarfromCharCodeplaceholderCodeUnitAttributedStringInlineSpanSemanticsInformation	compareToRenderComparisonmetadatamarkNeedsSemanticsUpdatemarkNeedsPaintlayoutvisibleForTestingTextSelectionfragment_textSelectionStart_textSelectionEndadd
baseOffsetextentOffsetforEach
isNotEmptymarkNeedsCompositingBitsUpdateremovetoPlainTextincludeSemanticsLabelsindexOf	paragraphrange	TextRangeendfullText
SelectablecontainsdisposeelementdidChangeParagraphLayoutmarkNeedsLayoutjustifyltrrtltextScaleFactoranyvaluehasSelectionRectzeroinfinitySizegetMinIntrinsicWidthChildLayoutHelpergetDryBaselineminIntrinsicWidthgetMaxIntrinsicWidthmaxIntrinsicWidthpreferredLineHeightdryLayoutChildminWidthheight	GlyphInfogetClosestGlyphForOffsetgraphemeClusterLayoutBoundsgetSpanForPositiongraphemeClusterCodeUnitRangeHitTestTargetHitTestEntrysystemFontsDidChange	constrainTextBaselinedebugNeedsLayoutconstraintscomputeDistanceToActualBaseline
alphabeticlayoutChildgetBaselinedidExceedMaxLineswidthvisiblefadeTextSpanstylefadeSizePainter	fadeStartfadeEnddebugRepaintTextRainbowEnabledPaintcolordebugCurrentRepaintColortoColorcanvasdrawRect	saveLayersaveclipRect	blendMode	BlendModemodulateshaderrestoregetOffsetForCaretgetFullHeightForCaretboxHeightStyleboxWidthStyletightgetBoxesForSelectiongetPositionForOffsetgetWordBoundarygetLineBoundaryRenderObjectSemanticsConfigurationdescribeSemanticsConfigurationgetSemanticsInformationinfo
recognizersemanticsIdentifierisPlaceholderexplicitChildNodesisSemanticBoundarychildConfigurationsDelegateStringBufferStringAttributesemanticsLabelstringAttributesinfoAttributecopywritetoString
attributesattributedLabel"ChildSemanticsConfigurationsResult)ChildSemanticsConfigurationsResultBuildercombineSemanticsInfomarkAsMergeUptagsChildrenWithbuildrequiresOwnNodeLinkedHashMapKeySemanticsNodeIterable	elementAtisTaggedisEmptyfirsttoRect	directionskipexpandToIncludetextBoxfromLTWHmaxmin	maxHeightfromLTRBfloorToDoublerightceilToDoublesortKeyOrdinalSortKey
identifierTapGestureRecognizerVoidCallbackDoubleTapGestureRecognizerhandleronTapisLinkLongPressGestureRecognizerGestureLongPressCallbackonLongPressruntimeTypeparentPaintClipRect	intersectisHiddenkeys	UniqueKeykeyshowOnScreen
updateWithconfigrectchildrenInInversePaintOrder
descendantclearSemanticsDiagnosticsNodetoDiagnosticsNodenameDiagnosticsTreeStyle
transitionDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertyFlagPropertyifTrueifFalseshowNameDiagnosticsPropertydefaultValueIntPropertyifNullDiagnosticableChangeNotifierTextLayoutMetricsisValidisCollapsedisNormalized kFlutterMemoryAllocationsEnabledmaybeDispatchObjectCreation	LayerLinkSelectionGeometrynotifyListenersstatusSelectionStatusnone
hasContent_getOffsetForPositionTextSelectionHandleType	collapsedstartSelectionPointSelectionPointlocalPosition
lineHeight_textPainter
handleTypestartSelectionHandleTypeendSelectionPointendSelectionHandleTypeselectionRectsuncollapsedSelectionResultSelectionEventtypeSelectionEventTypestartEdgeUpdateendEdgeUpdateSelectionEdgeUpdateEventTextGranularitygranularity	character
edgeUpdateglobalPositionisEndwordgetTextBoundarygetClampedTextBoundarydocumentlineclear	selectAll
selectWordSelectWordSelectionEventselectParagraphSelectParagraphSelectionEventabsorbnextgranularlyExtendSelectionGranularlyExtendSelectionEventforwarddirectionallyExtendSelection!DirectionallyExtendSelectionEventSelectedContent	plainText	substringSelectedContentRangestartOffset	endOffsetboundaryStartboundaryEndgetTransformToinvertMatrixUtilstransformPointSelectionUtilsgetResultBasedOnRectadjustDragOffsetpreviousaffinity
textInsidepaintBoundsabs_lastSelectableFragments%_selectableContainsOriginTextBoundaryTextAffinity
downstreamupstreamglobalToLocal
centerLeftParagraphBoundarygetLeadingTextBoundaryAtgetTrailingTextBoundaryAtSelectionExtendDirectionpreviousLinebackwardnextLineisNaNMapEntrytargetedEdge(horizontalBaselineInParagraphCoordinatesbelow
moveResult edgeOffsetInParagraphCoordinates$baselineOffsetInParagraphCoordinatesCharacterBoundaryTextBoundarywordBoundariesmoveByWordBoundarytextBoundaryLineBoundaryDocumentBoundarycharacterBoundarycomputeLineMetricslineMetrics
lineNumberattached
fromPointsselectionColorPaintingStylefillshift	pushLayerLeaderLayerlink_getLineAtOffsetclamp_getTextPositionAbove_getTextPositionBelowSemanticsTag
ParentDataContainerParentDataMixin	RenderBoxContainerRenderObjectMixin%RenderInlineChildrenContainerDefaults"RelayoutWhenSystemFontsChangeMixin
SelectableDiagnosticableChangeNotifierTextLayoutMetrics€«¿ÿËı¸/ó3º6À9    Å   dart:collection  Å   Å/Å2mathÅ2	dart:mathÅWÇBoxHeightStyleBoxWidthStyleGradientLineMetricsPlaceholderAlignmentShaderTextBoxTextHeightBehavior Å9   ÅMÅPuiÅPdart:ui  Ç   package:flutter/foundation.dart  Ç9   package:flutter/gestures.dart  Ça   package:flutter/semantics.dart  Çä   package:flutter/services.dart  Ç≥   box.dart  Ç∆   
debug.dart  Ç€   
layer.dart  Ç   layout_helper.dart  É   object.dart  É#   selection.dart¿ xù ¿8qé <ÄÜÄ§Ä•Ä‘ÄÿÄ¯ÅÅÅÅ8ÅIÅSÅ\ÅtÅãÅùÅ≤Å–Å‡ÅÒÇÇÇ8Ç`ÇâÇ±Ç≤Ç≈Ç⁄ÇÔÉÉ"É;É<ÉqÉ…É ÑÑ2ÑâÑäÑﬁÖ
Ö2ÖxÖyÖùÖûÖÁÜ
ÜÜ]Ü|ÜáÜ≈Ü˚ááOáháùá÷á◊áÙàààà7àÖàâàäàñà‚à‰àÂâ0âbâµäää\ä™ä¡ä‚äıäˆã5ã;ãâã¥ãÕãŒã⁄ãÏã˝åå%å)å*å6åñåòåôå„ç0çpçtç√éécé}éÅéØé≥èèSè§èıê-ê1ê~êïêôê€ë ëëXë\ëØë∆ë ëÿë‹í(íXíÑíŒí⁄ìì3ì^ìdìhìiìñì´ì–ìÔîîîeîòî≤î îïïGïlïèï√ï¯ñ-ñ[ñâñ∫ñ˜óó,óJóYófóqóuóvó»óŒòògòmòºôôTôyôô ööö.ö4öÉöæöÀöˇõõ3õ]õcõÆõ“ú&úoúvúzú{ú úﬁú‰ù3ùÄù—ûûû*û0û~ûûû´û„üü0üKü[ülüœü⁄üÍüÚ†C†}†û†§†¿°°6°W°]°a°b°≤°Õ°”¢¢i¢v¢æ££A£[£v£É£¥£∫£æ£ø£ﬂ£Â§4§G§T§ô§º§ÿ•*•d•Ö•ï•ù•‘•ı•˚•ˇ¶ ¶0¶6¶Ö¶ò¶•¶Óßß-ßßπß⁄ßß¯®,®I®e®v®≥®Ú®˚©©#©+©L©R©d©h©j©k©¢© ©”™™A™n™ó™ù™Ì´!´4´K´v´†´∫´È´˙¨¨ä¨∆¨Ã¨Ó≠ ≠3≠G≠c≠û≠Õ≠ÏÆÆ*ÆTÆÖÆîÆ‰ØDØNØkØàØ±Ø‘ØÈ∞∞/∞D∞ß∞ƒ±±'±H±q±¢±≠±√±„±Á±Ë≤+≤T≤Y≤Z≤|≤}≤…≥≥^≥c≥™≥À≥¥¥H¥i¥î¥«¥ÙµµFµkµòµÕ∂∂∂∂C∂D∂ã∂å∂ß∂‘∂Û∑&∑M∑]∑É∑¶∑‘∑¯∏∏>∏f∏î∏Æ∏“∏ˆππ9πaπèπ™π€∫∫3∫9∫=∫>∫n∫t∫¬∫—∫Êªª9ª_ªeª†ªÏºDºYºrº∞ºÓº˚ΩΩΩΩ(Ω,Ω-ΩzΩ ΩÊææækæûæ¿æÌøøø øMøpøàøµøπø∫øÎ¿ @	¿ @¿ @¿ @Y¿ @ë¿ @¡¿ @È¿ @Ô¿ @Û¿ @Ù¿ A%¿ Ag¿ Au¿ A{¿ A∂¿ A∫¿ Aª¿ AÛ¿ BA¿ Bá¿ Bö¿ B¡¿ C¿ C¿ C5¿ CW¿ Ca¿ Cu¿ Cî¿ C±¿ CÁ¿ D¿ D¿ D ¿ D5¿ D=¿ DO¿ DU¿ Dh¿ Dl¿ Dm¿ D±¿ D ¿ D–¿ E¿ EQ¿ Eé¿ E∫¿ EŒ¿ E‘¿ F¿ F¿ F¿ F;¿ Fg¿ Fu¿ F{¿ F«¿ F·¿ FÁ¿ G¿ G¿ G¿ G¿ Gq¿ Gr¿ G~¿ Gô¿ G¿¿ H¿ H¿ H/¿ H3¿ H4¿ H@¿ HS¿ HÄ¿ H£¿ Hø¿ H‰¿ H˘¿ H˝¿ H˛¿ I1¿ If¿ Iâ¿ I¥¿ I¬¿ I»¿ IÏ¿ J¿ J¿ J¿ J-¿ J3¿ Jv¿ J∑¿ JΩ¿ K¿ KZ¿ K®¿ KÒ¿ LA¿ LQ¿ Lì¿ Læ¿ LÌ¿ L˚¿ M¿ M)¿ M@¿ MD¿ ME¿ M~¿ MÑ¿ MŒ¿ M¿ Mˆ¿ NC¿ NR¿ Nt¿ NÜ¿ N£¿ N¡¿ Nœ¿ N’¿ NÏ¿ O¿ O¿ O¿ O5¿ O_¿ Oy¿ Oû¿ Oº¿ O ¿ O–¿ OÁ¿ P7¿ PN¿ PR¿ PS¿ Pô¿ Pµ¿ Pª¿ PÛ¿ P˘¿ QJ¿ Qi¿ Qx¿ Qó¿ R¿ R>¿ RB¿ RÄ¿ Rè¿ RÆ¿ S¿ SU¿ SY¿ S¿ S™¿ SÆ¿ SØ¿ SÊ¿ T¿ TC¿ To¿ T}¿ TÉ¿ T®¿ Tƒ¿ T€¿ Tﬂ¿ T‡¿ U,¿ Uw¿ UØ¿ U›¿ Uﬁ¿ V+¿ V7¿ VT¿ V|¿ V¶¿ V¥¿ V∫¿ V›¿ V˘¿ W¿ W¿ W¿ WW¿ Ws¿ Wy¿ W≈¿ X¿ XZ¿ Xó¿ Xƒ¿ X≈¿ X‚¿ Y ¿ Y(¿ Y6¿ Y<¿ Y]¿ Yy¿ Yê¿ Yî¿ Yï¿ YÃ¿ Z¿ Z¿ Z#¿ ZI¿ Zu¿ ZÉ¿ Zâ¿ ZÆ¿ Z ¿ Z·¿ ZÂ¿ ZÊ¿ [!¿ [e¿ [í¿ [¬¿ [–¿ [÷¿ [ˇ¿ \¿ \2¿ \6¿ \7¿ \a¿ \µ¿ \Ó¿ ]"¿ ]0¿ ]6¿ ]c¿ ]¿ ]ñ¿ ]ö¿ ]õ¿ ]œ¿ ]’¿ ^ ¿ ^P¿ ^j¿ ^è¿ ^≥¿ ^¡¿ ^«¿ ^‰¿ _¿ _T¿ _a¿ _r¿ _ä¿ _ê¿ _î¿ _ï¿ _Õ¿ `-¿ `1¿ `2¿ `>¿ `q¿ `≈¿ `‹¿ a¿ aU¿ a}¿ aÑ¿ a†¿ a‹¿ aÚ¿ b¿ b¿ b¿ b¿ bR¿ b¶¿ bΩ¿ c¿ cP¿ cá¿ c…¿ cÒ¿ c¯¿ d¿ dP¿ df¿ dÇ¿ dÜ¿ dá¿ dÂ¿ dÎ¿ e!¿ e6¿ e|¿ e}¿ eÆ¿ e ¿ e¿ f¿ f'¿ fW¿ fá¿ fñ¿ f¢¿ fÈ¿ f˙¿ f˛¿ fˇ¿ g¿ g>¿ gi¿ gm¿ gn¿ gz¿ g≠¿ gÿ¿ g‹¿ g›¿ gÈ¿ h¿ h¿ h#¿ h0¿ h~¿ hÃ¿ i¿ ii¿ i∏¿ i¸¿ j&¿ jF¿ jî¿ j…¿ k¿ k%¿ k9¿ kP¿ ku¿ kù¿ k≤¿ k¿¿ k¯¿ k˛¿ l¿ l¿ l"¿ l@¿ lA¿ lê¿ lû¿ l§¿ lﬂ¿ lÙ¿ m2¿ m3¿ m?¿ m_¿ mÅ¿ m•¿ m©¿ m™¿ mˆ¿ m˚¿ nJ¿ nö¿ n·¿ o¿ o¿ oE¿ oú¿ o†¿ o°¿ o·¿ oÚ¿ p+¿ på¿ pê¿ pë¿ pù¿ p™¿ pÍ¿ q ¿ q¿ qC¿ qi¿ që¿ q≈¿ q˘¿ r¿ r¿ r4¿ rd¿ r•¿ r∂¿ r…¿ rÒ¿ rı¿ rˆ¿ s¿ sD¿ sc¿ së¿ sæ¿ t	¿ tQ¿ tû¿ tÎ¿ u1¿ uk¿ uΩ¿ u¡¿ u¬¿ uŒ¿ v)¿ vW¿ vk¿ vç¿ v´¿ vÀ¿ v˜¿ w#¿ w.¿ w6¿ wó¿ wÏ¿ w¿ wÒ¿ w˝¿ x¿ x=¿ xà¿ xè¿ x»¿ x˚¿ y¿ y<¿ ya¿ yh¿ yï¿ y◊¿ yÿ¿ z¿ z1¿ z2¿ zñ¿ z’¿ {$¿ {s¿ {¬¿ |¿ |R¿ |ú¿ |π¿ |‘¿ |˜¿ }¿ };¿ }[¿ }¿ }†¿ }¬¿ }‚¿ ~¿ ~>¿ ~ã¿ ~µ¿ ~Ÿ¿ ~ı¿ ¿ .¿ ~¿ ø¿ Ä¿ Ä#¿ ÄU¿ Ä{¿ Äü¿ ÄË¿ Ä˜¿ Å
¿ Å:¿ Åá¿ Åπ¿ Åﬂ¿ Ç¿ ÇL¿ Ç[¿ Çg¿ Çå¿ Çî¿ Ç°¿ Çø¿ Ç›¿ Ç„¿ ÇÁ¿ ÇË¿ ÇÙ¿ É5¿ Ég¿ Ék¿ Él¿ Éx¿ ÉØ¿ Ñ ¿ ÑQ¿ Ñ|¿ Ñ©¿ Ñπ¿ ÑÂ¿ Ö6¿ Öm¿ Öu¿ Öà¿ Öí¿ Öì¿ Ö≠¿ Ö÷¿ Ö˚¿ ÜI¿ ÜÜ¿ Üπ¿ Ü»¿ ÜÁ¿ ÜÔ¿ á¿ á¿ á¿ áI¿ áó¿ á¿¿ á»¿ áŒ¿ áœ¿ áˇ¿ à ¿ à*¿ à+¿ àE¿ àj¿ à¢¿ àæ¿ à“¿ â¿ â+¿ âg¿ âo¿ âè¿ âï¿ âô¿ âö¿ â–¿ â÷¿ â˜¿ ä@¿ ä_¿ äå¿ ä—¿ ä’¿ ä÷¿ ã¿ ã¿ ã?¿ ãw¿ ãñ¿ ã√¿ å¿ å¿ å¿ åJ¿ åP¿ åü¿ åﬂ¿ ç*¿ ç0¿ ç¿ çŒ¿ é¿ é¿ é-¿ é3¿ éC¿ éI¿ éó¿ é∂¿ éﬂ¿ é˛¿ è>¿ è{¿ èÇ¿ è°¿ èŒ¿ è¸¿ ê¿ ê3¿ êW¿ ê^¿ êb¿ êc¿ ê™¿ ê∞¿ ê—¿ ë¿ ë%¿ ëR¿ ëà¿ ëå¿ ëç¿ ë⁄¿ í+¿ íy¿ í°¿ íß¿ íˆ¿ ì4¿ ì:¿ ì[¿ ìê¿ ìØ¿ ì‹¿ î¿ î¿ î¿ îs¿ ît¿ î≤¿ î˝¿ ïF¿ ïÑ¿ ï√¿ ï«¿ ï»¿ ñ¿ ñP¿ ñô¿ ñ÷¿ ó¿ ó¿ ó¿ ór¿ ó∆¿ ò¿ ò`¿ òd¿ òe¿ òï¿ òõ¿ òÏ¿ ô<¿ ôb¿ ôh¿ ô≥¿ ôπ¿ ô⁄¿ ô¿ ö¿ ö-¿ ö1¿ ö2¿ ör¿ öx¿ ö–¿ ö÷¿ ö˜¿ õ¿ õ5¿ õ`¿ õd¿ õe¿ õ¶¿ õ≈¿ õ˝¿ õ˛¿ ú
¿ úQ¿ úÉ¿ ú∏¿ úÂ¿ ù¿ ùa¿ ù™¿ ù’¿ ù‰¿ ùÏ¿ ûM¿ ûS¿ ûT¿ ûz¿ û¢¿ û ¿ û˝¿ üO¿ ü\¿ üâ¿ üΩ¿ ü’¿ †¿ †h¿ †©¿ †¯¿ °9¿ °U¿ °w¿ °ô¿ °–¿ ¢¿ ¢¿ ¢'¿ ¢6¿ ¢B¿ ¢a¿ ¢É¿ ¢ç¿ ¢√¿ £
¿ £¿ £¿ £Y¿ £Ö¿ £ã¿ £è¿ £ê¿ £‹¿ §¿ §¿ §O¿ §Ñ¿ §¢¿ §¡¿ §Ë¿ •¿ •g¿ •ø¿ •ﬂ¿ ¶¿ ¶$¿ ¶|¿ ¶â¿ ¶≥¿ ¶Ω¿ ß¿ ßH¿ ßÜ¿ ß»¿ ßŸ¿ ®¿ ®=¿ ®G¿ ®f¿ ®u¿ ®í¿ ®ö¿ ®†¿ ®°¿ ®À¿ ®Î¿ ©¿ ©\¿ ©e¿ ©k¿ ©á¿ ©ã¿ ©å¿ ©»¿ ©ı¿ ™	¿ ™¿ ™6¿ ™ô¿ ™…¿ ´¿ ´¿ ´2¿ ´F¿ ´y¿ ´Ü¿ ´∏¿ ´‚¿ ¨¿ ¨C¿ ¨L¿ ¨v¿ ¨|¿ ¨†¿ ¨∆¿ ¨Ò¿ ¨ı¿ ¨ˆ¿ ≠B¿ ≠ë¿ ≠–¿ ≠˙¿ Æ2¿ Æ3¿ Æ?¿ Æ]¿ Æu¿ Æò¿ Ææ¿ Æƒ¿ Ø¿ ØE¿ Øy¿ Øè¿ Ø©¿ Øº¿ Ø⁄¿ ØÚ¿ ∞¿ ∞v¿ ∞√¿ ±¿ ±P¿ ±k¿ ±õ¿ ±§¿ ±≈¿ ±∆¿ ±Ê¿ ≤4¿ ≤{¿ ≤™¿ ≤ø¿ ≤Ê¿ ≥7¿ ≥Å¿ ≥”¿ ¥ ¿ ¥K¿ ¥s¿ ¥¿ ¥ö¿ ¥§¿ ¥»¿ ¥Á¿ ¥ˆ¿ µ7¿ µ¿ µú¿ µ∞¿ µ∫¿ µ‰¿ ∂¿ ∂P¿ ∂â¿ ∂π¿ ∂√¿ ∑¿ ∑J¿ ∑h¿ ∑å¿ ∑Ø¿ ∑Â¿ ∏¿ ∏(¿ ∏v¿ ∏«¿ ∏Ï¿ π¿ πA¿ πl¿ πò¿ π£¿ πÿ¿ π˝¿ ∫1¿ ∫b¿ ∫û¿ ∫“¿ ª¿ ª7¿ ªH¿ ªk¿ ª¥¿ º	¿ º,¿ ºY¿ ºÑ¿ ºí¿ º˜¿ Ω¿ ΩU¿ Ωc¿ Ωx¿ Ωã¿ Ωû¿ ΩÌ¿ Ω˜¿ æ'¿ æz¿ æ»¿ æ“¿ æ¯¿ ø.¿ ø~¿ øè¿ øº¿ ¿¿ ¿¿ ¿0¿ ¿^¿ ¿~¿ ¿Ø¿ ¿“¿ ¿⁄¿ ¿‡¿ ¡¿ ¡I¿ ¡d¿ ¡e¿ ¡å¿ ¡€¿ ¡ﬂ¿ ¡‡¿ ¬¿ ¬"¿ ¬]¿ ¬î¿ ¬õ¿ ¬ü¿ ¬†¿ ¬¨¿ ¬∆¿ ¬‚¿ √ ¿ √¿ √¿ √¿ √C¿ √a¿ √µ¿ √º¿ √¿¿ √¡¿ √Õ¿ ƒ¿ ƒ=¿ ƒÇ¿ ƒ”¿ ƒÁ¿ ƒ˚¿ ≈¿ ≈(¿ ≈Q¿ ≈ë¿ ≈©¿ ≈≤¿ ≈π¿ ≈ˇ¿ ∆¿ ∆x¿ ∆¿ ∆÷¿ «"¿ «&¿ «(¿ «)¿ «Z¿ «^¿ «≠¿ «Û¿ »C¿ »é¿ »û¿ »∏¿ »Ï¿ …¿ …m¿ …∑¿ …„¿  ¿  !¿  S¿  W¿  X¿  q¿  î¿  ≠¿  Æ¿  ”¿  ˆ¿  ˜¿ À-¿ À.¿ ÀR¿ Àt¿ Àu¿ ÀÅ¿ À∂¿ À„¿ Ã¿ ÃG¿ ÃH¿ Ãr¿ ÃÄ¿ ÃÜ¿ Ã©¿ Ã¿¿ Ãƒ¿ Ã≈¿ ÃÛ¿ Õ7¿ Õç¿ Õì¿ Õî¿ Õ–¿ Œ¿ ŒC¿ Œô¿ Œ≈¿ ŒÃ¿ Œˇ¿ œ&¿ œV¿ œ©¿ –¿ –7¿ –Y¿ –{¿ –Ç¿ –≤¿ —¿ —-¿ —3¿ —w¿ —É¿ —ª¿ —Ò¿ “&¿ “k¿ “∆¿ ”¿ ”s¿ ”z¿ ”ò¿ ”√¿ ”˝¿ ‘=¿ ‘k¿ ‘t¿ ‘ù¿ ‘’¿ ’¿ ’A¿ ’J¿ ’p¿ ’Ã¿ ’‰¿ ’Î¿ ’Ô¿ ’¿ ’¸¿ ÷=¿ ÷d¿ ÷™¿ ÷Ï¿ ◊¿ ◊5¿ ◊b¿ ◊π¿ ◊¯¿ ◊˘¿ ÿ¿ ÿB¿ ÿm¿ ÿñ¿ ÿ‡¿ ÿÔ¿ Ÿ¿ ŸM¿ Ÿv¿ Ÿ¿¿ Ÿ˚¿ ⁄
¿ ⁄4¿ ⁄|¿ ⁄•¿ ⁄Ô¿ €/¿ €}¿ €å¿ €µ¿ €⁄¿ ‹8¿ ‹B¿ ‹g¿ ‹ë¿ ‹∫¿ ‹ﬂ¿ ›	¿ ›`¿ ›ü¿ ›Œ¿ ﬁ¿ ﬁ@¿ ﬁf¿ ﬁÑ¿ ﬁ≠¿ ﬁÂ¿ ﬁˆ¿ ﬂA¿ ﬂK¿ ﬂÑ¿ ﬂÕ¿ ‡¿ ‡5¿ ‡b¿ ‡ç¿ ‡æ¿ ‡…¿ ·¿ ·T¿ ·å¿ ·¬¿ ·Ì¿ ‚¿ ‚M¿ ‚X¿ ‚^¿ ‚_¿ ‚ò¿ ‚Õ¿ ‚Í¿ ‚¿ „¿ „¿ „¿ „¿ „>¿ „Ç¿ „ï¿ „õ¿ „Û¿ ‰I¿ ‰ê¿ ‰î¿ ‰ï¿ ‰°¿ ‰ ¿ Â¿ Â!¿ Â'¿ ÂH¿ Âx¿ Â§¿ Â´¿ ÂØ¿ Â∞¿ Âœ¿ ÂÔ¿ Ê¿ Ê¿ Ê¿ ÊL¿ Ês¿ Ê†¿ Êª¿ ÊÂ¿ Á¿ Á¿ Á5¿ ÁU¿ Ác¿ Áü¿ ÁŸ¿ Á‚¿ Ë¿ ËA¿ Ëk¿ Ëø¿ ËË¿ È1¿ ÈV¿ Èu¿ ÈÀ¿ ÈÍ¿ Í)¿ Íb¿ Íu¿ Í¨¿ Í∏¿ Î¿ Î]¿ Î¢¿ Ï¿ Ï¿ ÏX¿ Ïõ¿ Ï®¿ Ï…¿ Ì¿ ÌK¿ Ì~¿ Ìó¿ Ì§¿ Ìµ¿ ÌÙ¿ Ó-¿ Ós¿ Ó™¿ ÓΩ¿ Ô¿ ÔN¿ ÔZ¿ Ôd¿ Ôs¿ Ôü¿ ÔÔ¿ K¿ ä¿ √¿ ÷¿ Ò¿ Ò¿ Ò*¿ Òi¿ Ò≤¿ Òº¿ Òƒ¿ Ò—¿ Ú$¿ Úè¿ ÚÃ¿ Úˇ¿ Û+¿ ÛU¿ Û¶¿ Ûˆ¿ Ù9¿ Ùç¿ Ù∂¿ Ùˇ¿ ı$¿ ıC¿ ıô¿ ıö¿ ıπ¿ ˆ¿ ˆ*¿ ˆo¿ ˆ≤¿ ˆø¿ ˆ‡¿ ˜C¿ ˜\¿ ˜i¿ ˜s¿ ˜{¿ ˜Å¿ ˜®¿ ˜¨¿ ˜≠¿ ˜„¿ ¯
¿ ¯7¿ ¯R¿ ¯|¿ ¯§¿ ¯™¿ ¯Ã¿ ¯Ï¿ ¯˙¿ ˘6¿ ˘p¿ ˘y¿ ˘¨¿ ˘ÿ¿ ˙¿ ˙X¿ ˙Å¿ ˙ ¿ ˙Ô¿ ˚¿ ˚f¿ ˚Ö¿ ˚∆¿ ˚ˇ¿ ¸¿ ¸I¿ ¸U¿ ¸®¿ ¸˙¿ ˝?¿ ˝†¿ ˝≤¿ ˝˜¿ ˛:¿ ˛G¿ ˛h¿ ˛º¿ ˛Ï¿ ˇ¿ ˇ9¿ ˇF¿ ˇW¿ ˇò¿ ˇ—¿ ¿ P¿ c¿ ø¿ Ú¿ ˛¿¿¿E¿ï¿Ô¿0¿i¿|¿≥¿ø¿–¿¿V¿`¿h¿u¿»¿3¿p¿£¿œ¿˘¿J¿ö¿›¿3¿\¿•¿ ¿"¿>¿]¿æ¿–¿¿X¿e¿Ü¿È¿	¿	¿	¿	"¿	(¿	O¿	S¿	T¿	ä¿	ß¿	¿¿	ˆ¿	˝¿
O¿
ß¿¿M¿è¿ê¿ø¿˝¿¿m¿Ü¿Œ¿‘¿¿$¿9¿c¿j¿k¿Ω¿¿`¿≤¿÷¿˛¿H¿h¿§¿Ê¿$¿d¿√¿"¿|¿§¿ø¿≈¿¿¿@¿Z¿w¿ç¿±¿”¿ﬂ¿¿.¿K¿a¿Ö¿ß¿¥¿ª¿º¿ı¿#¿F¿L¿M¿}¿§¿™¿˙¿J¿ú¿∂¿¸¿ ¿¿X¿á¿≈¿›¿5¿N¿ñ¿ú¿ﬂ¿Ï¿¿+¿2¿3¿i¿ü¿¶¿Ÿ¿¿$¿*¿T¿{¿Å¿—¿!¿s¿ç¿”¿◊¿ÿ¿%¿k¿ª¿œ¿‘¿$¿n¿æ¿√¿¿;¿Ü¿π¿›¿¯¿"¿J¿P¿n¿ü¿…¿Ò¿A¿U¿∑¿ﬁ¿ 0¿ a¿ Ω¿!¿!Y¿!®¿!¯¿")¿"q¿"å¿"™¿"„¿#¿#,¿#R¿#f¿#q¿#ú¿#º¿#Ÿ¿$¿$L¿$ß¿$‘¿%¿%E¿%Ä¿%ë¿%Î¿&H¿&R¿&q¿&í¿&≤¿'¿'%¿'>¿'K¿'U¿'¶¿'”¿(¿(\¿(ù¿(ƒ¿(Œ¿)¿)V¿)Å¿)ã¿)≤¿*¿*>¿*J¿*≠¿*⁄¿*Ê¿*˜¿+W¿+¿+ã¿+Í¿,¿,¿,)¿,8¿,Ü¿,∆¿-¿-_¿-≠¿-¸¿.L¿.}¿.≈¿.‡¿.˛¿/7¿/p¿/Ä¿/¶¿/∫¿/≈¿0¿0N¿0y¿0É¿0À¿1¿12¿1<¿1É¿1Á¿2'¿2N¿2X¿2¢¿3¿3D¿3o¿3y¿3Å¿3é¿3›¿4'¿4{¿4≤¿4€¿58¿5y¿5é¿5ñ¿5¿¿6¿6C¿6ü¿6›¿7¿7I¿7ñ¿7€¿8¿8p¿8õ¿8•¿8Ë¿9)¿9y¿9†¿9™¿9À¿:¿:t¿:ú¿:®¿:Î¿;=¿;f¿;r¿;É¿;Ë¿</¿<\¿<h¿<∞¿<ÿ¿<‰¿<Ó¿<ˆ¿<¸¿=¿=¿=¿=]¿=£¿=Û¿>¿>¿>Z¿>§¿>Ù¿>˘¿?J¿?s¿?º¿?Ô¿@¿@.¿@X¿@Ä¿@Ü¿@£¿@‘¿@˛¿A&¿Av¿Aä¿AÏ¿B¿Be¿Bñ¿BÚ¿C@¿Cí¿C‰¿D4¿De¿D≠¿D»¿DÔ¿E¿EH¿EÉ¿Eî¿E®¿E≥¿Eﬁ¿E˛¿F¿FU¿Fé¿FÈ¿G¿GS¿Gá¿G¬¿G”¿H-¿Hä¿Hî¿H≥¿H‘¿HÙ¿IX¿Ig¿IÅ¿Ié¿Iò¿IÈ¿J¿J\¿Jü¿J‡¿K¿K¿KV¿Kô¿Kƒ¿KŒ¿Kı¿LU¿L}¿Lâ¿LË¿M¿M¿M.¿Mí¿M∫¿M∆¿N)¿NV¿Nb¿Nl¿N{¿N…¿O	¿OT¿O¢¿OÙ¿PF¿Pñ¿P«¿Q¿Q*¿QQ¿Qo¿Q™¿QÂ¿Qˆ¿R
¿R¿R^¿R¡¿S¿S,¿S6¿S~¿S„¿T#¿TJ¿TT¿Tõ¿T€¿U¿U¿UV¿Uñ¿U¡¿UÀ¿U”¿U‡¿V/¿Vy¿VÕ¿W¿W-¿Wä¿WÀ¿W‡¿WË¿X¿Xp¿Xó¿XÒ¿Y/¿Ym¿Yô¿YÊ¿Z+¿Zn¿Z¿¿ZÎ¿Zı¿[8¿[y¿[…¿[¿[˙¿\¿\Ä¿\«¿\Ù¿] ¿]H¿]p¿]|¿]ç¿]—¿^6¿^^¿^j¿^≠¿^ˇ¿_(¿_4¿_>¿_F¿_L¿_]¿_a¿_b¿_ú¿_ﬂ¿`¿`¿`S¿`†¿`Ê¿a6¿aJ¿aO¿a¢¿aÔ¿bA¿bu¿bz¿b÷¿bˇ¿cW¿cä¿c•¿c…¿c‰¿d¿d6¿d<¿dZ¿dã¿dµ¿d›¿e-¿eA¿e£¿eË¿f:¿fh¿fØ¿f ¿fÔ¿g¿g%¿gE¿gP¿gX¿g§¿gƒ¿h¿h+¿hC¿hL¿h£¿h…¿h“¿i5¿i[¿id¿iè¿i‡¿j0¿js¿j÷¿k¿kK¿ka¿kl¿k¥¿kË¿k˛¿l	¿l4¿lT¿lq¿l©¿l‰¿m	¿md¿m™¿mÁ¿n4¿no¿nÄ¿n⁄¿o¿o¿o6¿o|¿oÜ¿o◊¿p¿pJ¿pß¿p¬¿pÕ¿q¿qR¿q•¿q∞¿r¿rh¿rè¿rô¿r¯¿sU¿sÄ¿sä¿s±¿t¿t9¿tE¿t§¿tÕ¿tŸ¿tÍ¿uN¿uv¿uÇ¿uÂ¿v¿v¿v(¿v7¿vá¿v«¿v“¿w%¿wv¿w•¿wÏ¿x¿x;¿xi¿xt¿xÀ¿x˛¿y[¿yv¿yÅ¿y∆¿z¿zY¿zd¿zÑ¿zƒ¿z˝¿{O¿{z¿{Ñ¿{•¿{Â¿|¿|l¿|ì¿|ù¿|Ω¿|˝¿}4¿}z¿} ¿}Ò¿}˚¿~¿~\¿~ï¿~€¿-¿X¿b¿j¿w¿Ã¿Ä¿ÄC¿Äj¿Ä±¿ÄÃ¿ÄÒ¿Å¿Å'¿ÅG¿ÅR¿ÅZ¿ÅÑ¿Å◊¿Ç¿Ç9¿ÇP¿ÇZ¿Ç£¿É¿É/¿É:¿Éù¿É»¿É‰¿Ñ(¿ÑS¿Ñv¿Ñõ¿Ñ≤¿Ñº¿Ñ„¿Ö?¿Ö}¿Öª¿ÖÈ¿Ü6¿Üó¿Üƒ¿Ü⁄¿ÜÂ¿áB¿á]¿áh¿á≠¿áÌ¿à@¿àK¿àö¿à”¿â ¿âY¿â´¿â÷¿â‡¿ä/¿äf¿ä≥¿äÍ¿ã:¿ãa¿ãk¿ãå¿ã‹¿å¿åc¿åã¿åó¿åÊ¿ç¿çm¿çñ¿ç¢¿ç≥¿é¿é<¿éê¿é∏¿éƒ¿è¿èL¿è†¿èÕ¿èŸ¿è„¿èÎ¿èÒ¿ê¿ê¿ê¿êR¿êò¿êË¿ê¸¿ë¿ëR¿ë§¿ëÒ¿í%¿í*¿íy¿í≥¿ì	¿ì<¿ìW¿ì{¿ìñ¿ì¿¿ìË¿ìÓ¿î¿î<¿îf¿îé¿îﬁ¿îÚ¿ïT¿ïô¿ïÎ¿ñ¿ñ^¿ñy¿ñû¿ñ≤¿ñ‘¿ñÙ¿ñˇ¿ó¿óS¿ós¿ó¡¿ó⁄¿óÚ¿ó˚¿òR¿òx¿òÅ¿ò‰¿ô
¿ô¿ô>¿ôè¿ôﬂ¿ö"¿öÖ¿öÕ¿ö˙¿õ¿õ¿õc¿õó¿õ≠¿õ∏¿õ„¿ú¿ú ¿úZ¿úì¿ú∏¿ù¿ùY¿ùñ¿ù„¿û¿û/¿ûâ¿û∫¿ûƒ¿û„¿ü(¿ü2¿üÉ¿ü∞¿üˆ¿†S¿†n¿†y¿†æ¿†˛¿°Q¿°\¿°π¿¢¿¢;¿¢E¿¢§¿£¿£,¿£6¿£]¿£Ω¿£Â¿£Ò¿§P¿§y¿§Ö¿§ñ¿§˙¿•"¿•.¿•ë¿•æ¿• ¿•‘¿•„¿¶3¿¶s¿¶~¿¶—¿ß"¿ßQ¿ßò¿ßø¿ßÁ¿®¿® ¿®w¿®™¿©¿©"¿©-¿©r¿©≤¿™¿™¿™0¿™p¿™©¿™Ó¿´@¿´k¿´u¿´ñ¿´÷¿¨¿¨R¿¨¢¿¨…¿¨”¿¨Û¿≠3¿≠j¿≠∫¿≠·¿≠Î¿Æ¿ÆL¿ÆÖ¿Æ◊¿Ø¿Ø¿Ø¿Ø!¿Øv¿Ø»¿ØÌ¿∞¿∞Y¿∞t¿∞ô¿∞≠¿∞œ¿∞Ô¿∞˙¿±¿±.¿±Å¿±æ¿±„¿±˙¿≤¿≤M¿≤≤¿≤Ÿ¿≤‰¿≥G¿≥r¿≥é¿≥“¿≥˝¿¥ ¿¥E¿¥\¿¥f¿¥ç¿¥Á¿µ%¿µc¿µè¿µ‹¿∂=¿∂j¿∂Ä¿∂ã¿∂Ë¿∑¿∑¿∑S¿∑ì¿∑Ê¿∑Ò¿∏@¿∏y¿∏∆¿∏ˇ¿πQ¿π|¿πÜ¿π’¿∫¿∫Y¿∫ê¿∫‡¿ª¿ª¿ª2¿ªÑ¿ªª¿º¿º7¿ºC¿ºî¿ºÀ¿Ω¿ΩL¿ΩX¿Ωi¿Ωπ¿ΩÓ¿æ@¿æh¿æt¿æ√¿æ¯¿øJ¿øs¿ø¿øâ¿øë¿øó¿ø®¿ø¨¿ø≠¿øÚ¿¿¿¿(¿¿d¿¿°¿¿®¿¿˙¿¡R¿¡≤¿¡¯¿¬:¿¬;¿¬j¿¬®¿¬¿¿√¿√1¿√y¿√¿√¬¿√œ¿√‰¿ƒ¿ƒ¿ƒk¿ƒà¿ƒù¿ƒ«¿ƒŒ¿ƒœ¿≈!¿≈m¿≈ñ¿≈ù¿≈û¿≈¡¿≈›¿≈Ï¿≈¸¿∆O¿∆p¿∆ê¿∆œ¿∆Û¿«¿«A¿«Q¿«¶¿««¿«Á¿»&¿»J¿»r¿»ò¿»©¿»∂¿»≈¿»’¿…¿…<¿…{¿…ü¿…«¿…Ì¿…˝¿ E¿ f¿ •¿ …¿ Ò¿À¿À(¿À.¿ÀH¿À]¿Àc¿Àd¿À∂¿Ã¿ÃY¿Ã}¿Ã•¿Ã˛¿Õ¿ÕZ¿Õú¿Õ⁄¿Œ¿Œy¿Œÿ¿œ2¿œZ¿œu¿œ{¿œ∑¿œ√¿œˆ¿–¿–4¿–J¿–n¿–ê¿–ú¿–—¿–Î¿—¿—%¿—I¿—k¿—x¿—¿—Ä¿—π¿—Á¿“
¿“¿“¿“A¿“h¿“n¿“æ¿”¿”`¿”z¿”¿¿”ƒ¿”≈¿‘$¿‘}¿‘‘¿’2¿’6¿’7¿’Q¿’ï¿’√¿’·¿÷	¿÷¿÷&¿÷F¿÷L¿÷^¿÷b¿÷c¿÷ç¿÷‘¿◊¿◊f¿◊ô¿◊Ê¿ÿ$¿ÿR¿ÿx¿ÿñ¿ÿæ¿ÿˆ¿Ÿ2¿Ÿå¿ŸŒ¿⁄¿⁄1¿⁄F¿⁄T¿⁄`¿⁄ñ¿⁄«¿⁄”¿⁄›¿⁄Â¿€¿€¿€4¿€8¿€9¿€ë¿€¨¿€≤¿€˙¿‹D¿‹ê¿‹ﬁ¿›¿›#¿›K¿›í¿›µ¿ﬁ¿ﬁ"¿ﬁ<¿ﬁG¿ﬁô¿ﬁ¬¿ﬁÕ¿ﬁ˚¿ﬂP¿ﬂZ¿ﬂb¿ﬂÇ¿ﬂà¿ﬂô¿ﬂù¿ﬂû¿ﬂœ¿ﬂ¸¿‡!¿‡6¿‡>¿‡D¿‡V¿‡Z¿‡[¿‡ñ¿‡¿¿‡Á¿·A¿·ê¿·ñ¿·ø¿·Ô¿·ı¿‚
¿‚¿‚¿‚]¿‚n¿‚í¿‚ü¿‚≈¿‚À¿‚œ¿‚–¿‚¸¿„¿„:¿„m¿„é¿„í¿„ì¿„∫¿„˜¿‰Q¿‰r¿‰v¿‰w¿‰«¿Â¿Âi¿Âπ¿Âﬁ¿Ê¿ÊS¿Êz¿Êª¿ÊÚ¿Á¿Á¿Ák¿Áã¿Áó¿Á—¿Ë	¿Ë¿ËF¿Ëx¿Ë™¿Ë ¿ËŒ¿Ëœ¿È¿È¿È;¿Èp¿Èü¿ÈΩ¿È‘¿Í
¿Í¿Í!¿Í%¿Í&¿ÍÉ¿Í◊¿Î%¿Îu¿Îö¿Î’¿Ï¿Ï6¿Ïw¿ÏÆ¿Ï—¿Ï◊¿Ì¿Ì8¿Ìd¿Ìk¿Ìµ¿Ì◊¿Ó¿Óc¿Óó¿Ó–¿Óı¿Ó˝¿Ô¿Ô%¿ÔF¿ÔJ¿ÔK¿Ô∞¿Ô”¿ÔÙ¿"¿]¿j¿¢¿˜¿˝¿Ò2¿Ò6¿Ò7¿Òt¿Ò∂¿ÒÂ¿ÒÏ¿ÚO¿Úq¿Úw¿Ú ¿Ú˛¿Û¿Û¿ÛM¿Ûç¿Û¨¿ÛÊ¿ÛÍ¿ÛÎ¿Ù-¿Ùw¿Ù»¿ı¿ı+¿ı;¿ıB¿ıà¿ıå¿ıç¿ı◊¿ˆ ¿ˆa¿ˆ±¿˜¿˜¿˜¿˜¿˜y¿˜¬¿¯¿¯K¿¯j¿¯û¿¯ı¿˘¿˘:¿˘G¿˘R¿˘o¿˘ƒ¿˙¿˙G¿˙ã¿˙è¿˙ê¿˙Ê¿˚3¿˚é¿˚º¿˚’¿¸	¿¸d¿¸à¿¸©¿¸∂¿¸¡¿¸ÿ¿˝1¿˝F¿˝k¿˝Ö¿˝Æ¿˝∆¿˝‰¿˝˜¿˛¿˛0¿˛Y¿˛s¿˛è¿˛È¿ˇ¿ˇV¿ˇZ¿ˇ[¿ˇí¿ˇ±¿ˇƒ¿ˇÎ¿ˇÒ¿ /¿ T¿ n¿ ¢¿ “¿ ˝¿-¿\¿É¿ã¿ë¿√¿¿G¿k¿ç¿•¿◊¿¿O¿Ø¿¿#¿w¿∑¿¬¿Ë¿¿8¿f¿Ñ¿Ω¿Ò¿E¿x¿ÿ¿1¿I¿T¿ò¿¬¿¿k¿v¿“¿¯¿˛¿	¿	9¿	F¿	o¿	u¿	à¿	å¿	ç¿	¡¿	”¿	Ê¿
¿
¿
'¿
7¿
g¿
∑¿
Ê¿B¿{¿û¿§¿‡¿¿¿/¿S¿n¿î¿Ã¿¿¿1¿T¿_¿Ö¿¶¿
¿i¿è¿µ¿Ì¿'¿?¿R¿u¿Ä¿¶¿«¿(¿N¿s¿´¿Â¿˝¿¿2¿=¿w¿†¿‰¿¿"¿J¿T¿Z¿[¿o¿ñ¿£¿Ã¿“¿Â¿È¿Í¿;¿Ü¿◊¿Ò¿$¿:¿L¿k¿q¿ã¿õ¿È¿=¿i¿m¿n¿Ω¿¿<¿k¿Å¿ì¿≤¿∏¿’¿¿¿.¿X¿{¿´¿µ¿¿¿2¿C¿¶¿∂¿≈¿È¿¿¿(¿8¿á¿ÿ¿¿¿¿I¿f¿§¿Ω¿ƒ¿¿d¿å¿¬¿¿¿-¿5¿;¿_¿ì¿È¿¿M¿Z¿ü¿«¿Ô¿D¿O¿X¿^¿Ä¿≠¿÷¿¿-¿:¿^¿d¿ô¿”¿ ¿  ¿ !¿ i¿ v¿ |¿ ¥¿ ˆ¿!:¿!N¿!T¿!x¿!ú¿!æ¿"¿"8¿"_¿"l¿"ï¿"æ¿"ƒ¿#¿#?¿#C¿#D¿#g¿#m¿#¬¿#‡¿$8¿$j¿$z¿$≥¿$ƒ¿%¿%¿%¿%a¿%g¿%k¿%l¿%x¿%´¿%⁄¿%ﬁ¿%ﬂ¿%Î¿&3¿&R¿&™¿&∏¿&æ¿&Ó¿'¿';¿'A¿'m¿'î¿'∂¿'º¿'¿¿'¡¿'Â¿'Ò¿(¿(:¿(|¿(≈¿(Ù¿(˝¿)¿)D¿)s¿)™¿)¥¿)√¿*%¿*P¿*b¿*Æ¿*π¿*Ê¿*Ó¿*Ù¿+¿+¿+¿+0¿+C¿+b¿+§¿+Ì¿+ˆ¿,¿,@¿,Ä¿,¬¿,Ã¿,Í¿,˘¿-[¿-Ç¿-î¿-‡¿-Î¿-Û¿-˘¿.¿.¿.¿.;¿.S¿.t¿.x¿.y¿.Ö¿.π¿.∫¿.∆¿.ÿ¿.Ô¿.Û¿.Ù¿/+¿/o¿/}¿/É¿/Ø¿/‰¿0¿0F¿0O¿0r¿0Ñ¿0≠¿0ﬁ¿1/¿1Ä¿1à¿1é¿1‹¿1ı¿2
¿22¿2w¿2Ç¿2∑¿2Ã¿2’¿2€¿3%¿3>¿3S¿3y¿3º¿3«¿3¸¿4¿4¿4 ¿4$¿4%¿41¿4j¿4´¿4Î¿5'¿5g¿5k¿5l¿5x¿5µ¿5ˇ¿6¿6¿6¿6M¿6ó¿6õ¿6ú¿6®¿7¿7¿7¿7U¿7Ä¿7‡¿8$¿8k¿8o¿8q   R/// @docImport 'package:flutter/widgets.dart';
///
/// @docImport 'editable.dart';Å   ÅÅ3Å2 Å8ÅQÅPÅWÇÇ   Ç8   Ç`   Çâ   Ç≤   Ç≈   Ç⁄   ÇÔ   É   É"     ÖûÉEÜçÜçÄ›/// Used by the [RenderParagraph] to map its rendering children to their
/// corresponding semantics nodes.
///
/// The [RichText] uses this to tag the relation between its placeholder spans
/// and their semantics nodes. Ü«Åáp ápáê Äö/// Creates a semantics tag with the input `index`.
///
/// Different [PlaceholderSpanIndexSemanticsTag]s with the same `index` are
/// consider the same.áë
áóáñ  á£á®á”á©áÀáÃá—áŸ,à à /// The index of this tag. àåUà†à†   àåàçà
~à$à$  à'à/à.  à
àÜ|Ü}àÂÉ≤âhâh|/// Parent data used by [RenderParagraph] and [RenderEditable] to annotate
/// inline contents (such as [WidgetSpan]s) with.  ä‰äÏäÏ  ä¯Ä”ã«ã«Äµ/// The [PlaceholderSpan] associated with this render child.
///
/// This field is usually set by a [ParentDataWidget], and is typically not
/// null when `performLayout` is called. â∑Å*äœäœÅ/// The offset at which to paint the child in the parent's coordinate system.
///
/// A `null` value indicates this inline widget is not laid out. For instance,
/// when the inline widget has never been laid out, or the inline widget is
/// ellipsized away.   ã–Xã·ã·   ã–ã—å,iå?å?   å,å- ©k¿ ùº©®©®6/// A render object that displays a paragraph of text. ™páv´# ´#´2 Ä™/// Creates a paragraph render object.
///
/// The [maxLines] property may be null (and indeed defaults to null), but if
/// it is not null, it must be greater than zero.´8´D´C  ´O%´Z´Y  ´z$´í´ë  ´§´™´©  ´æ)´Ã´À  ´ÌÄˇ¨ÿ¨◊  ¨Ú,¨˛¨˝  ≠$≠*≠)  ≠7≠@≠?  ≠K≠X≠W  ≠g5≠w≠v  ≠¢)≠∫≠π  ≠—≠„≠‚  ≠≠¯≠˜  ÆÆ Æ  x´e´n´o´¥´÷´‚´„´Ì´Ó´¯¨ ¨ ¨!¨ê¨È≠
≠≠≠á≠ï≠ñÆ1Æ7ÆQÆ8Æ<Æ=ÆOÆPÆ[ÆaÆÇÆsÆkÆbÆnÆÆvÆÅÆåÆíÆ‚ØKÆ…ÆùÆ¶Æ«ÆßÆ≥ÆΩÆæÆ‹ÆÃÆﬂÆÌØ_ØUØaØ|ØrØ~ØüØèØ°Ø≈Ø∏Ø«Ø“±©Ø·Ø›Ø„Ø˚ØÚØ˝∞∞∞ ∞B∞8∞t∞ô∞\∞Q∞_∞i∞j∞v∞Ä∞Å∞á∞ó∞à∞õ∞∏∞∞∞∫∞’∞Õ∞˘±∞‡∞◊∞„∞Ô∞∞˚±±±±±:±0±<±_±Q±a±å±z±é±Ím±˛±˛ ≤≤≤≤)≤V≤/≤>≤?≤\≤n≤n  ≥Õ!≥⁄≥⁄  ∂/∂*∂*  ∂FC∂l∂l  ΩË3ææ  æ†æ¥æ¥  ¿ Nv¿ N{¿ N{  ¿ Oa¿ On¿ On  ¿ ^R¿ ^Y¿ ^Y  ¿ l¿ l
¿ l
 ¿ l¿ l$¿ l/¿ l/  ¿ n„3¿ o ¿ o   ¿ õgÄî¿ õÌ¿ õÌ[/// Collected during [describeSemanticsConfiguration], used by
/// [assembleSemanticsNode]. ¿ ≠¸4¿ Æ¿ Æ  #≥ÚÇ¥¥    ∂éE∂∏∂∏/// The text to display.   ∂÷Éf∂⁄∂⁄  ∂ﬂ∂Î∂Í   ∫@ÇÎª ª Ää/// The ongoing selections in this paragraph.
///
/// The selection does not include selections in [PlaceholderSpan] if there
/// are any.  ∫”∫‘æ }æÖæÖJ/// The [SelectionRegistrar] this paragraph will be, or is, registered to.   æ¬Äˆæ∆æ∆  æ–æÂæ‰   ¿ G]¿ G(¿ G(   ¿ G¿ G¿ I e¿ IA¿ IA0/// How the text should be aligned horizontally.   ¿ IhÄù¿ Il¿ Il  ¿ Iv¿ IÅ¿ IÄ   ¿ J	Çâ¿ Le¿ LeÇ3/// The directionality of the text.
///
/// This decides how the [TextAlign.start], [TextAlign.end], and
/// [TextAlign.justify] values of [textAlign] are interpreted.
///
/// This is also used to disambiguate how to render bidirectional text. For
/// example, if the [text] is an English phrase followed by a Hebrew phrase,
/// in a [TextDirection.ltr] context the English phrase will be on the left
/// and the Hebrew phrase to its right, while in a [TextDirection.rtl]
/// context, the English phrase will be on the right and the Hebrew phrase on
/// its left.   ¿ LïÄÆ¿ Lô¿ Lô  ¿ Lß¿ L∂¿ Lµ   ¿ MGÅ,¿ N]¿ N]Ä˛/// Whether the text should break at soft line breaks.
///
/// If false, the glyphs in the text will be positioned as if there was
/// unlimited horizontal space.
///
/// If [softWrap] is false, [overflow] and [textAlign] may have unexpected
/// effects.   ¿ Nà~¿ Nå¿ Nå  ¿ Nï
¿ Nõ¿ Nö   ¿ O
T¿ OH¿ OH*/// How visual overflow should be handled.   ¿ O{Ä÷¿ O¿ O  ¿ Oà¿ Oñ¿ Oï   ¿ PUÇ*¿ RO¿ ROÅ/// Deprecated. Will be removed in a future version of Flutter. Use
/// [textScaler] instead.
///
/// The number of font pixels for each logical pixel.
///
/// For example, if the text scale factor is 1.5, text will be 50% larger than
/// the specified font size.  ¿ Qk¿ Ql¿ Qv¿ R@¿ Q|¿ Qõ¿ R¿ RÇÅ+¿ S_¿ S_  ¿ So¿ Sw¿ Sv  ¿ RÇ¿ RÉ¿ Rç¿ SW¿ Rì¿ R≤¿ S¿ S±l¿ S˜¿ S˜4/// {@macro flutter.painting.textPainter.textScaler}   ¿ T Äæ¿ T$¿ T$  ¿ T/¿ T;¿ T:   ¿ T‚Ä˙¿ U∫¿ U∫Ä»/// An optional maximum number of lines for the text to span, wrapping if
/// necessary. If the text exceeds the given number of lines, it will be
/// truncated according to [overflow] and [softWrap].   ¿ U‡Å3¿ V=¿ V=T/// The value may be null. If it is not null, then it must be greater than
/// zero. ¿ VF
¿ VL¿ VK   ¿ WÅ¨¿ X•¿ X•Åu/// Used by this paragraph's internal [TextPainter] to select a
/// locale-specific font.
///
/// In some cases, the same Unicode character may be rendered differently
/// depending on the locale. For example, the 'È™®' character is rendered
/// differently in the Chinese and Japanese locales. In these cases, the
/// [locale] may be used to select a locale-specific font.   ¿ X«ÄÃ¿ XË¿ XË/// The value may be null. ¿ XÔ¿ X¯¿ X˜   ¿ Yóm¿ Yﬁ¿ Yﬁ4/// {@macro flutter.painting.textPainter.strutStyle}   ¿ ZÄ‹¿ Z)¿ Z)/// The value may be null. ¿ Z4¿ ZA¿ Z@   ¿ ZË|¿ [6¿ [68/// {@macro flutter.painting.textPainter.textWidthBasis}   ¿ [gÄŒ¿ [k¿ [k  ¿ [z¿ [ä¿ [â   ¿ \9{¿ \~¿ \~'/// {@macro dart.ui.textHeightBehavior}   ¿ \∑Ä‚¿ \ª¿ \ª  ¿ \Œ¿ \Ê¿ \Â   ¿ ]ùÄ≤¿ ^-¿ ^-~/// The color to use when painting the selection.
///
/// Ignored if the text is not selectable (e.g. if [registrar] is null).   ¿ ^lÅ'¿ ^p¿ ^p  ¿ ^¿ ^á¿ ^Ü   ¿ dâÄÚ¿ eC¿ eCÄì/// An estimate of the height of a line in the text. See [TextPainter.preferredLineHeight].
///
/// This does not require the layout to be updated.  ¿ e#¿ e$¿ lCÄÓ¿ lˇ¿ lˇÄï/// Whether this paragraph currently has a [dart:ui.Shader] for its overflow
/// effect.
///
/// Used to test this object. Not for use in production.  ¿ l·¿ l‚¿ ògÅ…¿ ôÂ¿ ôÂÅb/// Returns the size of the text as laid out.
///
/// This can differ from [size] if the text overflowed or if the [constraints]
/// provided by the parent [RenderObject] forced the layout to be bigger than
/// necessary for the given [text].
///
/// This returns the [TextPainter.size] of the underlying [TextPainter].
///
/// Valid only after [layout].   ¿ ö4Å/¿ õ¿ õÄ∫/// Whether the text was truncated or ellipsized as laid out.
///
/// This returns the [TextPainter.didExceedMaxLines] of the underlying [TextPainter].
///
/// Valid only after [layout].   )øºÅ6ø¡ø¡    ¿ @ˆÄ√¿ @˚¿ @˚    ¿ AΩÇÆ¿ A◊¿ A◊    ¿ DoÅ£¿ EX¿ EXÄŸ/// Determines whether the given [Selectable] was created by this
/// [RenderParagraph].
///
/// The [RenderParagraph] splits its text into multiple [Selectable]s,
/// delimited by [PlaceholderSpan]s or [WidgetSpan]s. ¿ Eu¿ EÅ¿ EÄ   ¿ FÄ˘¿ F¿ F    ¿ GtÄæ¿ GÖ¿ GÖ   ¿ Gt¿ Gu¿ H6Ä∆¿ HG¿ HG   ¿ H6¿ H7¿ _óÄô¿ _û¿ _û  ¿ _¥¿ _¬¿ _¡   ¿ `4Å›¿ `G¿ `G  ¿ ``¿ `h¿ `g  ¿ `4¿ `5¿ bÇp¿ b(¿ b(  ¿ bA¿ bI¿ bH  ¿ b¿ b¿ eÅ~¿ eÜ¿ eÜ  ¿ eû¿ e¶¿ e•   ¿ gk¿ g¿ g  ¿ g.¿ g6¿ g5  ¿ g¿ g¿ gpk¿ gÉ¿ gÉ  ¿ gù¿ g•¿ g§  ¿ gp¿ gq¿ gﬂ6¿ g¿ g  ¿ g¸¿ h¿ h  ¿ gﬂ¿ g‡¿ hÉË¿ h7¿ h7  ¿ hG¿ hY¿ hX  ¿ ha¿ hr¿ hq  ¿ h¿ h¿ h%¿ h&¿ m5s¿ mF¿ mF   ¿ m5¿ m6¿ oÄÑ¿ o"¿ o"  ¿ o2¿ o:¿ o9   ¿ o£ÄÏ¿ o®¿ o®  ¿ o√¿ o”¿ o“   ¿ pìÇa¿ p±¿ p±  ¿ p¬$¿ p‹¿ p€  ¿ pì¿ pî¿ pü¿ p†¿ r¯Ç»¿ s¿ s  ¿ s+¿ s9¿ s8  ¿ r¯¿ r˘¿ uƒÇ+¿ u◊¿ u◊  ¿ uÍ$¿ v¿ v  ¿ v¿ v¿ v  ¿ uƒ¿ u≈¿ wÛäÛ¿ x¿ x   ¿ wÛ¿ wÙ¿ ÇÍÄÄ¿ Ç˚¿ Ç˚  ¿ É¿ É¿ É  ¿ É ¿ É)¿ É(  ¿ ÇÍ¿ ÇÎ¿ ÉnÜ*¿ É¿ É  ¿ ÉÖ¿ Éñ¿ Éï  ¿ Éû¿ É¶¿ É•  ¿ Én¿ Éo¿ âúÅ8¿ ä ¿ ä V/// Returns the offset at which to paint the caret.
///
/// Valid only after [layout]. ¿ ä¿ ä ¿ ä  ¿ ä)¿ ä/¿ ä.   ¿ äÿÅ2¿ ãH¿ ãHb/// {@macro flutter.painting.textPainter.getFullHeightForCaret}
///
/// Valid only after [layout]. ¿ ã^¿ ãl¿ ãk   ¿ åÑS¿ é…¿ é…Çâ/// Returns a list of rects that bound the given selection.
///
/// The [boxHeightStyle] and [boxWidthStyle] arguments may be used to select
/// the shape of the [TextBox]es. These properties default to
/// [ui.BoxHeightStyle.tight] and [ui.BoxWidthStyle.tight] respectively.
///
/// A given selection might have more than one rect if the [RenderParagraph]
/// contains multiple [InlineSpan]s or bidirectional text, because logically
/// contiguous text might not be visually contiguous.
///
/// Valid only after [layout].
///
/// See also:
///
///  * [TextPainter.getBoxesForSelection], the method in TextPainter to get
///    the equivalent boxes. ¿ é„¿ éÚ¿ éÒ  ¿ è:¿ è¿ è  ¿ èB7¿ èT¿ èS  
¿ è%¿ è'¿ è(¿ è6¿ è7¿ èc¿ èe¿ èf¿ ès¿ èt¿ êeÅ&¿ ê‡¿ ê‡g/// Returns the position within the text for the given pixel offset.
///
/// Valid only after [layout]. ¿ êı¿ ê˝¿ ê¸   ¿ ëèÇÉ¿ ìg¿ ìgÅª/// Returns the text range of the word at the given offset. Characters not
/// part of a word, such as spaces, symbols, and punctuation, have word breaks
/// on both sides. In such cases, this method will return a text range that
/// contains the given text position.
///
/// Word boundaries are defined more precisely in Unicode Standard Annex #29
/// <http://www.unicode.org/reports/tr29/#Word_Boundaries>.
///
/// Valid only after [layout]. ¿ ìw¿ ìÖ¿ ìÑ   ¿ î\¿ î ¿ î   ¿ î1¿ î?¿ î>   ¿ îvÅP¿ îÉ¿ îÉ  ¿ îô¿ îß¿ î¶   ¿ ï ÅN¿ ï◊¿ ï◊  ¿ ïÌ¿ ï˚¿ ï˙   ¿ óÅG¿ ó)¿ ó)  ¿ óB¿ óP¿ óO  ¿ óY¿ óa¿ ó`   ¿ ú áé¿ ú¿ ú  ¿ ú0¿ úH¿ úG  ¿ ú ¿ ú¿ £íÖ¯¿ £µ¿ £µ  ¿ £‡)¿ £˛¿ £˝   ¿ ©éÉf¿ ©•¿ ©•  ¿ ©Ã'¿ ©Ï¿ ©Î  ¿ ©˘¿ ©˛¿ ©˝   ¿ Æ5ì©¿ ÆF¿ ÆF  ¿ Æa¿ Æp¿ Æo  ¿ Æy¿ Æë¿ Æê  ¿ Æú ¿ Æµ¿ Æ¥  ¿ Æ5¿ Æ6¿ ¡‚Äº¿ ¡¿ ¡  ¿ ¬¿ ¬¿ ¬   ¿ ¬¢a¿ ¬≥¿ ¬≥   ¿ ¬¢¿ ¬£¿ √Ä∏¿ √)¿ √)   ¿ √¿ √¿ √√Éb¿ √‘¿ √‘  ¿ √Ë&¿ ƒ¿ ƒ  ¿ √√¿ √ƒ ¿ «)¿qG¿ »§¿ »§Åt/// A continuous, selectable piece of paragraph.
///
/// Since the selections in [PlaceholderSpan] are handled independently in its
/// subtree, a selection in [RenderParagraph] can't continue across a
/// [PlaceholderSpan]. The [RenderParagraph] splits itself on [PlaceholderSpan]
/// to create multiple `_SelectableFragment`s so that they can be selected
/// separately. ¿ …ÅE¿ … ¿ …¿ …$  ¿ …&¿ …5¿ …4  ¿ …?¿ …N¿ …M  ¿ …W¿ …f¿ …e  ¿ …s¿ …y¿ …≥¿ …û¿ …à¿ …z¿ …¿ …Ä¿ …ã¿ …å¿ …ë¿ …í¿ …°¿ …¶¿ …ß¿  Z¿  j¿  j  ¿  s¿  â¿  â  ¿  ñ¿  £¿  £  ¿  ∞!¿  æ¿  æ  ¿  ’¿  „¿  „  ¿  ˘2¿  ˛¿  ˛ ¿ À&¿ À0 ¿ À;¿ À;  ¿ ÀT¿ À_¿ À_  ¿ À∏)¿ Àœ¿ Àœ  ¿_ûm¿_≤¿_≤ ¿_ ¿_–¿_—¿_›¿`
¿_„¿_Ú¿_Û¿`B¿` ¿`  ¿`5¿`J¿`K¿'√ ¿'œ¿'œ  ¿+¿+#¿+#  ¿ Àw>¿ Àô¿ Àô   ¿ Àw¿ Àx¿'ÁÉ2¿(¿(   ¿'Á¿'Ë¿+2Ç„¿+;¿+;    ¿.{=¿.è¿.è   ¿.{¿.|¿.º6¿.—¿.—   ¿.º¿.Ω2¿ ÀÂÄﬁ¿ ÀÍ¿ ÀÍ    ¿ Ã«â'¿ ÃŸ¿ ÃŸ    ¿ ’Úç¿ ÷¿ ÷  ¿ ÷%¿ ÷5¿ ÷4  ¿ ’Ú¿ ’Û¿ „
Åâ¿ „'¿ „'   ¿ „
¿ „¿ ‰óÅ¿ ‰π¿ ‰π   ¿ ‰ó¿ ‰ò¿ Â≤`¿ Â∑¿ Â∑    ¿ Êëï¿ Ê#¿ Ê#  ¿ ÊP!¿ Êf¿ Êe  ¿ Êw'¿ Êê¿ Êè  ¿ Ê§¿ Ê≤¿ Ê±  ¿ Êø$¿ ÊŒ¿ ÊÕ  ¿ ÊÈ"¿ Ê¯¿ Ê˜   ¿ ˜Øë£¿ ˜º¿ ˜º  ¿ ˜Á!¿ ˜˝¿ ˜¸  ¿ ¯'¿ ¯'¿ ¯&  ¿ ¯;¿ ¯I¿ ¯H  ¿ ¯V$¿ ¯e¿ ¯d  ¿ ¯Ä"¿ ¯è¿ ¯é   ¿	Vå©¿	f¿	f  ¿	é¿	ñ¿	ï  ¿	´¿	∫¿	π  ¿	ƒ0¿	Ê¿	Â   ¿Ñ”¿¿  ¿(¿0¿/  ¿@¿O¿N   ¿=ü”¿N¿N  ¿ä-¿©¿®  ¿Ω¿√¿¬  ¿·¿Ô¿Ó  ¿¸$¿¿
  ¿&"¿5¿4   ¿?uüÎ¿?Ü¿?Ü  ¿?¿-¿?ﬂ¿?ﬁ  ¿?Û¿?˘¿?¯  ¿@¿@%¿@$  ¿@2$¿@A¿@@  ¿@\"¿@k¿@j   ¿c≠¿c¿c  ¿c[-¿cz¿cy  ¿cé¿cñ¿cï  ¿c©¿cØ¿cÆ  ¿cÕ¿c€¿c⁄  ¿cË$¿c˜¿cˆ  ¿d"¿d!¿d    ¿íµ¨ˆ¿í∆¿í∆  ¿ì-¿ì,¿ì+  ¿ì@¿ìH¿ìG  ¿ì[¿ìa¿ì`  ¿ì¿ìç¿ìå  ¿ìö$¿ì©¿ì®  ¿ìƒ"¿ì”¿ì“   ¿øØî¿øø¿øø  ¿øˆ¿ø˛¿ø˝  ¿¿¿¿"¿¿!  ¿¿,6¿¿T¿¿S  ¿¿h7¿¿ä¿¿â   ¿”«Ån¿”‘¿”‘  ¿”È ¿”˛¿”˝  ¿‘¿‘¿‘   ¿’9Å(¿’>¿’>    ¿÷eÑ“¿÷u¿÷u    ¿€;Ña¿€p¿€p  ¿€ï¿€ù¿€ú   ¿ﬂ†Äπ¿ﬂ•¿ﬂ•  ¿ﬂº¿ﬂƒ¿ﬂ√   ¿‡]Å∞¿‡j¿‡j  ¿‡}¿‡ã¿‡ä   ¿‚ÄΩ¿‚¿‚  ¿‚,¿‚;¿‚:  ¿‚E¿‚T¿‚S   ¿‚“Äø¿‚‚¿‚‚    ¿„ïÄ‡¿„•¿„•    ¿‰yÑT¿‰â¿‰â  ¿‰£ ¿‰∏¿‰∑   ¿Ë—ÅS¿Ë‹¿Ë‹  ¿ËÁ¿ËÚ¿ËÒ  ¿ËÙ¿Ëˇ¿Ë˛   ¿Í(Ö!¿Í8¿Í8  ¿Í_ ¿Ít¿Ís   ¿ÔMÅË¿Ôa¿Ôa  ¿Ô¿Ôä¿Ôâ  ¿Ôó¿Ô•¿Ô§   ¿Ò9Å»¿ÒI¿ÒI  ¿Ò[¿Òc¿Òb   ¿ÛÄ‰¿Û¿Û  ¿Û4¿ÛB¿ÛA   ¿ÛÌÅû¿Û˝¿Û˝  ¿Ù¿Ù¿Ù   ¿ıèÅå¿ıú¿ıú  ¿ı¥¿ı≈¿ıƒ   ¿˜Éo¿˜3¿˜3  ¿˜S¿˜a¿˜`  ¿˜j¿˜r¿˜q   ¿˙íÑ«¿˙¶¿˙¶  ¿˙Õ¿˙€¿˙⁄   ¿ˇ]ä.¿ˇm¿ˇm  ¿ˇñ¿ˇû¿ˇù  ¿ˇµ¿ˇª¿ˇ∫  ¿ˇ»!¿ˇ‚¿ˇ·   ¿	èâY¿	ü¿	ü  ¿	≈¿	À¿	   ¿	◊¿	›¿	‹  ¿	Í¿	˚¿	˙   ¿ÛÅy¿ ¿   ¿(¿6¿5  ¿>¿D¿C  ¿P¿^¿]   ¿>É∆¿K¿K  ¿o¿}¿|  ¿Ö¿ã¿ä  ¿ó¿•¿§   ¿Ü¿0¿0  ¿M¿[¿Z  ¿j8¿{¿z  ¿®¿∑¿∂   ¿ #É¿ ª¿ ªÄä/// Whether the given text position is contained in current selection
/// range.
///
/// The parameter `start` must be smaller than `end`. ¿ ›¿ Î¿ Í   ¿#FÇ$¿#Ì¿#ÌÄì/// Compares two text positions.
///
/// Returns 1 if `position` < `otherPosition`, -1 if `position` > `otherPosition`,
/// or 0 if they are equal. ¿$¿$¿$  ¿$¿$(¿$'   ¿%no¿%Ç¿%Ç  ¿%ë¿%†¿%ü  ¿%n¿%o¿%·Åﬁ¿%Ú¿%Ú  ¿&¿&¿&  ¿&¿&'¿&&  ¿%·¿%‚¿.^¿.¿.    ¿.ˆÖ-¿.˚¿.˚  ¿/¿/¿/  ¿/¿/"¿/!   ¿4'ÅC¿4A¿4A  ¿4Q¿4_¿4^  ¿4'¿4(¿5nÄî¿5á¿5á  ¿5ú¿5™¿5©  ¿5n¿5o¿6Äî¿6¿6  ¿64¿6B¿6A  ¿6¿6¿6ûd¿6¥¿6¥  ¿6ƒ¿6“¿6—  ¿6û¿6ü¿7Åh¿7¿7  ¿7+&¿7H¿7G  ¿7¿7        É<ÄåÉyÉy4/// The start and end positions for a text boundary.    É ÄæÑ:Ñ:g/// Signature for a function that determines the [_TextBoundaryRecord] at the given
/// [TextPosition].  ÑqÑÑ~   ÑäÄÌÖÖ/// Signature for a function that determines the [_TextBoundaryRecord] at the given
/// [TextPosition], for the given [String].  ÖSÖaÖ`  ÖjÖrÖq   åôú–í^í^Öæ/// A mixin that provides useful default behaviors for text [RenderBox]es
/// ([RenderParagraph] and [RenderEditable] for example) with inline content
/// children managed by the [ContainerRenderObjectMixin] mixin.
///
/// This mixin assumes every child managed by the [ContainerRenderObjectMixin]
/// mixin corresponds to a [PlaceholderSpan], and they are organized in logical
/// order of the text (the order each [PlaceholderSpan] is encountered when the
/// user reads the text).
///
/// To use this mixin in a [RenderBox] class:
///
///  * Call [layoutInlineChildren] in the `performLayout` and `computeDryLayout`
///    implementation, and during intrinsic size calculations, to get the size
///    information of the inline widgets as a `List` of `PlaceholderDimensions`.
///    Determine the positioning of the inline widgets (which is usually done by
///    a [TextPainter] using its line break algorithm).
///
///  * Call [positionInlineChildren] with the positioning information of the
///    inline widgets.
///
///  * Implement [RenderBox.applyPaintTransform], optionally with
///    [defaultApplyPaintTransform].
///
///  * Call [paintInlineChildren] in [RenderBox.paint] to paint the inline widgets.
///
///  * Call [hitTestInlineChildren] in [RenderBox.hitTestChildren] to hit test the
///    inline widgets.
///
/// See also:
///
///  * [WidgetSpan.extractFromInlineSpan], a helper function for extracting
///    [WidgetSpan]s from an [InlineSpan] tree.    í–Äóí·í·  íÒí¸í˚  í–í—ìkÑ	ìàìà  ìöì•ì§  ìØìøìæ  ì‘ì„ì‚  ìÛîî   óxÖöÈöÈÉ%/// Computes the layout for every inline child using the `maxWidth` constraint.
///
/// Returns a list of [PlaceholderDimensions], representing the layout results
/// for each child managed by the [ContainerRenderObjectMixin] mixin.
///
/// The `getChildBaseline` parameter and the `layoutChild` parameter must be
/// consistent: if `layoutChild` computes the size of the child without
/// modifying the actual layout of that child, then `getChildBaseline` must
/// also be "dry", and vice versa.
///
/// Since this method does not impose a maximum height constraint on the
/// inline children, some children may become taller than this [RenderBox].
///
/// See also:
///
///  * [TextPainter.setPlaceholderDimensions], the method that usually takes
///    the layout results from this method as the input. õõõ
  õõ'õ&  õ7$õLõK  ö¿ö¡ú}Ñ„û≤û≤Ç
/// Positions each inline child according to the coordinates provided in the
/// `boxes` list.
///
/// The `boxes` list must be in logical order, which is the order each child
/// is encountered when the user reads the text. Usually the length of the
/// list equals [childCount], but it can be less than that, when some children
/// are omitted due to ellipsing. It never exceeds [childCount].
///
/// See also:
///
///  * [TextPainter.inlinePlaceholderBoxes], the method that can be used to
///    get the input `boxes`. û…û€û⁄  û†û°°dÇY¢}¢}Ä¸/// Applies the transform that would be applied when painting the given child
/// to the given matrix.
///
/// Render children whose [TextParentData.offset] is null zeros out the
/// `transform` to indicate they're invisible thus should not be painted. ¢ò¢£¢¢  ¢©¢≤¢±  ¢k¢l£¡Ç=§[§[/// Paints each inline child.
///
/// Render children whose [TextParentData.offset] is null will be skipped by
/// this method. §o§Ä§  §à§ê§è  §I§J¶Ée¶¨¶¨Äè/// Performs a hit test on each inline child.
///
/// Render children whose [TextParentData.offset] is null will be skipped by
/// this method. ¶¬¶‘¶”  ¶€¶„¶‚  ¶ö¶õ Öy"ÖÜÖÜ Öì   ÄÆ  package:flutter/widgets.dart  Ä·  editable.dart é <ÄÜÄ§Ä•Ä‘ÄÿÄ¯ÅÅÅÅ8ÅIÅSÅ\ÅtÅãÅùÅ≤Å–Å‡ÅÒÇÇÇ8Ç`ÇâÇ±Ç≤Ç≈Ç⁄ÇÔÉÉ"É;É<ÉqÉ…É ÑÑ2ÑâÑäÑﬁÖ
Ö2ÖxÖyÖùÖûÖÁÜ
ÜÜ]Ü|ÜáÜ≈Ü˚ááOáháùá÷á◊áÙàààà7àÖàâàäàñà‚à‰àÂâ0âbâµäää\ä™ä¡ä‚äıäˆã5ã;ãâã¥ãÕãŒã⁄ãÏã˝åå%å)å*å6åñåòåôå„ç0çpçtç√éécé}éÅéØé≥èèSè§èıê-ê1ê~êïêôê€ë ëëXë\ëØë∆ë ëÿë‹í(íXíÑíŒí⁄ìì3ì^ìdìhìiìñì´ì–ìÔîîîeîòî≤î îïïGïlïèï√ï¯ñ-ñ[ñâñ∫ñ˜óó,óJóYófóqóuóvó»óŒòògòmòºôôTôyôô ööö.ö4öÉöæöÀöˇõõ3õ]õcõÆõ“ú&úoúvúzú{ú úﬁú‰ù3ùÄù—ûûû*û0û~ûûû´û„üü0üKü[ülüœü⁄üÍüÚ†C†}†û†§†¿°°6°W°]°a°b°≤°Õ°”¢¢i¢v¢æ££A£[£v£É£¥£∫£æ£ø£ﬂ£Â§4§G§T§ô§º§ÿ•*•d•Ö•ï•ù•‘•ı•˚•ˇ¶ ¶0¶6¶Ö¶ò¶•¶Óßß-ßßπß⁄ßß¯®,®I®e®v®≥®Ú®˚©©#©+©L©R©d©h©j©k©¢© ©”™™A™n™ó™ù™Ì´!´4´K´v´†´∫´È´˙¨¨ä¨∆¨Ã¨Ó≠ ≠3≠G≠c≠û≠Õ≠ÏÆÆ*ÆTÆÖÆîÆ‰ØDØNØkØàØ±Ø‘ØÈ∞∞/∞D∞ß∞ƒ±±'±H±q±¢±≠±√±„±Á±Ë≤+≤T≤Y≤Z≤|≤}≤…≥≥^≥c≥™≥À≥¥¥H¥i¥î¥«¥ÙµµFµkµòµÕ∂∂∂∂C∂D∂ã∂å∂ß∂‘∂Û∑&∑M∑]∑É∑¶∑‘∑¯∏∏>∏f∏î∏Æ∏“∏ˆππ9πaπèπ™π€∫∫3∫9∫=∫>∫n∫t∫¬∫—∫Êªª9ª_ªeª†ªÏºDºYºrº∞ºÓº˚ΩΩΩΩ(Ω,Ω-ΩzΩ ΩÊææækæûæ¿æÌøøø øMøpøàøµøπø∫øÎ¿ @	¿ @¿ @¿ @Y¿ @ë¿ @¡¿ @È¿ @Ô¿ @Û¿ @Ù¿ A%¿ Ag¿ Au¿ A{¿ A∂¿ A∫¿ Aª¿ AÛ¿ BA¿ Bá¿ Bö¿ B¡¿ C¿ C¿ C5¿ CW¿ Ca¿ Cu¿ Cî¿ C±¿ CÁ¿ D¿ D¿ D ¿ D5¿ D=¿ DO¿ DU¿ Dh¿ Dl¿ Dm¿ D±¿ D ¿ D–¿ E¿ EQ¿ Eé¿ E∫¿ EŒ¿ E‘¿ F¿ F¿ F¿ F;¿ Fg¿ Fu¿ F{¿ F«¿ F·¿ FÁ¿ G¿ G¿ G¿ G¿ Gq¿ Gr¿ G~¿ Gô¿ G¿¿ H¿ H¿ H/¿ H3¿ H4¿ H@¿ HS¿ HÄ¿ H£¿ Hø¿ H‰¿ H˘¿ H˝¿ H˛¿ I1¿ If¿ Iâ¿ I¥¿ I¬¿ I»¿ IÏ¿ J¿ J¿ J¿ J-¿ J3¿ Jv¿ J∑¿ JΩ¿ K¿ KZ¿ K®¿ KÒ¿ LA¿ LQ¿ Lì¿ Læ¿ LÌ¿ L˚¿ M¿ M)¿ M@¿ MD¿ ME¿ M~¿ MÑ¿ MŒ¿ M¿ Mˆ¿ NC¿ NR¿ Nt¿ NÜ¿ N£¿ N¡¿ Nœ¿ N’¿ NÏ¿ O¿ O¿ O¿ O5¿ O_¿ Oy¿ Oû¿ Oº¿ O ¿ O–¿ OÁ¿ P7¿ PN¿ PR¿ PS¿ Pô¿ Pµ¿ Pª¿ PÛ¿ P˘¿ QJ¿ Qi¿ Qx¿ Qó¿ R¿ R>¿ RB¿ RÄ¿ Rè¿ RÆ¿ S¿ SU¿ SY¿ S¿ S™¿ SÆ¿ SØ¿ SÊ¿ T¿ TC¿ To¿ T}¿ TÉ¿ T®¿ Tƒ¿ T€¿ Tﬂ¿ T‡¿ U,¿ Uw¿ UØ¿ U›¿ Uﬁ¿ V+¿ V7¿ VT¿ V|¿ V¶¿ V¥¿ V∫¿ V›¿ V˘¿ W¿ W¿ W¿ WW¿ Ws¿ Wy¿ W≈¿ X¿ XZ¿ Xó¿ Xƒ¿ X≈¿ X‚¿ Y ¿ Y(¿ Y6¿ Y<¿ Y]¿ Yy¿ Yê¿ Yî¿ Yï¿ YÃ¿ Z¿ Z¿ Z#¿ ZI¿ Zu¿ ZÉ¿ Zâ¿ ZÆ¿ Z ¿ Z·¿ ZÂ¿ ZÊ¿ [!¿ [e¿ [í¿ [¬¿ [–¿ [÷¿ [ˇ¿ \¿ \2¿ \6¿ \7¿ \a¿ \µ¿ \Ó¿ ]"¿ ]0¿ ]6¿ ]c¿ ]¿ ]ñ¿ ]ö¿ ]õ¿ ]œ¿ ]’¿ ^ ¿ ^P¿ ^j¿ ^è¿ ^≥¿ ^¡¿ ^«¿ ^‰¿ _¿ _T¿ _a¿ _r¿ _ä¿ _ê¿ _î¿ _ï¿ _Õ¿ `-¿ `1¿ `2¿ `>¿ `q¿ `≈¿ `‹¿ a¿ aU¿ a}¿ aÑ¿ a†¿ a‹¿ aÚ¿ b¿ b¿ b¿ b¿ bR¿ b¶¿ bΩ¿ c¿ cP¿ cá¿ c…¿ cÒ¿ c¯¿ d¿ dP¿ df¿ dÇ¿ dÜ¿ dá¿ dÂ¿ dÎ¿ e!¿ e6¿ e|¿ e}¿ eÆ¿ e ¿ e¿ f¿ f'¿ fW¿ fá¿ fñ¿ f¢¿ fÈ¿ f˙¿ f˛¿ fˇ¿ g¿ g>¿ gi¿ gm¿ gn¿ gz¿ g≠¿ gÿ¿ g‹¿ g›¿ gÈ¿ h¿ h¿ h#¿ h0¿ h~¿ hÃ¿ i¿ ii¿ i∏¿ i¸¿ j&¿ jF¿ jî¿ j…¿ k¿ k%¿ k9¿ kP¿ ku¿ kù¿ k≤¿ k¿¿ k¯¿ k˛¿ l¿ l¿ l"¿ l@¿ lA¿ lê¿ lû¿ l§¿ lﬂ¿ lÙ¿ m2¿ m3¿ m?¿ m_¿ mÅ¿ m•¿ m©¿ m™¿ mˆ¿ m˚¿ nJ¿ nö¿ n·¿ o¿ o¿ oE¿ oú¿ o†¿ o°¿ o·¿ oÚ¿ p+¿ på¿ pê¿ pë¿ pù¿ p™¿ pÍ¿ q ¿ q¿ qC¿ qi¿ që¿ q≈¿ q˘¿ r¿ r¿ r4¿ rd¿ r•¿ r∂¿ r…¿ rÒ¿ rı¿ rˆ¿ s¿ sD¿ sc¿ së¿ sæ¿ t	¿ tQ¿ tû¿ tÎ¿ u1¿ uk¿ uΩ¿ u¡¿ u¬¿ uŒ¿ v)¿ vW¿ vk¿ vç¿ v´¿ vÀ¿ v˜¿ w#¿ w.¿ w6¿ wó¿ wÏ¿ w¿ wÒ¿ w˝¿ x¿ x=¿ xà¿ xè¿ x»¿ x˚¿ y¿ y<¿ ya¿ yh¿ yï¿ y◊¿ yÿ¿ z¿ z1¿ z2¿ zñ¿ z’¿ {$¿ {s¿ {¬¿ |¿ |R¿ |ú¿ |π¿ |‘¿ |˜¿ }¿ };¿ }[¿ }¿ }†¿ }¬¿ }‚¿ ~¿ ~>¿ ~ã¿ ~µ¿ ~Ÿ¿ ~ı¿ ¿ .¿ ~¿ ø¿ Ä¿ Ä#¿ ÄU¿ Ä{¿ Äü¿ ÄË¿ Ä˜¿ Å
¿ Å:¿ Åá¿ Åπ¿ Åﬂ¿ Ç¿ ÇL¿ Ç[¿ Çg¿ Çå¿ Çî¿ Ç°¿ Çø¿ Ç›¿ Ç„¿ ÇÁ¿ ÇË¿ ÇÙ¿ É5¿ Ég¿ Ék¿ Él¿ Éx¿ ÉØ¿ Ñ ¿ ÑQ¿ Ñ|¿ Ñ©¿ Ñπ¿ ÑÂ¿ Ö6¿ Öm¿ Öu¿ Öà¿ Öí¿ Öì¿ Ö≠¿ Ö÷¿ Ö˚¿ ÜI¿ ÜÜ¿ Üπ¿ Ü»¿ ÜÁ¿ ÜÔ¿ á¿ á¿ á¿ áI¿ áó¿ á¿¿ á»¿ áŒ¿ áœ¿ áˇ¿ à ¿ à*¿ à+¿ àE¿ àj¿ à¢¿ àæ¿ à“¿ â¿ â+¿ âg¿ âo¿ âè¿ âï¿ âô¿ âö¿ â–¿ â÷¿ â˜¿ ä@¿ ä_¿ äå¿ ä—¿ ä’¿ ä÷¿ ã¿ ã¿ ã?¿ ãw¿ ãñ¿ ã√¿ å¿ å¿ å¿ åJ¿ åP¿ åü¿ åﬂ¿ ç*¿ ç0¿ ç¿ çŒ¿ é¿ é¿ é-¿ é3¿ éC¿ éI¿ éó¿ é∂¿ éﬂ¿ é˛¿ è>¿ è{¿ èÇ¿ è°¿ èŒ¿ è¸¿ ê¿ ê3¿ êW¿ ê^¿ êb¿ êc¿ ê™¿ ê∞¿ ê—¿ ë¿ ë%¿ ëR¿ ëà¿ ëå¿ ëç¿ ë⁄¿ í+¿ íy¿ í°¿ íß¿ íˆ¿ ì4¿ ì:¿ ì[¿ ìê¿ ìØ¿ ì‹¿ î¿ î¿ î¿ îs¿ ît¿ î≤¿ î˝¿ ïF¿ ïÑ¿ ï√¿ ï«¿ ï»¿ ñ¿ ñP¿ ñô¿ ñ÷¿ ó¿ ó¿ ó¿ ór¿ ó∆¿ ò¿ ò`¿ òd¿ òe¿ òï¿ òõ¿ òÏ¿ ô<¿ ôb¿ ôh¿ ô≥¿ ôπ¿ ô⁄¿ ô¿ ö¿ ö-¿ ö1¿ ö2¿ ör¿ öx¿ ö–¿ ö÷¿ ö˜¿ õ¿ õ5¿ õ`¿ õd¿ õe¿ õ¶¿ õ≈¿ õ˝¿ õ˛¿ ú
¿ úQ¿ úÉ¿ ú∏¿ úÂ¿ ù¿ ùa¿ ù™¿ ù’¿ ù‰¿ ùÏ¿ ûM¿ ûS¿ ûT¿ ûz¿ û¢¿ û ¿ û˝¿ üO¿ ü\¿ üâ¿ üΩ¿ ü’¿ †¿ †h¿ †©¿ †¯¿ °9¿ °U¿ °w¿ °ô¿ °–¿ ¢¿ ¢¿ ¢'¿ ¢6¿ ¢B¿ ¢a¿ ¢É¿ ¢ç¿ ¢√¿ £
¿ £¿ £¿ £Y¿ £Ö¿ £ã¿ £è¿ £ê¿ £‹¿ §¿ §¿ §O¿ §Ñ¿ §¢¿ §¡¿ §Ë¿ •¿ •g¿ •ø¿ •ﬂ¿ ¶¿ ¶$¿ ¶|¿ ¶â¿ ¶≥¿ ¶Ω¿ ß¿ ßH¿ ßÜ¿ ß»¿ ßŸ¿ ®¿ ®=¿ ®G¿ ®f¿ ®u¿ ®í¿ ®ö¿ ®†¿ ®°¿ ®À¿ ®Î¿ ©¿ ©\¿ ©e¿ ©k¿ ©á¿ ©ã¿ ©å¿ ©»¿ ©ı¿ ™	¿ ™¿ ™6¿ ™ô¿ ™…¿ ´¿ ´¿ ´2¿ ´F¿ ´y¿ ´Ü¿ ´∏¿ ´‚¿ ¨¿ ¨C¿ ¨L¿ ¨v¿ ¨|¿ ¨†¿ ¨∆¿ ¨Ò¿ ¨ı¿ ¨ˆ¿ ≠B¿ ≠ë¿ ≠–¿ ≠˙¿ Æ2¿ Æ3¿ Æ?¿ Æ]¿ Æu¿ Æò¿ Ææ¿ Æƒ¿ Ø¿ ØE¿ Øy¿ Øè¿ Ø©¿ Øº¿ Ø⁄¿ ØÚ¿ ∞¿ ∞v¿ ∞√¿ ±¿ ±P¿ ±k¿ ±õ¿ ±§¿ ±≈¿ ±∆¿ ±Ê¿ ≤4¿ ≤{¿ ≤™¿ ≤ø¿ ≤Ê¿ ≥7¿ ≥Å¿ ≥”¿ ¥ ¿ ¥K¿ ¥s¿ ¥¿ ¥ö¿ ¥§¿ ¥»¿ ¥Á¿ ¥ˆ¿ µ7¿ µ¿ µú¿ µ∞¿ µ∫¿ µ‰¿ ∂¿ ∂P¿ ∂â¿ ∂π¿ ∂√¿ ∑¿ ∑J¿ ∑h¿ ∑å¿ ∑Ø¿ ∑Â¿ ∏¿ ∏(¿ ∏v¿ ∏«¿ ∏Ï¿ π¿ πA¿ πl¿ πò¿ π£¿ πÿ¿ π˝¿ ∫1¿ ∫b¿ ∫û¿ ∫“¿ ª¿ ª7¿ ªH¿ ªk¿ ª¥¿ º	¿ º,¿ ºY¿ ºÑ¿ ºí¿ º˜¿ Ω¿ ΩU¿ Ωc¿ Ωx¿ Ωã¿ Ωû¿ ΩÌ¿ Ω˜¿ æ'¿ æz¿ æ»¿ æ“¿ æ¯¿ ø.¿ ø~¿ øè¿ øº¿ ¿¿ ¿¿ ¿0¿ ¿^¿ ¿~¿ ¿Ø¿ ¿“¿ ¿⁄¿ ¿‡¿ ¡¿ ¡I¿ ¡d¿ ¡e¿ ¡å¿ ¡€¿ ¡ﬂ¿ ¡‡¿ ¬¿ ¬"¿ ¬]¿ ¬î¿ ¬õ¿ ¬ü¿ ¬†¿ ¬¨¿ ¬∆¿ ¬‚¿ √ ¿ √¿ √¿ √¿ √C¿ √a¿ √µ¿ √º¿ √¿¿ √¡¿ √Õ¿ ƒ¿ ƒ=¿ ƒÇ¿ ƒ”¿ ƒÁ¿ ƒ˚¿ ≈¿ ≈(¿ ≈Q¿ ≈ë¿ ≈©¿ ≈≤¿ ≈π¿ ≈ˇ¿ ∆¿ ∆x¿ ∆¿ ∆÷¿ «"¿ «&¿ «(¿ «)¿ «Z¿ «^¿ «≠¿ «Û¿ »C¿ »é¿ »û¿ »∏¿ »Ï¿ …¿ …m¿ …∑¿ …„¿  ¿  !¿  S¿  W¿  X¿  q¿  î¿  ≠¿  Æ¿  ”¿  ˆ¿  ˜¿ À-¿ À.¿ ÀR¿ Àt¿ Àu¿ ÀÅ¿ À∂¿ À„¿ Ã¿ ÃG¿ ÃH¿ Ãr¿ ÃÄ¿ ÃÜ¿ Ã©¿ Ã¿¿ Ãƒ¿ Ã≈¿ ÃÛ¿ Õ7¿ Õç¿ Õì¿ Õî¿ Õ–¿ Œ¿ ŒC¿ Œô¿ Œ≈¿ ŒÃ¿ Œˇ¿ œ&¿ œV¿ œ©¿ –¿ –7¿ –Y¿ –{¿ –Ç¿ –≤¿ —¿ —-¿ —3¿ —w¿ —É¿ —ª¿ —Ò¿ “&¿ “k¿ “∆¿ ”¿ ”s¿ ”z¿ ”ò¿ ”√¿ ”˝¿ ‘=¿ ‘k¿ ‘t¿ ‘ù¿ ‘’¿ ’¿ ’A¿ ’J¿ ’p¿ ’Ã¿ ’‰¿ ’Î¿ ’Ô¿ ’¿ ’¸¿ ÷=¿ ÷d¿ ÷™¿ ÷Ï¿ ◊¿ ◊5¿ ◊b¿ ◊π¿ ◊¯¿ ◊˘¿ ÿ¿ ÿB¿ ÿm¿ ÿñ¿ ÿ‡¿ ÿÔ¿ Ÿ¿ ŸM¿ Ÿv¿ Ÿ¿¿ Ÿ˚¿ ⁄
¿ ⁄4¿ ⁄|¿ ⁄•¿ ⁄Ô¿ €/¿ €}¿ €å¿ €µ¿ €⁄¿ ‹8¿ ‹B¿ ‹g¿ ‹ë¿ ‹∫¿ ‹ﬂ¿ ›	¿ ›`¿ ›ü¿ ›Œ¿ ﬁ¿ ﬁ@¿ ﬁf¿ ﬁÑ¿ ﬁ≠¿ ﬁÂ¿ ﬁˆ¿ ﬂA¿ ﬂK¿ ﬂÑ¿ ﬂÕ¿ ‡¿ ‡5¿ ‡b¿ ‡ç¿ ‡æ¿ ‡…¿ ·¿ ·T¿ ·å¿ ·¬¿ ·Ì¿ ‚¿ ‚M¿ ‚X¿ ‚^¿ ‚_¿ ‚ò¿ ‚Õ¿ ‚Í¿ ‚¿ „¿ „¿ „¿ „¿ „>¿ „Ç¿ „ï¿ „õ¿ „Û¿ ‰I¿ ‰ê¿ ‰î¿ ‰ï¿ ‰°¿ ‰ ¿ Â¿ Â!¿ Â'¿ ÂH¿ Âx¿ Â§¿ Â´¿ ÂØ¿ Â∞¿ Âœ¿ ÂÔ¿ Ê¿ Ê¿ Ê¿ ÊL¿ Ês¿ Ê†¿ Êª¿ ÊÂ¿ Á¿ Á¿ Á5¿ ÁU¿ Ác¿ Áü¿ ÁŸ¿ Á‚¿ Ë¿ ËA¿ Ëk¿ Ëø¿ ËË¿ È1¿ ÈV¿ Èu¿ ÈÀ¿ ÈÍ¿ Í)¿ Íb¿ Íu¿ Í¨¿ Í∏¿ Î¿ Î]¿ Î¢¿ Ï¿ Ï¿ ÏX¿ Ïõ¿ Ï®¿ Ï…¿ Ì¿ ÌK¿ Ì~¿ Ìó¿ Ì§¿ Ìµ¿ ÌÙ¿ Ó-¿ Ós¿ Ó™¿ ÓΩ¿ Ô¿ ÔN¿ ÔZ¿ Ôd¿ Ôs¿ Ôü¿ ÔÔ¿ K¿ ä¿ √¿ ÷¿ Ò¿ Ò¿ Ò*¿ Òi¿ Ò≤¿ Òº¿ Òƒ¿ Ò—¿ Ú$¿ Úè¿ ÚÃ¿ Úˇ¿ Û+¿ ÛU¿ Û¶¿ Ûˆ¿ Ù9¿ Ùç¿ Ù∂¿ Ùˇ¿ ı$¿ ıC¿ ıô¿ ıö¿ ıπ¿ ˆ¿ ˆ*¿ ˆo¿ ˆ≤¿ ˆø¿ ˆ‡¿ ˜C¿ ˜\¿ ˜i¿ ˜s¿ ˜{¿ ˜Å¿ ˜®¿ ˜¨¿ ˜≠¿ ˜„¿ ¯
¿ ¯7¿ ¯R¿ ¯|¿ ¯§¿ ¯™¿ ¯Ã¿ ¯Ï¿ ¯˙¿ ˘6¿ ˘p¿ ˘y¿ ˘¨¿ ˘ÿ¿ ˙¿ ˙X¿ ˙Å¿ ˙ ¿ ˙Ô¿ ˚¿ ˚f¿ ˚Ö¿ ˚∆¿ ˚ˇ¿ ¸¿ ¸I¿ ¸U¿ ¸®¿ ¸˙¿ ˝?¿ ˝†¿ ˝≤¿ ˝˜¿ ˛:¿ ˛G¿ ˛h¿ ˛º¿ ˛Ï¿ ˇ¿ ˇ9¿ ˇF¿ ˇW¿ ˇò¿ ˇ—¿ ¿ P¿ c¿ ø¿ Ú¿ ˛¿¿¿E¿ï¿Ô¿0¿i¿|¿≥¿ø¿–¿¿V¿`¿h¿u¿»¿3¿p¿£¿œ¿˘¿J¿ö¿›¿3¿\¿•¿ ¿"¿>¿]¿æ¿–¿¿X¿e¿Ü¿È¿	¿	¿	¿	"¿	(¿	O¿	S¿	T¿	ä¿	ß¿	¿¿	ˆ¿	˝¿
O¿
ß¿¿M¿è¿ê¿ø¿˝¿¿m¿Ü¿Œ¿‘¿¿$¿9¿c¿j¿k¿Ω¿¿`¿≤¿÷¿˛¿H¿h¿§¿Ê¿$¿d¿√¿"¿|¿§¿ø¿≈¿¿¿@¿Z¿w¿ç¿±¿”¿ﬂ¿¿.¿K¿a¿Ö¿ß¿¥¿ª¿º¿ı¿#¿F¿L¿M¿}¿§¿™¿˙¿J¿ú¿∂¿¸¿ ¿¿X¿á¿≈¿›¿5¿N¿ñ¿ú¿ﬂ¿Ï¿¿+¿2¿3¿i¿ü¿¶¿Ÿ¿¿$¿*¿T¿{¿Å¿—¿!¿s¿ç¿”¿◊¿ÿ¿%¿k¿ª¿œ¿‘¿$¿n¿æ¿√¿¿;¿Ü¿π¿›¿¯¿"¿J¿P¿n¿ü¿…¿Ò¿A¿U¿∑¿ﬁ¿ 0¿ a¿ Ω¿!¿!Y¿!®¿!¯¿")¿"q¿"å¿"™¿"„¿#¿#,¿#R¿#f¿#q¿#ú¿#º¿#Ÿ¿$¿$L¿$ß¿$‘¿%¿%E¿%Ä¿%ë¿%Î¿&H¿&R¿&q¿&í¿&≤¿'¿'%¿'>¿'K¿'U¿'¶¿'”¿(¿(\¿(ù¿(ƒ¿(Œ¿)¿)V¿)Å¿)ã¿)≤¿*¿*>¿*J¿*≠¿*⁄¿*Ê¿*˜¿+W¿+¿+ã¿+Í¿,¿,¿,)¿,8¿,Ü¿,∆¿-¿-_¿-≠¿-¸¿.L¿.}¿.≈¿.‡¿.˛¿/7¿/p¿/Ä¿/¶¿/∫¿/≈¿0¿0N¿0y¿0É¿0À¿1¿12¿1<¿1É¿1Á¿2'¿2N¿2X¿2¢¿3¿3D¿3o¿3y¿3Å¿3é¿3›¿4'¿4{¿4≤¿4€¿58¿5y¿5é¿5ñ¿5¿¿6¿6C¿6ü¿6›¿7¿7I¿7ñ¿7€¿8¿8p¿8õ¿8•¿8Ë¿9)¿9y¿9†¿9™¿9À¿:¿:t¿:ú¿:®¿:Î¿;=¿;f¿;r¿;É¿;Ë¿</¿<\¿<h¿<∞¿<ÿ¿<‰¿<Ó¿<ˆ¿<¸¿=¿=¿=¿=]¿=£¿=Û¿>¿>¿>Z¿>§¿>Ù¿>˘¿?J¿?s¿?º¿?Ô¿@¿@.¿@X¿@Ä¿@Ü¿@£¿@‘¿@˛¿A&¿Av¿Aä¿AÏ¿B¿Be¿Bñ¿BÚ¿C@¿Cí¿C‰¿D4¿De¿D≠¿D»¿DÔ¿E¿EH¿EÉ¿Eî¿E®¿E≥¿Eﬁ¿E˛¿F¿FU¿Fé¿FÈ¿G¿GS¿Gá¿G¬¿G”¿H-¿Hä¿Hî¿H≥¿H‘¿HÙ¿IX¿Ig¿IÅ¿Ié¿Iò¿IÈ¿J¿J\¿Jü¿J‡¿K¿K¿KV¿Kô¿Kƒ¿KŒ¿Kı¿LU¿L}¿Lâ¿LË¿M¿M¿M.¿Mí¿M∫¿M∆¿N)¿NV¿Nb¿Nl¿N{¿N…¿O	¿OT¿O¢¿OÙ¿PF¿Pñ¿P«¿Q¿Q*¿QQ¿Qo¿Q™¿QÂ¿Qˆ¿R
¿R¿R^¿R¡¿S¿S,¿S6¿S~¿S„¿T#¿TJ¿TT¿Tõ¿T€¿U¿U¿UV¿Uñ¿U¡¿UÀ¿U”¿U‡¿V/¿Vy¿VÕ¿W¿W-¿Wä¿WÀ¿W‡¿WË¿X¿Xp¿Xó¿XÒ¿Y/¿Ym¿Yô¿YÊ¿Z+¿Zn¿Z¿¿ZÎ¿Zı¿[8¿[y¿[…¿[¿[˙¿\¿\Ä¿\«¿\Ù¿] ¿]H¿]p¿]|¿]ç¿]—¿^6¿^^¿^j¿^≠¿^ˇ¿_(¿_4¿_>¿_F¿_L¿_]¿_a¿_b¿_ú¿_ﬂ¿`¿`¿`S¿`†¿`Ê¿a6¿aJ¿aO¿a¢¿aÔ¿bA¿bu¿bz¿b÷¿bˇ¿cW¿cä¿c•¿c…¿c‰¿d¿d6¿d<¿dZ¿dã¿dµ¿d›¿e-¿eA¿e£¿eË¿f:¿fh¿fØ¿f ¿fÔ¿g¿g%¿gE¿gP¿gX¿g§¿gƒ¿h¿h+¿hC¿hL¿h£¿h…¿h“¿i5¿i[¿id¿iè¿i‡¿j0¿js¿j÷¿k¿kK¿ka¿kl¿k¥¿kË¿k˛¿l	¿l4¿lT¿lq¿l©¿l‰¿m	¿md¿m™¿mÁ¿n4¿no¿nÄ¿n⁄¿o¿o¿o6¿o|¿oÜ¿o◊¿p¿pJ¿pß¿p¬¿pÕ¿q¿qR¿q•¿q∞¿r¿rh¿rè¿rô¿r¯¿sU¿sÄ¿sä¿s±¿t¿t9¿tE¿t§¿tÕ¿tŸ¿tÍ¿uN¿uv¿uÇ¿uÂ¿v¿v¿v(¿v7¿vá¿v«¿v“¿w%¿wv¿w•¿wÏ¿x¿x;¿xi¿xt¿xÀ¿x˛¿y[¿yv¿yÅ¿y∆¿z¿zY¿zd¿zÑ¿zƒ¿z˝¿{O¿{z¿{Ñ¿{•¿{Â¿|¿|l¿|ì¿|ù¿|Ω¿|˝¿}4¿}z¿} ¿}Ò¿}˚¿~¿~\¿~ï¿~€¿-¿X¿b¿j¿w¿Ã¿Ä¿ÄC¿Äj¿Ä±¿ÄÃ¿ÄÒ¿Å¿Å'¿ÅG¿ÅR¿ÅZ¿ÅÑ¿Å◊¿Ç¿Ç9¿ÇP¿ÇZ¿Ç£¿É¿É/¿É:¿Éù¿É»¿É‰¿Ñ(¿ÑS¿Ñv¿Ñõ¿Ñ≤¿Ñº¿Ñ„¿Ö?¿Ö}¿Öª¿ÖÈ¿Ü6¿Üó¿Üƒ¿Ü⁄¿ÜÂ¿áB¿á]¿áh¿á≠¿áÌ¿à@¿àK¿àö¿à”¿â ¿âY¿â´¿â÷¿â‡¿ä/¿äf¿ä≥¿äÍ¿ã:¿ãa¿ãk¿ãå¿ã‹¿å¿åc¿åã¿åó¿åÊ¿ç¿çm¿çñ¿ç¢¿ç≥¿é¿é<¿éê¿é∏¿éƒ¿è¿èL¿è†¿èÕ¿èŸ¿è„¿èÎ¿èÒ¿ê¿ê¿ê¿êR¿êò¿êË¿ê¸¿ë¿ëR¿ë§¿ëÒ¿í%¿í*¿íy¿í≥¿ì	¿ì<¿ìW¿ì{¿ìñ¿ì¿¿ìË¿ìÓ¿î¿î<¿îf¿îé¿îﬁ¿îÚ¿ïT¿ïô¿ïÎ¿ñ¿ñ^¿ñy¿ñû¿ñ≤¿ñ‘¿ñÙ¿ñˇ¿ó¿óS¿ós¿ó¡¿ó⁄¿óÚ¿ó˚¿òR¿òx¿òÅ¿ò‰¿ô
¿ô¿ô>¿ôè¿ôﬂ¿ö"¿öÖ¿öÕ¿ö˙¿õ¿õ¿õc¿õó¿õ≠¿õ∏¿õ„¿ú¿ú ¿úZ¿úì¿ú∏¿ù¿ùY¿ùñ¿ù„¿û¿û/¿ûâ¿û∫¿ûƒ¿û„¿ü(¿ü2¿üÉ¿ü∞¿üˆ¿†S¿†n¿†y¿†æ¿†˛¿°Q¿°\¿°π¿¢¿¢;¿¢E¿¢§¿£¿£,¿£6¿£]¿£Ω¿£Â¿£Ò¿§P¿§y¿§Ö¿§ñ¿§˙¿•"¿•.¿•ë¿•æ¿• ¿•‘¿•„¿¶3¿¶s¿¶~¿¶—¿ß"¿ßQ¿ßò¿ßø¿ßÁ¿®¿® ¿®w¿®™¿©¿©"¿©-¿©r¿©≤¿™¿™¿™0¿™p¿™©¿™Ó¿´@¿´k¿´u¿´ñ¿´÷¿¨¿¨R¿¨¢¿¨…¿¨”¿¨Û¿≠3¿≠j¿≠∫¿≠·¿≠Î¿Æ¿ÆL¿ÆÖ¿Æ◊¿Ø¿Ø¿Ø¿Ø!¿Øv¿Ø»¿ØÌ¿∞¿∞Y¿∞t¿∞ô¿∞≠¿∞œ¿∞Ô¿∞˙¿±¿±.¿±Å¿±æ¿±„¿±˙¿≤¿≤M¿≤≤¿≤Ÿ¿≤‰¿≥G¿≥r¿≥é¿≥“¿≥˝¿¥ ¿¥E¿¥\¿¥f¿¥ç¿¥Á¿µ%¿µc¿µè¿µ‹¿∂=¿∂j¿∂Ä¿∂ã¿∂Ë¿∑¿∑¿∑S¿∑ì¿∑Ê¿∑Ò¿∏@¿∏y¿∏∆¿∏ˇ¿πQ¿π|¿πÜ¿π’¿∫¿∫Y¿∫ê¿∫‡¿ª¿ª¿ª2¿ªÑ¿ªª¿º¿º7¿ºC¿ºî¿ºÀ¿Ω¿ΩL¿ΩX¿Ωi¿Ωπ¿ΩÓ¿æ@¿æh¿æt¿æ√¿æ¯¿øJ¿øs¿ø¿øâ¿øë¿øó¿ø®¿ø¨¿ø≠¿øÚ¿¿¿¿(¿¿d¿¿°¿¿®¿¿˙¿¡R¿¡≤¿¡¯¿¬:¿¬;¿¬j¿¬®¿¬¿¿√¿√1¿√y¿√¿√¬¿√œ¿√‰¿ƒ¿ƒ¿ƒk¿ƒà¿ƒù¿ƒ«¿ƒŒ¿ƒœ¿≈!¿≈m¿≈ñ¿≈ù¿≈û¿≈¡¿≈›¿≈Ï¿≈¸¿∆O¿∆p¿∆ê¿∆œ¿∆Û¿«¿«A¿«Q¿«¶¿««¿«Á¿»&¿»J¿»r¿»ò¿»©¿»∂¿»≈¿»’¿…¿…<¿…{¿…ü¿…«¿…Ì¿…˝¿ E¿ f¿ •¿ …¿ Ò¿À¿À(¿À.¿ÀH¿À]¿Àc¿Àd¿À∂¿Ã¿ÃY¿Ã}¿Ã•¿Ã˛¿Õ¿ÕZ¿Õú¿Õ⁄¿Œ¿Œy¿Œÿ¿œ2¿œZ¿œu¿œ{¿œ∑¿œ√¿œˆ¿–¿–4¿–J¿–n¿–ê¿–ú¿–—¿–Î¿—¿—%¿—I¿—k¿—x¿—¿—Ä¿—π¿—Á¿“
¿“¿“¿“A¿“h¿“n¿“æ¿”¿”`¿”z¿”¿¿”ƒ¿”≈¿‘$¿‘}¿‘‘¿’2¿’6¿’7¿’Q¿’ï¿’√¿’·¿÷	¿÷¿÷&¿÷F¿÷L¿÷^¿÷b¿÷c¿÷ç¿÷‘¿◊¿◊f¿◊ô¿◊Ê¿ÿ$¿ÿR¿ÿx¿ÿñ¿ÿæ¿ÿˆ¿Ÿ2¿Ÿå¿ŸŒ¿⁄¿⁄1¿⁄F¿⁄T¿⁄`¿⁄ñ¿⁄«¿⁄”¿⁄›¿⁄Â¿€¿€¿€4¿€8¿€9¿€ë¿€¨¿€≤¿€˙¿‹D¿‹ê¿‹ﬁ¿›¿›#¿›K¿›í¿›µ¿ﬁ¿ﬁ"¿ﬁ<¿ﬁG¿ﬁô¿ﬁ¬¿ﬁÕ¿ﬁ˚¿ﬂP¿ﬂZ¿ﬂb¿ﬂÇ¿ﬂà¿ﬂô¿ﬂù¿ﬂû¿ﬂœ¿ﬂ¸¿‡!¿‡6¿‡>¿‡D¿‡V¿‡Z¿‡[¿‡ñ¿‡¿¿‡Á¿·A¿·ê¿·ñ¿·ø¿·Ô¿·ı¿‚
¿‚¿‚¿‚]¿‚n¿‚í¿‚ü¿‚≈¿‚À¿‚œ¿‚–¿‚¸¿„¿„:¿„m¿„é¿„í¿„ì¿„∫¿„˜¿‰Q¿‰r¿‰v¿‰w¿‰«¿Â¿Âi¿Âπ¿Âﬁ¿Ê¿ÊS¿Êz¿Êª¿ÊÚ¿Á¿Á¿Ák¿Áã¿Áó¿Á—¿Ë	¿Ë¿ËF¿Ëx¿Ë™¿Ë ¿ËŒ¿Ëœ¿È¿È¿È;¿Èp¿Èü¿ÈΩ¿È‘¿Í
¿Í¿Í!¿Í%¿Í&¿ÍÉ¿Í◊¿Î%¿Îu¿Îö¿Î’¿Ï¿Ï6¿Ïw¿ÏÆ¿Ï—¿Ï◊¿Ì¿Ì8¿Ìd¿Ìk¿Ìµ¿Ì◊¿Ó¿Óc¿Óó¿Ó–¿Óı¿Ó˝¿Ô¿Ô%¿ÔF¿ÔJ¿ÔK¿Ô∞¿Ô”¿ÔÙ¿"¿]¿j¿¢¿˜¿˝¿Ò2¿Ò6¿Ò7¿Òt¿Ò∂¿ÒÂ¿ÒÏ¿ÚO¿Úq¿Úw¿Ú ¿Ú˛¿Û¿Û¿ÛM¿Ûç¿Û¨¿ÛÊ¿ÛÍ¿ÛÎ¿Ù-¿Ùw¿Ù»¿ı¿ı+¿ı;¿ıB¿ıà¿ıå¿ıç¿ı◊¿ˆ ¿ˆa¿ˆ±¿˜¿˜¿˜¿˜¿˜y¿˜¬¿¯¿¯K¿¯j¿¯û¿¯ı¿˘¿˘:¿˘G¿˘R¿˘o¿˘ƒ¿˙¿˙G¿˙ã¿˙è¿˙ê¿˙Ê¿˚3¿˚é¿˚º¿˚’¿¸	¿¸d¿¸à¿¸©¿¸∂¿¸¡¿¸ÿ¿˝1¿˝F¿˝k¿˝Ö¿˝Æ¿˝∆¿˝‰¿˝˜¿˛¿˛0¿˛Y¿˛s¿˛è¿˛È¿ˇ¿ˇV¿ˇZ¿ˇ[¿ˇí¿ˇ±¿ˇƒ¿ˇÎ¿ˇÒ¿ /¿ T¿ n¿ ¢¿ “¿ ˝¿-¿\¿É¿ã¿ë¿√¿¿G¿k¿ç¿•¿◊¿¿O¿Ø¿¿#¿w¿∑¿¬¿Ë¿¿8¿f¿Ñ¿Ω¿Ò¿E¿x¿ÿ¿1¿I¿T¿ò¿¬¿¿k¿v¿“¿¯¿˛¿	¿	9¿	F¿	o¿	u¿	à¿	å¿	ç¿	¡¿	”¿	Ê¿
¿
¿
'¿
7¿
g¿
∑¿
Ê¿B¿{¿û¿§¿‡¿¿¿/¿S¿n¿î¿Ã¿¿¿1¿T¿_¿Ö¿¶¿
¿i¿è¿µ¿Ì¿'¿?¿R¿u¿Ä¿¶¿«¿(¿N¿s¿´¿Â¿˝¿¿2¿=¿w¿†¿‰¿¿"¿J¿T¿Z¿[¿o¿ñ¿£¿Ã¿“¿Â¿È¿Í¿;¿Ü¿◊¿Ò¿$¿:¿L¿k¿q¿ã¿õ¿È¿=¿i¿m¿n¿Ω¿¿<¿k¿Å¿ì¿≤¿∏¿’¿¿¿.¿X¿{¿´¿µ¿¿¿2¿C¿¶¿∂¿≈¿È¿¿¿(¿8¿á¿ÿ¿¿¿¿I¿f¿§¿Ω¿ƒ¿¿d¿å¿¬¿¿¿-¿5¿;¿_¿ì¿È¿¿M¿Z¿ü¿«¿Ô¿D¿O¿X¿^¿Ä¿≠¿÷¿¿-¿:¿^¿d¿ô¿”¿ ¿  ¿ !¿ i¿ v¿ |¿ ¥¿ ˆ¿!:¿!N¿!T¿!x¿!ú¿!æ¿"¿"8¿"_¿"l¿"ï¿"æ¿"ƒ¿#¿#?¿#C¿#D¿#g¿#m¿#¬¿#‡¿$8¿$j¿$z¿$≥¿$ƒ¿%¿%¿%¿%a¿%g¿%k¿%l¿%x¿%´¿%⁄¿%ﬁ¿%ﬂ¿%Î¿&3¿&R¿&™¿&∏¿&æ¿&Ó¿'¿';¿'A¿'m¿'î¿'∂¿'º¿'¿¿'¡¿'Â¿'Ò¿(¿(:¿(|¿(≈¿(Ù¿(˝¿)¿)D¿)s¿)™¿)¥¿)√¿*%¿*P¿*b¿*Æ¿*π¿*Ê¿*Ó¿*Ù¿+¿+¿+¿+0¿+C¿+b¿+§¿+Ì¿+ˆ¿,¿,@¿,Ä¿,¬¿,Ã¿,Í¿,˘¿-[¿-Ç¿-î¿-‡¿-Î¿-Û¿-˘¿.¿.¿.¿.;¿.S¿.t¿.x¿.y¿.Ö¿.π¿.∫¿.∆¿.ÿ¿.Ô¿.Û¿.Ù¿/+¿/o¿/}¿/É¿/Ø¿/‰¿0¿0F¿0O¿0r¿0Ñ¿0≠¿0ﬁ¿1/¿1Ä¿1à¿1é¿1‹¿1ı¿2
¿22¿2w¿2Ç¿2∑¿2Ã¿2’¿2€¿3%¿3>¿3S¿3y¿3º¿3«¿3¸¿4¿4¿4 ¿4$¿4%¿41¿4j¿4´¿4Î¿5'¿5g¿5k¿5l¿5x¿5µ¿5ˇ¿6¿6¿6¿6M¿6ó¿6õ¿6ú¿6®¿7¿7¿7¿7U¿7Ä¿7‡¿8$¿8k¿8o¿8q   
_kEllipsis PlaceholderSpanIndexSemanticsTagTextParentData%RenderInlineChildrenContainerDefaultsRenderParagraph_SelectableFragment  ƒW