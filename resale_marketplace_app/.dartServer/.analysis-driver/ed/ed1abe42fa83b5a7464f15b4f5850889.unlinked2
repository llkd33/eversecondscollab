vneverediting
notEditingalways_stateonSingleTapUponDragSelectionEndgroupId
controller	focusNode
decorationpaddingplaceholderplaceholderStyleprefix
prefixModesuffix
suffixModecrossAxisAlignmentclearButtonModeclearButtonSemanticLabelkeyboardTypetextInputActiontextCapitalizationstyle
strutStyle	textAligntoolbarOptionstextAlignVerticaltextDirectionreadOnly
showCursor	autofocusobscuringCharacterobscureTextautocorrectsmartDashesTypesmartQuotesTypeenableSuggestionsmaxLinesminLinesexpands	maxLengthmaxLengthEnforcement	onChangedonEditingCompleteonSubmittedonTapOutsideonTapUpOutsideinputFormattersenabledcursorWidthcursorHeightcursorRadiuscursorOpacityAnimatescursorColorselectionHeightStyleselectionWidthStylekeyboardAppearancescrollPaddingenableInteractiveSelectionselectionControlsdragStartBehaviorscrollControllerscrollPhysicsselectionEnabledonTapautofillHintsclipBehaviorrestorationIdscribbleEnabledstylusHandwritingEnabledenableIMEPersonalizedLearningcontentInsertionConfigurationcontextMenuBuilder_defaultContextMenuBuildermagnifierConfigurationspellCheckConfigurationcupertinoMisspelledTextStylekMisspelledSelectionColor*defaultSpellCheckSuggestionsToolbarBuilderundoControllercreateStatedebugFillProperties_iosMagnifierConfigurationinferIOSSpellCheckConfiguration_clearGlobalKey_controller_effectiveController
_focusNode_effectiveFocusNode_effectiveMaxLengthEnforcement_showSelectionHandles _selectionGestureDetectorBuilderforcePressEnablededitableTextKey	initStatedidUpdateWidgetrestoreState_registerController_createLocalControllerdispose_editableText_requestKeyboard_handleFocusChanged_shouldShowSelectionHandles_handleSelectionChangedwantKeepAlive_shouldShowAttachment_hasDecoration_textAlignVertical_onClearButtonTapped_buildClearButton_addTextDependentAttachments
autofillIdautofilltextInputConfigurationbuild_kDefaultPlaceholderStyle_kDefaultRoundedBorderSide_kDefaultRoundedBorder _kDefaultRoundedBorderDecoration_kDisabledBackground_kClearButtonColor _iOSHorizontalCursorOffsetPixelsOverlayVisibilityMode2_CupertinoTextFieldSelectionGestureDetectorBuilderCupertinoTextField_CupertinoTextFieldStateÅÖBoxHeightStyleBoxWidthStyledefaultTargetPlatformSmartDashesTypeSmartQuotesTypeTextCapitalizationTextInputActionTextInputType	TextStyle
fontWeight
FontWeightw400colorCupertinoColorsplaceholderText
BorderSideCupertinoDynamicColorwithBrightnessColor	darkColorwidthBordertopbottomleftrightBoxDecorationwhiteblackborderborderRadiusBorderRadiusallRadiuscircularintEditableText#TextSelectionGestureDetectorBuilderstatedelegateoverridevoidTapDragUpDetails_clearGlobalKeycurrentContext	RenderBoxfindRenderObjectOffsetglobalToLocalglobalPositionhitTestBoxHitTestResultpositiononSingleTapUpwidgetonTapcallTapDragEndDetails_requestKeyboardonDragSelectionEndTextEditingControllerdisposeScaffold
ScrollableScrollNotificationObserverTextSelectionOverlay	TextFieldStatefulWidgetStringtightalwaysCrossAxisAlignmentcenternevernone	TextAlignstart
DeprecatedDragStartBehaviorboolCliphardEdgedefaultStylusHandwritingEnabledlengthdisabledenabled	identicalnewlinetext	multilineObject	FocusNodeEdgeInsetsGeometryinheritWidgetdoneCupertinoTheme
StrutStyleToolbarOptionsTextAlignVerticalTextDirectionMaxLengthEnforcement LengthLimitingTextInputFormatterValueChangedVoidCallbacknextpreviousTapRegionCallbackListTextInputFormatterdoubleDefaultSelectionStylecursorColorCupertinoThemeDataprimaryColor
activeBlueactiveOrange
Brightnesslight
EdgeInsetsTextSelectionControlsScrollControllerScrollPhysicsGestureTapCallbackIterableContentInsertionConfiguration%CupertinoAdaptiveTextSelectionToolbarEditableTextContextMenuBuilderBuildContextEditableTextStateTargetPlatformiOSSystemContextMenuisSupportededitableTexteditableTextStateCupertinoTextMagnifierTextMagnifierConfigurationSpellCheckConfigurationmisspelledTextStylematerialMisspelledTextStyle
decorationTextDecoration	underlinedecorationColor	systemReddecorationStyleTextDecorationStyledottedvisibleForTesting#spellCheckSuggestionsToolbarBuilder*defaultSpellCheckSuggestionsToolbarBuilder%CupertinoSpellCheckSuggestionsToolbarUndoHistoryControllerStateDiagnosticPropertiesBuilderdebugFillPropertiesaddDiagnosticsPropertydefaultValueStringPropertyEnumPropertyIntPropertyDoublePropertycreateCupertinoColorPropertyFlagPropertyvalueifFalseallowedMimeTypes!kDefaultContentInsertionMimeTypesmagnifierBuilderMagnifierControllerValueNotifierMagnifierInfoandroid
controllermagnifierInfofuchsialinuxmacOSwindowscopyWithcupertinoMisspelledTextStylemisspelledSelectionColorkMisspelledSelectionColorRestorationMixinAutomaticKeepAliveClientMixin+TextSelectionGestureDetectorBuilderDelegateAutofillClient	GlobalKeyRestorableTextEditingController	focusNodemaxLengthEnforcementgetDefaultMaxLengthEnforcementselectionEnabled	initStatecanRequestFocusaddListenerdidUpdateWidgetunregisterFromRestorationremoveListenerRestorationBucketregisterForRestorationupdateKeepAliveTextEditingValue	fromValuerestorePendingrestorationIdcurrentStaterequestKeyboardsetStateSelectionChangedCauseshouldShowSelectionToolbar	selectionisCollapsedkeyboardstylusHandwriting
isNotEmptyTextSelection	longPressbringIntoViewextentdraghideToolbar
attachmenteditinghasText
notEditingplaceholderclearButtonModeprefixsuffixtextAlignVerticalclear	onChangedclearButtonSemanticLabelCupertinoLocalizationsofcontextclearButtonLabel	SemanticsbuttonlabelchildGestureDetectorkeyPaddingpadding	symmetric
horizontalIconCupertinoIconsclear_thick_circledsizeresolveValueListenableBuildervalueListenablebuilder
VisibilitymaintainAnimationmaintainSizemaintainStatevisibleSizedBoxinfinityTextmaxLinesoverflowstyle	textAlign
prefixMode
suffixModeRowcrossAxisAlignmentchildrenExpandedStack	alignmentAlignmentDirectionaltextDirection
autofillIdautofillTextInputConfigurationautofillHintstoListgrowableAutofillConfigurationuniqueIdentifiercurrentEditingValuehintTexttextInputConfigurationautofillConfigurationbuilddebugCheckHasDirectionalityselectionControls$cupertinoTextSelectionHandleControls+cupertinoDesktopTextSelectionHandleControlshasFocusrequestFocusunfocus
MediaQuerydevicePixelRatioOfinputFormatters	maxLengthmaybeResolvebackgroundColor	textTheme	textStylemergeplaceholderStylekeyboardAppearancebrightnessOf	BoxBorderruntimeTypeselectionColorwithOpacityinferIOSSpellCheckConfigurationspellCheckConfigurationRepaintBoundaryUnmanagedRestorationScopebucketundoControllerreadOnlytoolbarOptions
showCursorshowSelectionHandleskeyboardTypetextInputActiontextCapitalization
strutStyle	autofocusobscuringCharacterobscureTextautocorrectsmartDashesTypesmartQuotesTypeenableSuggestionsminLinesexpandsmagnifierConfiguration_iosMagnifierConfigurationgroupIdonSelectionChangedonEditingCompleteonSubmittedonTapOutsiderendererIgnoresPointercursorWidthcursorHeightcursorRadiuscursorOpacityAnimatescursorOffsetpaintCursorAboveTextautocorrectionTextRectColorbackgroundCursorColorinactiveGrayselectionHeightStyleselectionWidthStylescrollPaddingdragStartBehaviorscrollControllerscrollPhysicsenableInteractiveSelectionautofillClientclipBehaviorscribbleEnabledstylusHandwritingEnabledenableIMEPersonalizedLearningcontentInsertionConfigurationcontextMenuBuilderisValid	collapsedoffsetonDidGainAccessibilityFocusonDidLoseAccessibilityFocusonFocusTextFieldTapRegionIgnorePointerignoring	ContainerbuildGestureDetectorbehaviorHitTestBehaviortranslucentAlign	AlignmentywidthFactorheightFactor#TextSelectionGestureDetectorBuilderStatefulWidgetStateRestorationMixinAutomaticKeepAliveClientMixin+TextSelectionGestureDetectorBuilderDelegateAutofillClientÑ$Ë¥∆çè è‰π5ÉEÉûSmartDashesTypeSmartQuotesTypeTextCapitalizationTextInputActionTextInputType Épackage:flutter/services.dart ÄˆÅBoxHeightStyleBoxWidthStyle Ä‡   ÄÄÛuiÄÛdart:uiÅDÅ^defaultTargetPlatform Å   package:flutter/foundation.dart  Åa   package:flutter/gestures.dart  Åâ   package:flutter/rendering.dart  Å≤   package:flutter/services.dart  Å⁄   package:flutter/widgets.dart  Ç   $adaptive_text_selection_toolbar.dart  Ç1   colors.dart  ÇG   desktop_text_selection.dart  Çm   
icons.dart  ÇÇ   localizations.dart  Çü   magnifier.dart  Ç∏   $spell_check_suggestions_toolbar.dart  ÇÁ   text_selection.dart  É   
theme.dart¿ rL ¿ ˙ÿÜö <ÄÜÄ§Ä•Ä’ÄﬁÄﬂÅÅÅ`ÅàÅ±ÅŸÇ ÇÇ0ÇFÇlÇÅÇûÇ∑ÇÊÉÉÉÉAÉ†É°ÉÿÉ˜Ñ!Ñ$Ñ%Ñ\ÑñÑ≈Ñ„ÖÖ
ÖÖÖIÖlÖíÖ∂Ö€ÖﬁÖﬂÜ%ÜTÜvÜúÜ°Ü√Ü˚Ü˛ÜˇáHádáÑáááàáøààkàáàßà™à´àÙâDâkânâπâ’äää[ä_ä≠äÔããPãYãZã£ã©ã¯å%å0å1åvå|å ç çççQç[ç]ç^çóç…é)é?é]é^éáéàéîé≈èèZè£è¡è˙êêoê¡ëëë#ë)ëKëlëpëqë}ë¥ë”ë˙ë˛í ííí"íuíèíìí‰ííÙìDìíìﬁîîî<î@îTî™îﬁî‚ï:ïJïNïüï‚ïÊñ3ñÉñ¬ñ∆ñ¸ó óJóîóòó‘óÿó¯ó¸òLòóòÁô)ôrôvôÑôàôÕöö:öâöùõKõ¨õﬁúúú[úëúóú‰ù!ù'ùuù∆ûû_ûêûñûÂüüügümüπ†
†Y†_†≠†¯°H°ó°™°∞°Í°¢ ¢¢S¢w¢∆££U£r£Å£¢£∑£À£‰§§J§`§ç§∞§ﬁ§Â§ˆ•*•;•o•®•‡¶¶$¶>¶u¶Ö¶ö¶¿¶‹¶Ùßß ßKßÜßåß•ß∫ß÷ß˘®®4®Z®Ä®£®∫®Õ®Á®˚©©.©J©`©w©ê©™©√©ﬂ©ˆ™*™Q™g™†™◊™Ù´)´_´Ö´°´±´Ã´‰¨¨7¨^¨v¨á¨∏¨Ù¨˙≠≠m≠ú≠÷≠¯ÆÆHÆaÆ√Æ‹Ø>ØoØ†ØØØ¸∞0∞:∞I∞Ü∞À∞’±+±^±‚±Ò≤2≤P≤ã≤˝≥≥≥x≥◊≥ÿ¥	¥¥_¥ï¥õ¥Ëµ%µ+µyµ ∂∂c∂î∂ö∂È∑∑#∑k∑q∑Ω∏∏\∏b∏r∏x∏≈∏Èπ8πÄπ«πÔπ˛∫∫4∫H∫a∫v∫§∫∫∫Òªª6ªGª{ª¥ªÏºº0ºJºÅºëº¶ºÃºËΩ ΩΩ,ΩWΩíΩòΩ±Ω∆Ω‚ææ#æ@æfæåæØæ∆æŸæÛøø&ø:øVøløÉøúø∂øœøÎ¿ @¿ @6¿ @]¿ @s¿ @¨¿ @„¿ A ¿ A5¿ Ak¿ Aë¿ A≠¿ AΩ¿ Aÿ¿ A¿ B¿ BC¿ Bj¿ BÇ¿ Bì¿ Bƒ¿ C ¿ C¿ C'¿ CQ¿ CÄ¿ C∫¿ C‹¿ C˝¿ D,¿ DE¿ Dß¿ D¿¿ E"¿ ES¿ EÑ¿ Eì¿ E‡¿ F¿ F¿ F-¿ Fj¿ FØ¿ Fπ¿ G¿ GB¿ G∆¿ G’¿ H¿ H4¿ Ho¿ H·¿ HÎ¿ I¿ I\¿ Iª¿ Iº¿ I¿ J¿ J	¿ J/¿ J5¿ J}¿ J®¿ J©¿ Jÿ¿ Jˆ¿ J˜¿ K<¿ KB¿ Kì¿ K¨¿ Kœ¿ K–¿ L¿ LZ¿ L`¿ L¶¿ L ¿ LÀ¿ M¿ MI¿ MO¿ M}¿ MÉ¿ M—¿ N¿ N8¿ N9¿ Nj¿ Np¿ N¡¿ O	¿ O-¿ O3¿ OÄ¿ OÜ¿ O⁄¿ Oˇ¿ P ¿ P7¿ PO¿ PP¿ Põ¿ P‘¿ P⁄¿ Q¿ Q¿ Q=¿ Qg¿ Qh¿ Qû¿ Q∂¿ Q∑¿ R¿ R;¿ RA¿ Rs¿ Ry¿ R§¿ RŒ¿ Rœ¿ S5¿ S;¿ Sj¿ Sp¿ S≤¿ S·¿ S‚¿ T(¿ T.¿ Tr¿ Të¿ Tó¿ T“¿ Tÿ¿ U	¿ U8¿ U9¿ U¿ UÖ¿ U’¿ U¯¿ V"¿ V#¿ V\¿ VÄ¿ VÅ¿ V∫¿ V¿¿ W¿ WG¿ Wq¿ Wr¿ W±¿ W‡¿ W·¿ X¿ X¿ XY¿ X_¿ X¨¿ X∆¿ X«¿ X˛¿ Y¿ Y¿ YU¿ Yr¿ Ys¿ Yõ¿ Y°¿ YÒ¿ Z9¿ Zj¿ Zy¿ Z¢¿ Z€¿ Zﬂ¿ [¿ [¿ [I¿ [w¿ [x¿ [≤¿ [ÿ¿ [Ÿ¿ \¿ \%¿ \&¿ \]¿ \w¿ \x¿ \Æ¿ \∆¿ \«¿ ]¿ ])¿ ]*¿ ]b¿ ]|¿ ]}¿ ]µ¿ ]œ¿ ]–¿ ^¿ ^@¿ ^A¿ ^à¿ ^±¿ ^≤¿ ^˚¿ _¿ _¿ _Q¿ _¢¿ _∑¿ _Œ¿ _œ¿ `¿ `U¿ `j¿ `Å¿ `Ç¿ `∂¿ `Ã¿ `Õ¿ a¿ a2¿ a8¿ a}¿ a∑¿ a⁄¿ a‡¿ b¿ b_¿ bÄ¿ bÜ¿ b–¿ c¿ c"¿ cm¿ cÑ¿ cä¿ c’¿ cÌ¿ cÓ¿ d-¿ d3¿ dÑ¿ d≠¿ d≥¿ dˇ¿ e¿ eH¿ e|¿ e}¿ e≥¿ e‹¿ e›¿ f¿ fD¿ fE¿ f}¿ fÉ¿ fì¿ fô¿ fﬂ¿ g/¿ gR¿ g}¿ g~¿ g∑¿ g‡¿ g·¿ h¿ hG¿ hH¿ hÑ¿ h∑¿ h∏¿ h‚¿ hË¿ i4¿ iÅ¿ iè¿ iï¿ i≠¿ i√¿ iƒ¿ i¸¿ j¿ j¿ jR¿ jp¿ jq¿ j™¿ j«¿ j»¿ k
¿ k.¿ k/¿ k`¿ kf¿ k≤¿ l¿ lQ¿ lç¿ l©¿ l™¿ lÙ¿ l˙¿ m9¿ mi¿ mj¿ m¥¿ m∫¿ m¯¿ n&¿ n'¿ nM¿ nS¿ nÜ¿ nå¿ nª¿ n„¿ n‰¿ o¿ o@¿ oA¿ oà¿ o±¿ o≤¿ o¿ p"¿ p#¿ p_¿ på¿ pç¿ p ¿ pˆ¿ p˜¿ q1¿ qW¿ qX¿ qï¿ q–¿ q—¿ r¿ r$¿ r%¿ r_¿ r£¿ rÃ¿ rÕ¿ s¿ s	¿ s,¿ sG¿ sH¿ sÄ¿ sü¿ s†¿ s‹¿ sÎ¿ t¿ tT¿ tX¿ tv¿ tw¿ tº¿ t„¿ t‰¿ u9¿ ue¿ uf¿ u∞¿ uˆ¿ u˜¿ v6¿ v<¿ vÑ¿ vä¿ vö¿ v†¿ vÌ¿ w)¿ w*¿ wV¿ wp¿ wô¿ wü¿ x ¿ xS¿ xY¿ xæ¿ x¬¿ x√¿ xı¿ x˚¿ yL¿ yù¿ y‘¿ z¿ z¿ zA¿ zG¿ z]¿ z∂¿ zº¿ {¿ {$¿ {`¿ {a¿ {•¿ {´¿ {˚¿ |H¿ |Ç¿ |É¿ |”¿ |Ÿ¿ |È¿ }9¿ }^¿ }•¿ }„¿ ~&¿ ~P¿ ~Ä¿ ~±¿ ~∂¿ ~∑¿ ¿ ¿ X¿ m¿ ±¿ ≤¿ Ä¿ Ä¿ Ä¿ Ä$¿ Än¿ Äç¿ ÄŸ¿ Å*¿ Åy¿ Åª¿ Å–¿ Ç¿ Ç&¿ ÇO¿ ÇU¿ Ç∫¿ Çæ¿ Çø¿ Çı¿ É$¿ É%¿ É1¿ Éz¿ É{¿ Éá¿ ÉÃ¿ É˜¿ Ñ¿ Ñk¿ Ñr¿ Ñ“¿ ÑÊ¿ Ö¿ Ö2¿ ÖJ¿ Öf¿ Öo¿ Öv¿ Ö»¿ Ü¿ ÜY¿ Ü≥¿ Ü«¿ á'¿ á.¿ áB¿ á¢¿ á©¿ à¿ à!¿ àz¿ àÅ¿ àï¿ àø¿ à◊¿ àÌ¿ â¿ â ¿ â'¿ â¿ â€¿ âÔ¿ äO¿ äV¿ ä∂¿ ã¿ ã)¿ ãN¿ ãi¿ ãÇ¿ ã⁄¿ ã„¿ ãÍ¿ ã˛¿ å#¿ å>¿ åW¿ åØ¿ å∏¿ åø¿ å”¿ ç0¿ ç7¿ ç¿ ç ¿ é"¿ éo¿ éÉ¿ é≠¿ éÕ¿ éÎ¿ è¿ è¿ è¿ èj¿ è¿¿ ê#¿ ê7¿ êú¿ ê£¿ ë¿ ë¿ ë-¿ ëI¿ ëj¿ ëÜ¿ ë≠¿ ë∂¿ ëΩ¿ ë—¿ í¿ í ¿ í;¿ íW¿ í`¿ íg¿ í{¿ í®¿ íƒ¿ íﬁ¿ í˙¿ ì¿ ì
¿ ì¿ ì|¿ ìÉ¿ ìÁ¿ ì˚¿ î)¿ îF¿ îa¿ î}¿ îÜ¿ îç¿ îÚ¿ ï¿ ïb¿ ïi¿ ï}¿ ï÷¿ ï›¿ ïÒ¿ ñ¿ ñ6¿ ñX¿ ñú¿ ñ•¿ ñ¨¿ ñ¿¿ ñ·¿ ó
¿ ó1¿ óM¿ óV¿ ó]¿ óq¿ ó•¿ ó»¿ óÈ¿ ò¿ ò¿ ò¿ ò)¿ òR¿ òt¿ ò¡¿ ò◊¿ ô	¿ ô,¿ ôa¿ ôj¿ ôq¿ ôu¿ ôv¿ ôŸ¿ ôÒ¿ ö¿ ö3¿ öe¿ öm¿ öî¿ öπ¿ ö⁄¿ õ9¿ õ^¿ õÅ¿ õ§¿ õ…¿ õ‡¿ õË¿ õÔ¿ õÙ¿ õı¿ úE¿ úï¿ ú◊¿ ù¿ ù	¿ ùg¿ ùû¿ ù§¿ ù•¿ ù»¿ ù„¿ ûC¿ ûc¿ û≈¿ û¿ ü/¿ üx¿ ü¿ üÉ¿ üÖ¿ üÜ¿ ü«¿ †¿ †a¿ †í¿ †ì¿ †√¿ ° ¿ °!¿ °:¿ °ì¿ °î¿ °—¿ °ˆ¿ ¢?¿ ¢@¿ ¢f¿ ¢g¿ ¢√¿ ¢ƒ¿ ¢˛¿ £
¿ £0¿ £1¿ £=¿ £î¿ £ï¿ £°¿ £Ÿ¿ §¿ §¿ §'¿ §<¿ §S¿ §Æ¿ §¡¿ §»¿ §Ì¿ •¿ •¿ •M¿ •á¿ •ã¿ •å¿ •ò¿ •œ¿ •ı¿ ¶:¿ ¶u¿ ¶¡¿ ¶¿ ß¿ ß(¿ ß.¿ ß/¿ ßb¿ ß≤¿ ß¸¿ ®¿ ®<¿ ®@¿ ®A¿ ®M¿ ®ñ¿ ®µ¿ ®“¿ ®ÿ¿ ®‹¿ ®›¿ ®¸¿ ©¿ ©U¿ ©ä¿ ©é¿ ©è¿ © ¿ ©Î¿ ©˝¿ ™¿ ™C¿ ™É¿ ™û¿ ™ª¿ ™¡¿ ™≈¿ ™∆¿ ™“¿ ´¿ ´¿ ´¿ ´'¿ ´d¿ ´¿ ´õ¿ ´∞¿ ´¥¿ ´µ¿ ´˝¿ ´˛¿ ¨¿ ¨?¿ ¨C¿ ¨D¿ ¨c¿ ¨u¿ ¨¡¿ ¨’¿ ¨›¿ ¨·¿ ¨‚¿ ≠%¿ ≠s¿ ≠≥¿ ≠˚¿ Æ¿ Æ¿ Æ¿ Æ\¿ Æí¿ Æ¶¿ Æ¨¿ Æ≠¿ Æ‡¿ ÆÙ¿ Æ˙¿ Æ˚¿ Ø7¿ ØJ¿ ØP¿ ØQ¿ ØÅ¿ Øî¿ Øö¿ Øõ¿ Ø≠¿ Ø±¿ Ø≤¿ ∞
¿ ∞X¿ ∞ï¿ ∞©¿ ∞„¿ ∞Ì¿ ∞Û¿ ∞Ù¿ ±¿ ±8¿ ±Y¿ ±z¿ ±ù¿ ±¿¿ ±„¿ ≤¿ ≤T¿ ≤^¿ ≤d¿ ≤e¿ ≤ä¿ ≤©¿ ≤Ã¿ ≤Ô¿ ≤˛¿ ≥¿ ≥@¿ ≥c¿ ≥ñ¿ ≥Ω¿ ≥«¿ ≥Õ¿ ≥—¿ ≥“¿ ≥ﬁ¿ ¥'¿ ¥(¿ ¥N¿ ¥}¿ ¥ò¿ ¥ü¿ ¥¿¿ ¥Ï¿ µ¿ µH¿ µ|¿ µÉ¿ µá¿ µà¿ µ«¿ µ„¿ ∂¿ ∂M¿ ∂n¿ ∂ç¿ ∂ë¿ ∂í¿ ∂ÿ¿ ∑'¿ ∑o¿ ∑ú¿ ∑»¿ ∑¿ ∑ˆ¿ ∏D¿ ∏H¿ ∏I¿ ∏i¿ ∏®¿ ∏ ¿ ∏›¿ π,¿ πx¿ πñ¿ πœ¿ π’¿ πŸ¿ π⁄¿ π˘¿ ∫¿ ∫w¿ ∫x¿ ∫é¿ ∫¢¿ ∫ª¿ ∫Ÿ¿ ∫˜¿ ª4¿ ªL¿ ªå¿ ª£¿ ª”¿ ªÎ¿ º:¿ ºG¿ ºR¿ º[¿ ºb¿ ºf¿ ºg¿ ºé¿ ºß¿ º¿¿ º‡¿ ºÊ¿ Ω5¿ ΩB¿ Ω]¿ Ωx¿ Ω~¿ Ω¿ Ω¿¿ Ωı¿ æ"¿ æ=¿ æã¿ ææ¿ æ˙¿ ø¿ øB¿ øY¿ ø°¿ øø¿ øÍ¿ ¿¿ ¿7¿ ¿\¿ ¿¿ ¿´¿ ¿œ¿ ¿˛¿ ¡!¿ ¡J¿ ¡ü¿ ¡Û¿ ¬F¿ ¬ñ¿ ¬œ¿ √¿ √M¿ √~¿ √≥¿ √Ã¿ √„¿ √¯¿ ƒ¿ ƒ¿ ƒ1¿ ƒÑ¿ ƒ§¿ ƒº¿ ƒΩ¿ ≈¿ ≈K¿ ≈t¿ ≈ê¿ ≈õ¿ ≈◊¿ ∆¿ ∆!¿ ∆,¿ ∆~¿ ∆†¿ ∆ ¿ «
¿ «:¿ «E¿ «Y¿ «í¿ «∞¿ »¿ »)¿ »]¿ »∂¿ »–¿ »Ê¿ …¿ …T¿ …¶¿ …∆¿  ¿  K¿  Ä¿  ÿ¿  È¿  ¯¿ À,¿ À9¿ ÀD¿ ÀM¿ ÀT¿ ÀX¿ ÀY¿ ÀÉ¿ Àè¿ Àƒ¿ À≈¿ À—¿ Ã/¿ Ã0¿ Ã<¿ Ãr¿ Ã…¿ Õ¿ Õ¿ ÕD¿ Õp¿ Õú¿ Õ€¿ Œ¿ Œ¿ ŒC¿ ŒD¿ Œ~¿ Œ≤¿ Œπ¿ ŒΩ¿ ŒÂ¿ ŒÊ¿ ŒÚ¿ œ¿ œY¿ œã¿ œŒ¿ œœ¿ –¿ –O¿ –Ç¿ –ß¿ –∆¿ –È¿ —¿ —T¿ —u¿ —ñ¿ —π¿ “¿ “7¿ “è¿ “Â¿ ”¿ ”!¿ ”,¿ ”[¿ ”Ñ¿ ”è¿ ”ï¿ ”ñ¿ ”ø¿ ”Á¿ ‘8¿ ‘A¿ ‘H¿ ‘é¿ ‘∞¿ ‘‘¿ ‘˛¿ ’¿ ’Z¿ ’e¿ ’l¿ ’±¿ ’≤¿ ’Ô¿ ÷>¿ ÷°¿ ÷®¿ ÷©¿ ÷˝¿ ÷˛¿ ◊Q¿ ◊´¿ ◊Ê¿ ÿ¿ ÿ)¿ ÿ2¿ ÿ9¿ ÿ:¿ ÿå¿ ÿç¿ ÿ∑¿ Ÿ¿ Ÿ ¿ ŸL¿ Ÿõ¿ ŸÆ¿ Ÿª¿ Ÿ€¿ Ÿ‹¿ ⁄:¿ ⁄;¿ ⁄Ç¿ ⁄¢¿ ⁄±¿ ⁄∏¿ ⁄π¿ ⁄Ú¿ €"¿ €>¿ €t¿ €õ¿ €Æ¿ ‹¿ ‹¿ ‹¿ ‹&¿ ‹M¿ ‹d¿ ‹|¿ ‹∞¿ ‹Ê¿ › ¿ ›X¿ ›i¿ ›o¿ ›p¿ ›æ¿ ﬁ
¿ ﬁ(¿ ﬁ5¿ ﬁG¿ ﬁg¿ ﬁÆ¿ ﬁ–¿ ﬁˇ¿ ﬂ¿ ﬂ¿ ﬂ(¿ ﬂT¿ ﬂê¿ ﬂ£¿ ﬂ∞¿ ﬂÚ¿ ﬂÛ¿ ‡B¿ ‡í¿ ‡Ω¿ ‡˘¿ ·U¿ ·V¿ ·Å¿ ·†¿ ·æ¿ ·Ë¿ ‚¿ ‚!¿ ‚C¿ ‚g¿ ‚ö¿ ‚Õ¿ „ ¿ „+¿ „d¿ „ê¿ „ø¿ „Ù¿ ‰/¿ ‰M¿ ‰x¿ ‰°¿ ‰“¿ ‰˚¿ Â6¿ Âc¿ Âê¿ Â≈¿ Â˙¿ Ê3¿ ÊZ¿ ÊÅ¿ Ê¶¿ Ê ¿ Á*¿ Á{¿ ÁÕ¿ Ë$¿ ËI¿ Ër¿ Ë´¿ Ë‰¿ È¿ È@¿ Èi¿ Èì¿ È¿¿ ÈÔ¿ Í¿ ÍD¿ ÍÖ¿ Í≠¿ Í’¿ Î¿ ÎP¿ Î|¿ Îì¿ Î¢¿ Î·¿ Ï¿ ÏO¿ ÏÉ¿ Ïº¿ ÏÛ¿ Ì$¿ Ìo¿ Ìë¿ Ì¿¿ ÌÁ¿ Ó¿ Óc¿ Ó¥¿ Ô¿ Ô@¿ Ô~¿ Ôã¿ Ôñ¿ Ôü¿ Ô¶¿ Ôß¿ ÔΩ¿ Ô’¿ Ô‚¿ ¿ ¿ 2¿ g¿ …¿ €¿ ˇ¿ Ò¿ ÒT¿ Òò¿ Òß¿ Òπ¿ ÒŒ¿ ÒÊ¿ Ú¿ Úy¿ Ú—¿ Û#¿ Û{¿ Ûœ¿ Û‚¿ Û„¿ Ù?¿ Ùu¿ Ù§¿ Ù˘¿ ıM¿ ı¢¿ ı˜¿ ˆJ¿ ˆÅ¿ ˆñ¿ ˆÊ¿ ˜5¿ ˜à¿ ˜Ø¿ ˜’¿ ˜Á¿ ˜˜¿ ¯¿ ¯.¿ ¯L¿ ¯j¿ ¯Ü¿ ¯≥¿ ˘¿ ˘P¿ ˘Ö¿ ˘°¿ ˘„¿ ˙¿ ˙(¿ ˙ä¿ ˙õ¿ ˙™¿ ˙∑¿ ˙¬¿ ˙À¿ ˙“¿ ˙÷¿ ˙ÿ   //// @docImport 'package:flutter/material.dart';ÄﬂÄÙÄÛÄˆÅÅ  ÅDÅ^Å`   Åà   Å±   ÅŸ   Ç   Ç0   ÇF   Çl   ÇÅ   Çû   Ç∑   ÇÊ   É   ÉÉEÉû ç^Ñ°çdçd  çÀÄëçÀ çÀç˝  çˇ'é"é!  	é6é/é8éEéJéZéSéKéUé`%éé   éäÇÂéõéõ  é©éªé∫  éäéãësÄäëÑëÑ  ëóë™ë©  ësët í¿ çÉõ≤õ≤â™/// An iOS-style text field.
///
/// A text field lets the user enter text, either with a hardware keyboard or with
/// an onscreen keyboard.
///
/// This widget corresponds to both a `UITextField` and an editable `UITextView`
/// on iOS.
///
/// The text field calls the [onChanged] callback whenever the user changes the
/// text in the field. If the user indicates that they are done typing in the
/// field (e.g., by pressing a button on the soft keyboard), the text field
/// calls the [onSubmitted] callback.
///
/// {@macro flutter.widgets.EditableText.onChanged}
///
/// {@tool dartpad}
/// This example shows how to set the initial value of the [CupertinoTextField] using
/// a [controller] that already contains some text.
///
/// ** See code in examples/api/lib/cupertino/text_field/cupertino_text_field.0.dart **
/// {@end-tool}
///
/// The [controller] can also control the selection and composing region (and to
/// observe changes to the text, selection, and composing region).
///
/// The text field has an overridable [decoration] that, by default, draws a
/// rounded rectangle border around the text field. If you set the [decoration]
/// property to null, the decoration will be removed entirely.
///
/// {@macro flutter.material.textfield.wantKeepAlive}
///
/// Remember to call [TextEditingController.dispose] when it is no longer
/// needed. This will ensure we discard any resources used by the object.
///
/// {@macro flutter.widgets.editableText.showCaretOnScreen}
///
/// ## Scrolling Considerations
///
/// If this [CupertinoTextField] is not a descendant of [Scaffold] and is being
/// used within a [Scrollable] or nested [Scrollable]s, consider placing a
/// [ScrollNotificationObserver] above the root [Scrollable] that contains this
/// [CupertinoTextField] to ensure proper scroll coordination for
/// [CupertinoTextField] and its components like [TextSelectionOverlay].
///
/// See also:
///
///  * <https://developer.apple.com/documentation/uikit/uitextfield>
///  * [TextField], an alternative text field widget that follows the Material
///    Design UI conventions.
///  * [EditableText], which is the raw text editing control at the heart of a
///    [TextField].
///  * Learn how to use a [TextEditingController] in one of our [cookbook recipes](https://docs.flutter.dev/cookbook/forms/text-field-changes#2-use-a-texteditingcontroller).
///  * <https://developer.apple.com/design/human-interface-guidelines/ios/controls/text-fields/> õ‡óˆ£] £]£o á*/// Creates an iOS-style text field.
///
/// To provide a prefilled text entry, pass in a [TextEditingController] with
/// an initial value to the [controller] parameter.
///
/// To provide a hint placeholder text that appears when the text entry is
/// empty, pass a [String] to the [placeholder] parameter.
///
/// The [maxLines] property can be set to null to remove the restriction on
/// the number of lines. In this mode, the intrinsic height of the widget will
/// grow as the number of lines of text grows. By default, it is `1`, meaning
/// this is a single-line text field and will scroll horizontally when
/// it overflows. [maxLines] must not be zero.
///
/// The text cursor is not shown if [showCursor] is false or if [showCursor]
/// is null (the default) and [readOnly] is true.
///
/// If specified, the [maxLength] property must be greater than zero.
///
/// The [selectionHeightStyle] and [selectionWidthStyle] properties allow
/// changing the shape of the selection highlighting. These properties default
/// to [ui.BoxHeightStyle.tight] and [ui.BoxWidthStyle.tight], respectively.
///
/// The [autocorrect], [autofocus], [clearButtonMode], [dragStartBehavior],
/// [expands], [obscureText], [prefixMode], [readOnly], [scrollPadding],
/// [suffixMode], [textAlign], [selectionHeightStyle], [selectionWidthStyle],
/// [enableSuggestions], and [enableIMEPersonalizedLearning] properties must
/// not be null.
///
/// {@macro flutter.widgets.editableText.accessibility}
///
/// See also:
///
///  * [minLines], which is the minimum number of lines to occupy when the
///    content spans fewer lines.
///  * [expands], to allow the widget to size itself to its parent's height.
///  * [maxLength], which discusses the precise meaning of "number of
///    characters" and how it may differ from the intuitive meaning.G£v	£}£|  £Ö£ã£ä  £¶£¨£´  £ª£¡£¿  £œ£’£‘  £Ë2£Ó£Ì  § (§&§%  §N§T§S  §d§j§i  §È§Ô§Ó  §˙.• §ˇ  •.•4•3  •?.•E•D  •s3•y•x  •¨2•≤•±  •‰•Í•È  ¶¶¶  ¶(¶.¶-  ¶B1¶H¶G  ¶y
¶¶~  ¶â¶è¶é  ¶û ¶§¶£  ¶ƒ¶ ¶…  ¶‡¶Ê¶Â  ¶¯¶˛¶˝  ßÄêßñßï  ß©ßØßÆ  ßæßƒß√  ß⁄ß‡ßﬂ  ß˝®®  ®®!®   ®8 ®J®I  ®^ ®p®o  ®Ñ®ä®â  ®ß®≠®¨  ®æ®ƒ®√  ®—®◊®÷  ®Î®Ò®  ®ˇ©©  ©©$©#  ©2©8©7  ©N©T©S  ©d©j©i  ©{©Å©Ä  ©î©ö©ô  ©Æ©¥©≥  ©«©Õ©Ã  ©„©È©Ë  ©˙.™ ©ˇ  ™.!™4™3  ™U™[™Z  ™k3™q™p  ™§1™™™©  ™€™·™‡  ™¯/™˛™˝  ´-0´3´2  ´c ´j´i  ´â´è´é  ´•
´´´™  ´µ´ª´∫  ´–´÷´’  ´Ë%´Ó´Ì  ¨"¨¨  ¨;!¨A¨@  ¨b¨h¨g  ¨zÄü≠≠  ≠L≠%≠$  ≠q)≠w≠v  ≠†4≠¶≠•  ≠⁄≠‡≠ﬂ  ≠¸ÆÆ  Å£î£˙§/§5§?§@§C§G§D§|§Ç§ã§‚§ù§ì§ü§©§™§ª§∂§Ω§Ã§Õ••!•"•Q•f•g•ç•ü•†•√•ÿ•Ÿ¶\¶n¶o¶Ø¶∏¶πßßßßßäß&ßQßœßÙ®®.®ù®∑®‡©Ω©⁄™™™™™#™'™$™K™á™â™ä™ò™ô™ø™¡™¬™œ™–´´´´´!´&´"´F´W´X´˝¨¨¨¨
¨¨O¨S¨T¨z¨{¨Ö¨¯¨ç¨æ≠≠?≠K≠L≠ñ≠∫Æ Æ&ÆEÆAÆ'Æ9Æ:ÆDÆ_ÆOÆ|ÆlÆÆ¿ÆåÆßÆÄÆéÆùÆûÆ©Æ∏ÆπÆ⁄Æ Æ˜ÆÁÆ˙Ø;ØØ"Æ˚Ø	ØØØ$Ø3Ø4ØEØKØlØ]ØUØLØXØiØ`ØkØvØ|ØùØéØÜØ}ØâØöØëØúØßØ≠Ø˙∞7Ø·ØÀØ∏Ø…Ø¬ØπØ≈ØŒØﬂØÿØœØ€Ø‰Ø˘ØÓØÂØÒ∞∞A∞G∞Ñ∞“∞[∞R∞S∞^∞É∞p∞h∞_∞k∞|∞s∞∞è∞‹∞‚± ±(∞∞„∞‰∞¸∞Û∞ˇ±±2±8±[±K±C±9±F±X±N±Z±È±Ô≤â≥≤M≤/±˙±˚≤≤-≤≤≤%≤&≤H≤?≤K≤]≤^≤g≤à≤h≤v≤É≤Ñ≤î≥≥≥5≥(≥8≥u≥G≥\≥B≥9≥E≥I≥V≥W≥^≥k≥l≥ö≥≥∑≥ú≥∫≥‘≥≈≥ª≥º≥»≥…≥⁄ï‡πœπ·π‚πÏπ‚Ö≤/// Creates a borderless iOS-style text field.
///
/// To provide a prefilled text entry, pass in a [TextEditingController] with
/// an initial value to the [controller] parameter.
///
/// To provide a hint placeholder text that appears when the text entry is
/// empty, pass a [String] to the [placeholder] parameter.
///
/// The [maxLines] property can be set to null to remove the restriction on
/// the number of lines. In this mode, the intrinsic height of the widget will
/// grow as the number of lines of text grows. By default, it is `1`, meaning
/// this is a single-line text field and will scroll horizontally when
/// it overflows. [maxLines] must not be zero.
///
/// The text cursor is not shown if [showCursor] is false or if [showCursor]
/// is null (the default) and [readOnly] is true.
///
/// If specified, the [maxLength] property must be greater than zero.
///
/// The [selectionHeightStyle] and [selectionWidthStyle] properties allow
/// changing the shape of the selection highlighting. These properties default
/// to [ui.BoxHeightStyle.tight] and [ui.BoxWidthStyle.tight] respectively.
///
/// See also:
///
///  * [minLines], which is the minimum number of lines to occupy when the
///    content spans fewer lines.
///  * [expands], to allow the widget to size itself to its parent's height.
///  * [maxLength], which discusses the precise meaning of "number of
///    characters" and how it may differ from the intuitive meaning.GπÛ	π˙π˘  ∫∫∫  ∫#∫)∫(  ∫8∫>∫=  ∫L∫R∫Q  ∫e∫k∫j  ∫z(∫Ä∫  ∫®∫Æ∫≠  ∫æ1∫ƒ∫√  ∫ı∫˚∫˙  ª.ªª  ª:ª@ª?  ªK.ªQªP  ª3ªÖªÑ  ª∏2ªæªΩ  ªªˆªı  ºº#º"  º4º:º9  ºN1ºTºS  ºÖ
ºãºä  ºïºõºö  º™ º∞ºØ  º–º÷º’  ºÏºÚºÒ  ΩΩ
Ω	  ΩÄêΩ¢Ω°  ΩµΩªΩ∫  Ω Ω–Ωœ  ΩÊΩÏΩÎ  æ	ææ  æ'æ-æ,  æD æVæU  æj æ|æ{  æêæñæï  æ≥æπæ∏  æ æ–æœ  æ›æ„æ‚  æ˜æ˝æ¸  øøø  ø*ø0ø/  ø>øDøC  øZø`ø_  øpøvøu  øáøçøå  ø†ø¶ø•  ø∫ø¿øø  ø”øŸøÿ  øÔøıøÙ  ¿ @.¿ @¿ @  ¿ @:!¿ @@¿ @?  ¿ @a¿ @g¿ @f  ¿ @w3¿ @}¿ @|  ¿ @∞1¿ @∂¿ @µ  ¿ @Á¿ @Ì¿ @Ï  ¿ A/¿ A
¿ A	  ¿ A90¿ A?¿ A>  ¿ Ao ¿ Av¿ Au  ¿ Aï¿ Aõ¿ Aö  ¿ A±
¿ A∑¿ A∂  ¿ A¡¿ A«¿ A∆  ¿ A‹¿ A‚¿ A·  ¿ AÙ%¿ A˙¿ A˘  ¿ B"¿ B%¿ B$  ¿ BG!¿ BM¿ BL  ¿ Bn¿ Bt¿ Bs  ¿ BÜÄü¿ C¿ C  ¿ C+$¿ C1¿ C0  ¿ CU)¿ C[¿ CZ  ¿ CÑ4¿ Cä¿ Câ  ¿ Cæ¿ Cƒ¿ C√  ¿ C‡¿ CÊ¿ CÂ  Å∫∫â∫è∫ô∫ö∫ù∫°∫û∫÷ªª-ª.ª]ªrªsªôª´ª¨ªœª‰ªÂºhºzº{ºªºƒº≈ΩΩΩ Ω*ΩñΩ2Ω]Ω€æ ææ:æ©æ√æÏø…øÊ¿ @¿ @ ¿ @&¿ @'¿ @/¿ @3¿ @0¿ @W¿ @ì¿ @ï¿ @ñ¿ @§¿ @•¿ @À¿ @Õ¿ @Œ¿ @€¿ @‹¿ A¿ A¿ A)¿ A*¿ A-¿ A2¿ A.¿ AR¿ Ac¿ Ad¿ B	¿ B¿ B¿ B¿ B¿ B¿ B[¿ B_¿ B`¿ BÜ¿ Bá¿ Bë¿ C¿ Bô¿ B ¿ C!¿ CK¿ Cz¿ Cû¿ D¿ D
¿ D)¿ D%¿ D¿ D¿ D¿ D(¿ DC¿ D3¿ D`¿ DP¿ Dc¿ D§¿ Dp¿ Dã¿ Dd¿ Dr¿ DÅ¿ DÇ¿ Dç¿ Dú¿ Dù¿ Dæ¿ DÆ¿ D€¿ DÀ¿ Dﬁ¿ E¿ DÎ¿ E¿ Dﬂ¿ DÌ¿ D¸¿ D˝¿ E¿ E¿ E¿ E)¿ E/¿ EP¿ EA¿ E9¿ E0¿ E<¿ EM¿ ED¿ EO¿ EZ¿ E`¿ EÅ¿ Er¿ Ej¿ Ea¿ Em¿ E~¿ Eu¿ EÄ¿ Eã¿ Eë¿ Eﬁ¿ F¿ E≈¿ EØ¿ Eú¿ E≠¿ E¶¿ Eù¿ E©¿ E≤¿ E√¿ Eº¿ E≥¿ Eø¿ E»¿ E›¿ E“¿ E…¿ E’¿ EÈ¿ F%¿ F+¿ Fh¿ F∂¿ F?¿ F6¿ F7¿ FB¿ Fg¿ FT¿ FL¿ FC¿ FO¿ F`¿ FW¿ Fc¿ Fs¿ F¿¿ F∆¿ F‰¿ G¿ F‘¿ F«¿ F»¿ F‡¿ F◊¿ F„¿ FÊ¿ G¿ G¿ G?¿ G/¿ G'¿ G¿ G*¿ G<¿ G2¿ G>¿ GÕ¿ G”¿ Hm¿ HË¿ H1¿ H¿ Gﬁ¿ Gﬂ¿ GË¿ H¿ GÈ¿ G˙¿ H	¿ H
¿ H,¿ H#¿ H/¿ HA¿ HB¿ HK¿ Hl¿ HL¿ HZ¿ Hg¿ Hh¿ Hx¿ Hˇ¿ HÚ¿ I¿ I¿ I¿ IY¿ I+¿ I@¿ I&¿ I¿ I)¿ I-¿ I:¿ I;¿ IB¿ IO¿ IP¿ I~¿ Ic¿ Iõ¿ IÄ¿ Iû¿ I∏¿ I©¿ Iü¿ I†¿ I¨¿ I≠I¿ IæH¿ Iˇ¿ Iˇ1/// {@macro flutter.widgets.editableText.groupId} ¿ JÄõ¿ Jú¿ Júm/// Controls the text being edited.
///
/// If null, this widget will create its own [TextEditingController]. ¿ J´I¿ JÎ¿ JÎ,/// {@macro flutter.widgets.Focus.focusNode} ¿ J˘Ä‘¿ K√¿ K√Ä¨/// Controls the [BoxDecoration] of the box behind the text input.
///
/// Defaults to having a rounded rectangle grey border and can be null to have
/// no box decoration. ¿ K“Äˆ¿ L¡¿ L¡ÄÕ/// Padding around the text entry area between the [prefix] and [suffix]
/// or the clear button when [clearButtonMode] is not never.
///
/// Defaults to a padding of 6 pixels on all sides and can be null. ¿ LÕÅi¿ N+¿ N+ÅA/// A lighter colored placeholder hint that appears on the first line of the
/// text field when the text entry is empty.
///
/// Defaults to having no placeholder text.
///
/// The text style of the placeholder text matches that of the text field's
/// main text entry except a lighter font weight and a grey font color. ¿ N;Å¬¿ OÌ¿ OÌÅé/// The style to use for the placeholder text.
///
/// The [placeholderStyle] is merged with the [style] [TextStyle] when applied
/// to the [placeholder] text. To avoid merging with [style], specify
/// [TextStyle.inherit] as false.
///
/// Defaults to the [style] property with w300 font weight and grey color.
///
/// If specifically set to null, placeholder's style will be the same as [style]. ¿ PK¿ PG¿ PG4/// An optional [Widget] to display before the text. ¿ PRÅ¿ Q[¿ Q[Ä‡/// Controls the visibility of the [prefix] widget based on the state of
/// text entry when the [prefix] argument is not null.
///
/// Defaults to [OverlayVisibilityMode.always].
///
/// Has no effect when [prefix] is null. ¿ QjJ¿ QÆ¿ QÆ3/// An optional [Widget] to display after the text. ¿ QπÅ¿ R¬¿ R¬Ä‡/// Controls the visibility of the [suffix] widget based on the state of
/// text entry when the [suffix] argument is not null.
///
/// Defaults to [OverlayVisibilityMode.always].
///
/// Has no effect when [suffix] is null. ¿ R—Å¿ SÕ¿ SÕÄÿ/// Controls the vertical alignment of the [prefix] and the [suffix] widget in relation to content.
///
/// Defaults to [CrossAxisAlignment.center].
///
/// Has no effect when both the [prefix] and [suffix] are null. ¿ S‰ÅR¿ U'¿ U'Å/// Show an iOS-style clear button to clear the current text entry.
///
/// Can be made to appear depending on various text states of the
/// [TextEditingController].
///
/// Will only appear if no [suffix] widget is appearing.
///
/// Defaults to [OverlayVisibilityMode.never]. ¿ U;ÄÂ¿ V¿ VÄ∂/// The semantic label for the clear button used by screen readers.
///
/// This will be used by screen reading software to identify the clear button
/// widget. Defaults to "Clear". ¿ V%Y¿ Vr¿ Vr6/// {@macro flutter.widgets.editableText.keyboardType} ¿ VÉÄÏ¿ W`¿ W`ÄΩ/// The type of action button to use for the keyboard.
///
/// Defaults to [TextInputAction.newline] if [keyboardType] is
/// [TextInputType.multiline] and [TextInputAction.done] otherwise. ¿ Wtj¿ WÃ¿ WÃ</// {@macro flutter.widgets.editableText.textCapitalization} ¿ W„Ä·¿ Xø¿ XøÄ¿/// The style to use for the text being edited.
///
/// Also serves as a base for the [placeholder] text's style.
///
/// Defaults to the standard iOS font style from [CupertinoTheme] if null. ¿ X…S¿ Y¿ Y4/// {@macro flutter.widgets.editableText.strutStyle} ¿ Y!O¿ Yg¿ Yg3/// {@macro flutter.widgets.editableText.textAlign} ¿ YuÅê¿ Z˜¿ Z˜ÄÏ/// Configuration of toolbar options.
///
/// If not set, select all and paste will default to be enabled. Copy and cut
/// will be disabled if [obscureText] is true. If [readOnly] is true,
/// paste and cut will be disabled regardless.¿ Zl¿ Zm¿ Zw¿ Z›¿ Z}¿ Z¶¿ [
k¿ [d¿ [d>/// {@macro flutter.material.InputDecorator.textAlignVertical} ¿ [z\¿ […¿ […7/// {@macro flutter.widgets.editableText.textDirection} ¿ [€H¿ \¿ \2/// {@macro flutter.widgets.editableText.readOnly} ¿ \(M¿ \k¿ \k4/// {@macro flutter.widgets.editableText.showCursor} ¿ \zJ¿ \ª¿ \ª3/// {@macro flutter.widgets.editableText.autofocus} ¿ \…^¿ ]¿ ]</// {@macro flutter.widgets.editableText.obscuringCharacter} ¿ ],N¿ ]o¿ ]o5/// {@macro flutter.widgets.editableText.obscureText} ¿ ]N¿ ]¬¿ ]¬5/// {@macro flutter.widgets.editableText.autocorrect} ¿ ]“l¿ ^/¿ ^/D/// {@macro flutter.services.TextInputConfiguration.smartDashesType} ¿ ^Cl¿ ^†¿ ^†D/// {@macro flutter.services.TextInputConfiguration.smartQuotesType} ¿ ^¥e¿ _¿ _F/// {@macro flutter.services.TextInputConfiguration.enableSuggestions} ¿ _ÄÆ¿ _ƒ¿ _ƒÄî/// {@macro flutter.widgets.editableText.maxLines}
///  * [expands], which determines whether the field should fill the height of
///    its parent. ¿ _—ÄÆ¿ `w¿ `wÄî/// {@macro flutter.widgets.editableText.minLines}
///  * [expands], which determines whether the field should fill the height of
///    its parent. ¿ `ÑF¿ `√¿ `√1/// {@macro flutter.widgets.editableText.expands} ¿ `œÉ¿ c‚¿ c‚Ç„/// The maximum number of characters (Unicode grapheme clusters) to allow in
/// the text field.
///
/// After [maxLength] characters have been input, additional input
/// is ignored, unless [maxLengthEnforcement] is set to
/// [MaxLengthEnforcement.none].
///
/// The TextField enforces the length with a
/// [LengthLimitingTextInputFormatter], which is evaluated after the supplied
/// [inputFormatters], if any.
///
/// This value must be either null or greater than zero. If set to null
/// (the default), there is no limit to the number of characters allowed.
///
/// Whitespace characters (e.g. newline, space, tab) are included in the
/// character count.
///
/// {@macro flutter.services.lengthLimitingTextInputFormatter.maxLength} ¿ cÅä¿ ef¿ efÅI/// Determines how the [maxLength] limit should be enforced.
///
/// If [MaxLengthEnforcement.none] is set, additional input beyond [maxLength]
/// will not be enforced by the limit.
///
/// {@macro flutter.services.textFormatter.effectiveMaxLengthEnforcement}
///
/// {@macro flutter.services.textFormatter.maxLengthEnforcement} ¿ e[¿ e—¿ e—3/// {@macro flutter.widgets.editableText.onChanged} ¿ eﬂc¿ f1¿ f1;/// {@macro flutter.widgets.editableText.onEditingComplete} ¿ fGÅ4¿ gp¿ gpÄ˛/// {@macro flutter.widgets.editableText.onSubmitted}
///
/// See also:
///
///  * [TextInputAction.next] and [TextInputAction.previous], which
///    automatically shift the focus to the next/previous focusable item when
///    the user is done editing. ¿ gÄ^¿ g“¿ g“6/// {@macro flutter.widgets.editableText.onTapOutside} ¿ g„b¿ h7¿ h78/// {@macro flutter.widgets.editableText.onTapUpOutside} ¿ hJk¿ h¶¿ h¶9/// {@macro flutter.widgets.editableText.inputFormatters} ¿ h∫Å¿ i∫¿ i∫ÄÊ/// Disables the text field when false.
///
/// Text fields in disabled states have a light grey background and don't
/// respond to touch events including the [prefix], [suffix] and the clear
/// button.
///
/// Defaults to true. ¿ i∆P¿ j¿ j5/// {@macro flutter.widgets.editableText.cursorWidth} ¿ jS¿ jb¿ jb6/// {@macro flutter.widgets.editableText.cursorHeight} ¿ jsR¿ jπ¿ jπ6/// {@macro flutter.widgets.editableText.cursorRadius} ¿ j b¿ k¿ k?/// {@macro flutter.widgets.editableText.cursorOpacityAnimates} ¿ k1Åv¿ lú¿ lúÅQ/// The color to use when painting the cursor.
///
/// Defaults to the [DefaultSelectionStyle.cursorColor]. If that color is
/// null, it uses the [CupertinoThemeData.primaryColor] of the ambient theme,
/// which itself defaults to [CupertinoColors.activeBlue] in the light theme
/// and [CupertinoColors.activeOrange] in the dark theme. ¿ l¨Äª¿ mS¿ mSÄà/// Controls how tall the selection highlight boxes are computed to be.
///
/// See [ui.BoxHeightStyle] for details on available styles. ¿ mlÄ∏¿ n¿ nÄá/// Controls how wide the selection highlight boxes are computed to be.
///
/// See [ui.BoxWidthStyle] for details on available styles. ¿ n)Ä∏¿ nœ¿ nœÄâ/// The appearance of the keyboard.
///
/// This setting is only honored on iOS devices.
///
/// If null, defaults to [Brightness.light]. ¿ nÊX¿ o1¿ o17/// {@macro flutter.widgets.editableText.scrollPadding} ¿ oCl¿ oï¿ oïD/// {@macro flutter.widgets.editableText.enableInteractiveSelection} ¿ o¥l¿ p¿ p;/// {@macro flutter.widgets.editableText.selectionControls} ¿ p%e¿ py¿ py9/// {@macro flutter.widgets.scrollable.dragStartBehavior} ¿ pèe¿ p‰¿ p‰:/// {@macro flutter.widgets.editableText.scrollController} ¿ p˘\¿ qH¿ qH7/// {@macro flutter.widgets.editableText.scrollPhysics} ¿ q”O¿ r¿ r-/// {@macro flutter.material.textfield.onTap} ¿ r'Ä£¿ rΩ¿ rΩy/// {@macro flutter.widgets.editableText.autofillHints}
/// {@macro flutter.services.AutofillConfiguration.autofillHints} ¿ rœv¿ s9¿ s9X/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge]. ¿ sJS¿ sê¿ sê5/// {@macro flutter.material.textfield.restorationId} ¿ s¢Ä“¿ te¿ te9/// {@macro flutter.widgets.editableText.scribbleEnabled}¿ sﬁ¿ sﬂ¿ sÈ¿ tV¿ sÔ¿ t¿ tyh¿ t…¿ t…B/// {@macro flutter.widgets.editableText.stylusHandwritingEnabled} ¿ tÊ}¿ uF¿ uFR/// {@macro flutter.services.TextInputConfiguration.enableIMEPersonalizedLearning} ¿ uhÄå¿ u◊¿ u◊G/// {@macro flutter.widgets.editableText.contentInsertionConfiguration} ¿ u˘Å.¿ w¿ wÄÁ/// {@macro flutter.widgets.EditableText.contextMenuBuilder}
///
/// If not provided, will build a default menu based on the platform.
///
/// See also:
///
///  * [CupertinoAdaptiveTextSelectionToolbar], which is built by default. ¿ x≈Çô¿ {H¿ {HÇD/// Configuration for the text field magnifier.
///
/// By default (when this property is set to null), a [CupertinoTextMagnifier]
/// is used on mobile platforms, and nothing on desktop platforms. To suppress
/// the magnifier on all platforms, consider passing
/// [TextMagnifierConfiguration.disabled] explicitly.
///
/// {@macro flutter.widgets.magnifier.intro}
///
/// {@tool dartpad}
/// This sample demonstrates how to customize the magnifier that this text field uses.
///
/// ** See code in examples/api/lib/widgets/text_magnifier/text_magnifier.0.dart **
/// {@end-tool} ¿ {cÅ¿ |i¿ |iÄﬁ/// {@macro flutter.widgets.EditableText.spellCheckConfiguration}
///
/// If [SpellCheckConfiguration.misspelledTextStyle] is not specified in this
/// configuration, then [cupertinoMisspelledTextStyle] is used by default. ¿ |ÖÇ/¿ }¸¿ }¸ÅQ/// The [TextStyle] used to indicate misspelled words in the Cupertino style.
///
/// See also:
///  * [SpellCheckConfiguration.misspelledTextStyle], the style configured to
///    mark misspelled words with.
///  * [TextField.materialMisspelledTextStyle], the style configured
///    to mark misspelled words with in the Material style.¿ ~¿ ~$¿ ~≥¿ ~4¿ ~*¿ ~6¿ ~D¿ ~E¿ ~c¿ ~T¿ ~e¿ ~t¿ ~u¿ ~ì¿ ~Ñ¿ ~ï¿ ~®¿ ~©¿ ~πÄˆ¿ Ç¿ ÇÄö/// The color of the selection highlight when the spell check menu is visible.
///
/// Eyeballed from a screenshot taken on an iPhone 11 running iOS 16.2.¿ Z¿ [¿ û¿ £¿ Æ¿ §¿ Ç¡a¿ É¿ É3/// {@macro flutter.widgets.undoHistory.controller} ¿ ôxÇz¿ ô†¿ ô† ¿ ôΩ¿ ô◊¿ õÒ¿ ôÌ¿ ô›¿ ôÔ¿ õÏ¿ qZu¿ q†¿ q†:/// {@macro flutter.widgets.editableText.selectionEnabled}   ¿ w,Åï¿ w:¿ w:  ¿ wZ¿ wh¿ wg  ¿ wt#¿ wá¿ wÜ   ¿ ¥É	¿ Å‡¿ Å‡ÅÙ/// Default builder for the spell check suggestions toolbar in the Cupertino
/// style.
///
/// See also:
///  * [spellCheckConfiguration], where this is typically specified for
///    [CupertinoTextField].
///  * [SpellCheckConfiguration.spellCheckSuggestionsToolbarBuilder], the
///    parameter for which this is the default value for [CupertinoTextField].
///  * [TextField.defaultSpellCheckSuggestionsToolbarBuilder], which is like
///    this but specifies the default for [CupertinoTextField]. ¿ Ç¿ Ç¿ Ç  ¿ Ç*#¿ Ç=¿ Ç<  ¿ ÅΩ¿ Åæ¿ É'R¿ ÉM¿ ÉM   ¿ É'¿ É(¿ É}ï˜¿ Éé¿ Éé  ¿ É¢&¿ Éø¿ Éæ  ¿ É}¿ É~¿ õ˜Éã¿ ú∂¿ ú∂Äõ/// Returns a new [SpellCheckConfiguration] where the given configuration has
/// had any missing values replaced with their defaults for the iOS platform. ¿ ú€&¿ úı¿ úÙ    ¿ üÜ¿ [Q¿ üå¿ üå   ¿ †c-¿ †s¿ †s ¿ †Ö¿ †é¿ †è¿ †ï,¿ †∂¿ †∂  ¿ °#¿ °.¿ °.  ¿ ¢B"¿ ¢G¿ ¢G ¿ ¢_¿ ¢iX¿ ¢°¿ ¢°  ¿ £3_¿ £b¿ £b ¿ £3¿ £4¿ £t¿ £}¿ £è¿ £~¿ £ê¿ £ë¿ †≈Z¿ †ﬂ¿ †ﬂ    ¿ °<V¿ °J¿ °J    ¿ °ñÄ®¿ °Ø¿ °Ø    ¿ £ /¿ £¿ £   ¿ £ ¿ £¿ £óA¿ £¨¿ £¨   ¿ £ó¿ £ò¿ ™»>¿ ™‡¿ ™‡   ¿ ™»¿ ™…¿ ´∑E¿ ´Õ¿ ´Õ    ¿ ≥‘R¿ ≥È¿ ≥È   ¿ ≥‘¿ ≥’¿ µ…Ä«¿ µ“¿ µ“    ¿ ∑qÄ÷¿ ∑á¿ ∑á    ¿ ÀÖ>¿ Àú¿ Àú   ¿ ÀÖ¿ ÀÜ¿ Ã2Çä¿ ÃY¿ ÃY   ¿ Ã2¿ Ã3¿ §Åm¿ §.¿ §.   ¿ §¿ §¿ •éÇ±¿ •ü¿ •ü  ¿ •Ø¿ •√¿ •¬  ¿ •é¿ •è¿ ®CÄò¿ ®T¿ ®T  ¿ ®a¿ ®u¿ ®t  ¿ ®¿ ®Ö¿ ®Ñ  ¿ ®C¿ ®D¿ ®ﬂÄÆ¿ ®‰¿ ®‰    ¿ ©ëÅ3¿ ©ñ¿ ©ñ  ¿ ©Æ¿ ©¡¿ ©¿   ¿ ´
Ä©¿ ´¿ ´   ¿ ´
¿ ´¿ ¨ B¿ ¨¿ ¨    ¿ ¨FÄö¿ ¨K¿ ¨K    ¿ ¨‰ÇÃ¿ ¨È¿ ¨È  ¿ ≠¿ ≠¿ ≠   ¿ Ø¥Ñ¿ Øπ¿ Øπ  ¿ Ø—¿ Ø‡¿ Øﬂ  ¿ ØÍ¿ ∞¿ ∞   ¿ ¥*Å\¿ ¥6¿ ¥6  ¿ ¥R)¿ ¥r¿ ¥q  ¿ ¥Å¿ ¥ê¿ ¥è   ¿ ∏KÅç¿ ∏P¿ ∏P    ¿ π‹Çâ¿ π„¿ π„    ¿ ºiéÓ¿ ºp¿ ºp  ¿ ºí¿ ºö¿ ºô  ¿ º´¿ º∂¿ ºµ  ¿ ºƒ¿ ºœ¿ ºŒ   ¿ À«g¿ Àÿ¿ Àÿ  ¿ À· ¿ ÀÛ¿ ÀÚ  ¿ À«¿ À»¿ ŒË´Ì¿ Œ˚¿ Œ˚  ¿ œ¿ œ¿ œ  ¿ ŒË¿ ŒÈ  äÉUäÙäÙÄÁ/// Visibility of text field overlays based on the state of the current text entry.
///
/// Used to toggle the visibility behavior of the optional decorating widgets
/// surrounding the [EditableText] such as the clear text button.  ãIãRãRA/// Overlay will never appear regardless of the text entry state. ã\Ä“å'å'Ä¬/// Overlay will only appear when the current text entry is not empty.
///
/// This includes prefilled text that the user did not type in manually. But
/// does not include text in placeholders. å3ÄŸççÄ∆/// Overlay will only appear when the current text entry is empty.
///
/// This also includes not having prefilled text that the user did not type
/// in manually. Texts in placeholders are ignored. çHçSçS?/// Always show the overlay regardless of the text entry state.           É°ÄÅÉ±É± ÉÕÉ÷Ñ!É‰É⁄ÉÊÉÉÒÉ˛É˘Ñ ÑÑÑ\ÄΩÑmÑm ÑäÑîÖÑùÑòÑüÑ¥ÑµÑ√ÖÑŒÑ…Ñ–Ñ’Ñ‡Ñ÷ÑÑÁÑÚÑ˜ÖÑ¯ÖÖÖÖÄ¡Ö(Ö( ÖAÖGÖ€ÖNÖKÖPÖtÖnÖvÖòÖîÖöÖΩÖ∏ÖøÖﬂÅÖÛÖÛ $ÜÜ#Ü˚Ü,Ü'Ü.ÜCÜDÜRÜûÜ]ÜXÜ_ÜnÜoÜÉÜzÜÖÜîÜïÜ©Ü£Ü´Ü—Ü≈Ü”ÜﬂÜ‡Ü„Ü¯Ü‰ÜÍÜÎÜÛÜ˜ÜÙÜˇÄÜáá á"á7á8áFáÑáOáJáQáVáaáWáoáfáqáváÅáwàÄîà0à0 àEàZà[àiàßàràmàtàyàÑàzàíàâàîàôà§àöâ’/âﬂâﬂ ää   ÄÆ  package:flutter/material.dart Üö <ÄÜÄ§Ä•Ä’ÄﬁÄﬂÅÅÅ`ÅàÅ±ÅŸÇ ÇÇ0ÇFÇlÇÅÇûÇ∑ÇÊÉÉÉÉAÉ†É°ÉÿÉ˜Ñ!Ñ$Ñ%Ñ\ÑñÑ≈Ñ„ÖÖ
ÖÖÖIÖlÖíÖ∂Ö€ÖﬁÖﬂÜ%ÜTÜvÜúÜ°Ü√Ü˚Ü˛ÜˇáHádáÑáááàáøààkàáàßà™à´àÙâDâkânâπâ’äää[ä_ä≠äÔããPãYãZã£ã©ã¯å%å0å1åvå|å ç çççQç[ç]ç^çóç…é)é?é]é^éáéàéîé≈èèZè£è¡è˙êêoê¡ëëë#ë)ëKëlëpëqë}ë¥ë”ë˙ë˛í ííí"íuíèíìí‰ííÙìDìíìﬁîîî<î@îTî™îﬁî‚ï:ïJïNïüï‚ïÊñ3ñÉñ¬ñ∆ñ¸ó óJóîóòó‘óÿó¯ó¸òLòóòÁô)ôrôvôÑôàôÕöö:öâöùõKõ¨õﬁúúú[úëúóú‰ù!ù'ùuù∆ûû_ûêûñûÂüüügümüπ†
†Y†_†≠†¯°H°ó°™°∞°Í°¢ ¢¢S¢w¢∆££U£r£Å£¢£∑£À£‰§§J§`§ç§∞§ﬁ§Â§ˆ•*•;•o•®•‡¶¶$¶>¶u¶Ö¶ö¶¿¶‹¶Ùßß ßKßÜßåß•ß∫ß÷ß˘®®4®Z®Ä®£®∫®Õ®Á®˚©©.©J©`©w©ê©™©√©ﬂ©ˆ™*™Q™g™†™◊™Ù´)´_´Ö´°´±´Ã´‰¨¨7¨^¨v¨á¨∏¨Ù¨˙≠≠m≠ú≠÷≠¯ÆÆHÆaÆ√Æ‹Ø>ØoØ†ØØØ¸∞0∞:∞I∞Ü∞À∞’±+±^±‚±Ò≤2≤P≤ã≤˝≥≥≥x≥◊≥ÿ¥	¥¥_¥ï¥õ¥Ëµ%µ+µyµ ∂∂c∂î∂ö∂È∑∑#∑k∑q∑Ω∏∏\∏b∏r∏x∏≈∏Èπ8πÄπ«πÔπ˛∫∫4∫H∫a∫v∫§∫∫∫Òªª6ªGª{ª¥ªÏºº0ºJºÅºëº¶ºÃºËΩ ΩΩ,ΩWΩíΩòΩ±Ω∆Ω‚ææ#æ@æfæåæØæ∆æŸæÛøø&ø:øVøløÉøúø∂øœøÎ¿ @¿ @6¿ @]¿ @s¿ @¨¿ @„¿ A ¿ A5¿ Ak¿ Aë¿ A≠¿ AΩ¿ Aÿ¿ A¿ B¿ BC¿ Bj¿ BÇ¿ Bì¿ Bƒ¿ C ¿ C¿ C'¿ CQ¿ CÄ¿ C∫¿ C‹¿ C˝¿ D,¿ DE¿ Dß¿ D¿¿ E"¿ ES¿ EÑ¿ Eì¿ E‡¿ F¿ F¿ F-¿ Fj¿ FØ¿ Fπ¿ G¿ GB¿ G∆¿ G’¿ H¿ H4¿ Ho¿ H·¿ HÎ¿ I¿ I\¿ Iª¿ Iº¿ I¿ J¿ J	¿ J/¿ J5¿ J}¿ J®¿ J©¿ Jÿ¿ Jˆ¿ J˜¿ K<¿ KB¿ Kì¿ K¨¿ Kœ¿ K–¿ L¿ LZ¿ L`¿ L¶¿ L ¿ LÀ¿ M¿ MI¿ MO¿ M}¿ MÉ¿ M—¿ N¿ N8¿ N9¿ Nj¿ Np¿ N¡¿ O	¿ O-¿ O3¿ OÄ¿ OÜ¿ O⁄¿ Oˇ¿ P ¿ P7¿ PO¿ PP¿ Põ¿ P‘¿ P⁄¿ Q¿ Q¿ Q=¿ Qg¿ Qh¿ Qû¿ Q∂¿ Q∑¿ R¿ R;¿ RA¿ Rs¿ Ry¿ R§¿ RŒ¿ Rœ¿ S5¿ S;¿ Sj¿ Sp¿ S≤¿ S·¿ S‚¿ T(¿ T.¿ Tr¿ Të¿ Tó¿ T“¿ Tÿ¿ U	¿ U8¿ U9¿ U¿ UÖ¿ U’¿ U¯¿ V"¿ V#¿ V\¿ VÄ¿ VÅ¿ V∫¿ V¿¿ W¿ WG¿ Wq¿ Wr¿ W±¿ W‡¿ W·¿ X¿ X¿ XY¿ X_¿ X¨¿ X∆¿ X«¿ X˛¿ Y¿ Y¿ YU¿ Yr¿ Ys¿ Yõ¿ Y°¿ YÒ¿ Z9¿ Zj¿ Zy¿ Z¢¿ Z€¿ Zﬂ¿ [¿ [¿ [I¿ [w¿ [x¿ [≤¿ [ÿ¿ [Ÿ¿ \¿ \%¿ \&¿ \]¿ \w¿ \x¿ \Æ¿ \∆¿ \«¿ ]¿ ])¿ ]*¿ ]b¿ ]|¿ ]}¿ ]µ¿ ]œ¿ ]–¿ ^¿ ^@¿ ^A¿ ^à¿ ^±¿ ^≤¿ ^˚¿ _¿ _¿ _Q¿ _¢¿ _∑¿ _Œ¿ _œ¿ `¿ `U¿ `j¿ `Å¿ `Ç¿ `∂¿ `Ã¿ `Õ¿ a¿ a2¿ a8¿ a}¿ a∑¿ a⁄¿ a‡¿ b¿ b_¿ bÄ¿ bÜ¿ b–¿ c¿ c"¿ cm¿ cÑ¿ cä¿ c’¿ cÌ¿ cÓ¿ d-¿ d3¿ dÑ¿ d≠¿ d≥¿ dˇ¿ e¿ eH¿ e|¿ e}¿ e≥¿ e‹¿ e›¿ f¿ fD¿ fE¿ f}¿ fÉ¿ fì¿ fô¿ fﬂ¿ g/¿ gR¿ g}¿ g~¿ g∑¿ g‡¿ g·¿ h¿ hG¿ hH¿ hÑ¿ h∑¿ h∏¿ h‚¿ hË¿ i4¿ iÅ¿ iè¿ iï¿ i≠¿ i√¿ iƒ¿ i¸¿ j¿ j¿ jR¿ jp¿ jq¿ j™¿ j«¿ j»¿ k
¿ k.¿ k/¿ k`¿ kf¿ k≤¿ l¿ lQ¿ lç¿ l©¿ l™¿ lÙ¿ l˙¿ m9¿ mi¿ mj¿ m¥¿ m∫¿ m¯¿ n&¿ n'¿ nM¿ nS¿ nÜ¿ nå¿ nª¿ n„¿ n‰¿ o¿ o@¿ oA¿ oà¿ o±¿ o≤¿ o¿ p"¿ p#¿ p_¿ på¿ pç¿ p ¿ pˆ¿ p˜¿ q1¿ qW¿ qX¿ qï¿ q–¿ q—¿ r¿ r$¿ r%¿ r_¿ r£¿ rÃ¿ rÕ¿ s¿ s	¿ s,¿ sG¿ sH¿ sÄ¿ sü¿ s†¿ s‹¿ sÎ¿ t¿ tT¿ tX¿ tv¿ tw¿ tº¿ t„¿ t‰¿ u9¿ ue¿ uf¿ u∞¿ uˆ¿ u˜¿ v6¿ v<¿ vÑ¿ vä¿ vö¿ v†¿ vÌ¿ w)¿ w*¿ wV¿ wp¿ wô¿ wü¿ x ¿ xS¿ xY¿ xæ¿ x¬¿ x√¿ xı¿ x˚¿ yL¿ yù¿ y‘¿ z¿ z¿ zA¿ zG¿ z]¿ z∂¿ zº¿ {¿ {$¿ {`¿ {a¿ {•¿ {´¿ {˚¿ |H¿ |Ç¿ |É¿ |”¿ |Ÿ¿ |È¿ }9¿ }^¿ }•¿ }„¿ ~&¿ ~P¿ ~Ä¿ ~±¿ ~∂¿ ~∑¿ ¿ ¿ X¿ m¿ ±¿ ≤¿ Ä¿ Ä¿ Ä¿ Ä$¿ Än¿ Äç¿ ÄŸ¿ Å*¿ Åy¿ Åª¿ Å–¿ Ç¿ Ç&¿ ÇO¿ ÇU¿ Ç∫¿ Çæ¿ Çø¿ Çı¿ É$¿ É%¿ É1¿ Éz¿ É{¿ Éá¿ ÉÃ¿ É˜¿ Ñ¿ Ñk¿ Ñr¿ Ñ“¿ ÑÊ¿ Ö¿ Ö2¿ ÖJ¿ Öf¿ Öo¿ Öv¿ Ö»¿ Ü¿ ÜY¿ Ü≥¿ Ü«¿ á'¿ á.¿ áB¿ á¢¿ á©¿ à¿ à!¿ àz¿ àÅ¿ àï¿ àø¿ à◊¿ àÌ¿ â¿ â ¿ â'¿ â¿ â€¿ âÔ¿ äO¿ äV¿ ä∂¿ ã¿ ã)¿ ãN¿ ãi¿ ãÇ¿ ã⁄¿ ã„¿ ãÍ¿ ã˛¿ å#¿ å>¿ åW¿ åØ¿ å∏¿ åø¿ å”¿ ç0¿ ç7¿ ç¿ ç ¿ é"¿ éo¿ éÉ¿ é≠¿ éÕ¿ éÎ¿ è¿ è¿ è¿ èj¿ è¿¿ ê#¿ ê7¿ êú¿ ê£¿ ë¿ ë¿ ë-¿ ëI¿ ëj¿ ëÜ¿ ë≠¿ ë∂¿ ëΩ¿ ë—¿ í¿ í ¿ í;¿ íW¿ í`¿ íg¿ í{¿ í®¿ íƒ¿ íﬁ¿ í˙¿ ì¿ ì
¿ ì¿ ì|¿ ìÉ¿ ìÁ¿ ì˚¿ î)¿ îF¿ îa¿ î}¿ îÜ¿ îç¿ îÚ¿ ï¿ ïb¿ ïi¿ ï}¿ ï÷¿ ï›¿ ïÒ¿ ñ¿ ñ6¿ ñX¿ ñú¿ ñ•¿ ñ¨¿ ñ¿¿ ñ·¿ ó
¿ ó1¿ óM¿ óV¿ ó]¿ óq¿ ó•¿ ó»¿ óÈ¿ ò¿ ò¿ ò¿ ò)¿ òR¿ òt¿ ò¡¿ ò◊¿ ô	¿ ô,¿ ôa¿ ôj¿ ôq¿ ôu¿ ôv¿ ôŸ¿ ôÒ¿ ö¿ ö3¿ öe¿ öm¿ öî¿ öπ¿ ö⁄¿ õ9¿ õ^¿ õÅ¿ õ§¿ õ…¿ õ‡¿ õË¿ õÔ¿ õÙ¿ õı¿ úE¿ úï¿ ú◊¿ ù¿ ù	¿ ùg¿ ùû¿ ù§¿ ù•¿ ù»¿ ù„¿ ûC¿ ûc¿ û≈¿ û¿ ü/¿ üx¿ ü¿ üÉ¿ üÖ¿ üÜ¿ ü«¿ †¿ †a¿ †í¿ †ì¿ †√¿ ° ¿ °!¿ °:¿ °ì¿ °î¿ °—¿ °ˆ¿ ¢?¿ ¢@¿ ¢f¿ ¢g¿ ¢√¿ ¢ƒ¿ ¢˛¿ £
¿ £0¿ £1¿ £=¿ £î¿ £ï¿ £°¿ £Ÿ¿ §¿ §¿ §'¿ §<¿ §S¿ §Æ¿ §¡¿ §»¿ §Ì¿ •¿ •¿ •M¿ •á¿ •ã¿ •å¿ •ò¿ •œ¿ •ı¿ ¶:¿ ¶u¿ ¶¡¿ ¶¿ ß¿ ß(¿ ß.¿ ß/¿ ßb¿ ß≤¿ ß¸¿ ®¿ ®<¿ ®@¿ ®A¿ ®M¿ ®ñ¿ ®µ¿ ®“¿ ®ÿ¿ ®‹¿ ®›¿ ®¸¿ ©¿ ©U¿ ©ä¿ ©é¿ ©è¿ © ¿ ©Î¿ ©˝¿ ™¿ ™C¿ ™É¿ ™û¿ ™ª¿ ™¡¿ ™≈¿ ™∆¿ ™“¿ ´¿ ´¿ ´¿ ´'¿ ´d¿ ´¿ ´õ¿ ´∞¿ ´¥¿ ´µ¿ ´˝¿ ´˛¿ ¨¿ ¨?¿ ¨C¿ ¨D¿ ¨c¿ ¨u¿ ¨¡¿ ¨’¿ ¨›¿ ¨·¿ ¨‚¿ ≠%¿ ≠s¿ ≠≥¿ ≠˚¿ Æ¿ Æ¿ Æ¿ Æ\¿ Æí¿ Æ¶¿ Æ¨¿ Æ≠¿ Æ‡¿ ÆÙ¿ Æ˙¿ Æ˚¿ Ø7¿ ØJ¿ ØP¿ ØQ¿ ØÅ¿ Øî¿ Øö¿ Øõ¿ Ø≠¿ Ø±¿ Ø≤¿ ∞
¿ ∞X¿ ∞ï¿ ∞©¿ ∞„¿ ∞Ì¿ ∞Û¿ ∞Ù¿ ±¿ ±8¿ ±Y¿ ±z¿ ±ù¿ ±¿¿ ±„¿ ≤¿ ≤T¿ ≤^¿ ≤d¿ ≤e¿ ≤ä¿ ≤©¿ ≤Ã¿ ≤Ô¿ ≤˛¿ ≥¿ ≥@¿ ≥c¿ ≥ñ¿ ≥Ω¿ ≥«¿ ≥Õ¿ ≥—¿ ≥“¿ ≥ﬁ¿ ¥'¿ ¥(¿ ¥N¿ ¥}¿ ¥ò¿ ¥ü¿ ¥¿¿ ¥Ï¿ µ¿ µH¿ µ|¿ µÉ¿ µá¿ µà¿ µ«¿ µ„¿ ∂¿ ∂M¿ ∂n¿ ∂ç¿ ∂ë¿ ∂í¿ ∂ÿ¿ ∑'¿ ∑o¿ ∑ú¿ ∑»¿ ∑¿ ∑ˆ¿ ∏D¿ ∏H¿ ∏I¿ ∏i¿ ∏®¿ ∏ ¿ ∏›¿ π,¿ πx¿ πñ¿ πœ¿ π’¿ πŸ¿ π⁄¿ π˘¿ ∫¿ ∫w¿ ∫x¿ ∫é¿ ∫¢¿ ∫ª¿ ∫Ÿ¿ ∫˜¿ ª4¿ ªL¿ ªå¿ ª£¿ ª”¿ ªÎ¿ º:¿ ºG¿ ºR¿ º[¿ ºb¿ ºf¿ ºg¿ ºé¿ ºß¿ º¿¿ º‡¿ ºÊ¿ Ω5¿ ΩB¿ Ω]¿ Ωx¿ Ω~¿ Ω¿ Ω¿¿ Ωı¿ æ"¿ æ=¿ æã¿ ææ¿ æ˙¿ ø¿ øB¿ øY¿ ø°¿ øø¿ øÍ¿ ¿¿ ¿7¿ ¿\¿ ¿¿ ¿´¿ ¿œ¿ ¿˛¿ ¡!¿ ¡J¿ ¡ü¿ ¡Û¿ ¬F¿ ¬ñ¿ ¬œ¿ √¿ √M¿ √~¿ √≥¿ √Ã¿ √„¿ √¯¿ ƒ¿ ƒ¿ ƒ1¿ ƒÑ¿ ƒ§¿ ƒº¿ ƒΩ¿ ≈¿ ≈K¿ ≈t¿ ≈ê¿ ≈õ¿ ≈◊¿ ∆¿ ∆!¿ ∆,¿ ∆~¿ ∆†¿ ∆ ¿ «
¿ «:¿ «E¿ «Y¿ «í¿ «∞¿ »¿ »)¿ »]¿ »∂¿ »–¿ »Ê¿ …¿ …T¿ …¶¿ …∆¿  ¿  K¿  Ä¿  ÿ¿  È¿  ¯¿ À,¿ À9¿ ÀD¿ ÀM¿ ÀT¿ ÀX¿ ÀY¿ ÀÉ¿ Àè¿ Àƒ¿ À≈¿ À—¿ Ã/¿ Ã0¿ Ã<¿ Ãr¿ Ã…¿ Õ¿ Õ¿ ÕD¿ Õp¿ Õú¿ Õ€¿ Œ¿ Œ¿ ŒC¿ ŒD¿ Œ~¿ Œ≤¿ Œπ¿ ŒΩ¿ ŒÂ¿ ŒÊ¿ ŒÚ¿ œ¿ œY¿ œã¿ œŒ¿ œœ¿ –¿ –O¿ –Ç¿ –ß¿ –∆¿ –È¿ —¿ —T¿ —u¿ —ñ¿ —π¿ “¿ “7¿ “è¿ “Â¿ ”¿ ”!¿ ”,¿ ”[¿ ”Ñ¿ ”è¿ ”ï¿ ”ñ¿ ”ø¿ ”Á¿ ‘8¿ ‘A¿ ‘H¿ ‘é¿ ‘∞¿ ‘‘¿ ‘˛¿ ’¿ ’Z¿ ’e¿ ’l¿ ’±¿ ’≤¿ ’Ô¿ ÷>¿ ÷°¿ ÷®¿ ÷©¿ ÷˝¿ ÷˛¿ ◊Q¿ ◊´¿ ◊Ê¿ ÿ¿ ÿ)¿ ÿ2¿ ÿ9¿ ÿ:¿ ÿå¿ ÿç¿ ÿ∑¿ Ÿ¿ Ÿ ¿ ŸL¿ Ÿõ¿ ŸÆ¿ Ÿª¿ Ÿ€¿ Ÿ‹¿ ⁄:¿ ⁄;¿ ⁄Ç¿ ⁄¢¿ ⁄±¿ ⁄∏¿ ⁄π¿ ⁄Ú¿ €"¿ €>¿ €t¿ €õ¿ €Æ¿ ‹¿ ‹¿ ‹¿ ‹&¿ ‹M¿ ‹d¿ ‹|¿ ‹∞¿ ‹Ê¿ › ¿ ›X¿ ›i¿ ›o¿ ›p¿ ›æ¿ ﬁ
¿ ﬁ(¿ ﬁ5¿ ﬁG¿ ﬁg¿ ﬁÆ¿ ﬁ–¿ ﬁˇ¿ ﬂ¿ ﬂ¿ ﬂ(¿ ﬂT¿ ﬂê¿ ﬂ£¿ ﬂ∞¿ ﬂÚ¿ ﬂÛ¿ ‡B¿ ‡í¿ ‡Ω¿ ‡˘¿ ·U¿ ·V¿ ·Å¿ ·†¿ ·æ¿ ·Ë¿ ‚¿ ‚!¿ ‚C¿ ‚g¿ ‚ö¿ ‚Õ¿ „ ¿ „+¿ „d¿ „ê¿ „ø¿ „Ù¿ ‰/¿ ‰M¿ ‰x¿ ‰°¿ ‰“¿ ‰˚¿ Â6¿ Âc¿ Âê¿ Â≈¿ Â˙¿ Ê3¿ ÊZ¿ ÊÅ¿ Ê¶¿ Ê ¿ Á*¿ Á{¿ ÁÕ¿ Ë$¿ ËI¿ Ër¿ Ë´¿ Ë‰¿ È¿ È@¿ Èi¿ Èì¿ È¿¿ ÈÔ¿ Í¿ ÍD¿ ÍÖ¿ Í≠¿ Í’¿ Î¿ ÎP¿ Î|¿ Îì¿ Î¢¿ Î·¿ Ï¿ ÏO¿ ÏÉ¿ Ïº¿ ÏÛ¿ Ì$¿ Ìo¿ Ìë¿ Ì¿¿ ÌÁ¿ Ó¿ Óc¿ Ó¥¿ Ô¿ Ô@¿ Ô~¿ Ôã¿ Ôñ¿ Ôü¿ Ô¶¿ Ôß¿ ÔΩ¿ Ô’¿ Ô‚¿ ¿ ¿ 2¿ g¿ …¿ €¿ ˇ¿ Ò¿ ÒT¿ Òò¿ Òß¿ Òπ¿ ÒŒ¿ ÒÊ¿ Ú¿ Úy¿ Ú—¿ Û#¿ Û{¿ Ûœ¿ Û‚¿ Û„¿ Ù?¿ Ùu¿ Ù§¿ Ù˘¿ ıM¿ ı¢¿ ı˜¿ ˆJ¿ ˆÅ¿ ˆñ¿ ˆÊ¿ ˜5¿ ˜à¿ ˜Ø¿ ˜’¿ ˜Á¿ ˜˜¿ ¯¿ ¯.¿ ¯L¿ ¯j¿ ¯Ü¿ ¯≥¿ ˘¿ ˘P¿ ˘Ö¿ ˘°¿ ˘„¿ ˙¿ ˙(¿ ˙ä¿ ˙õ¿ ˙™¿ ˙∑¿ ˙¬¿ ˙À¿ ˙“¿ ˙÷¿ ˙ÿ   _kDefaultPlaceholderStyle_kDefaultRoundedBorderSide_kDefaultRoundedBorder _kDefaultRoundedBorderDecoration_kDisabledBackground_kClearButtonColor _iOSHorizontalCursorOffsetPixelsOverlayVisibilityMode2_CupertinoTextFieldSelectionGestureDetectorBuilderCupertinoTextField_CupertinoTextFieldState  >2